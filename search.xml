<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Saas解释</title>
      <link href="/2022/07/20/Saas%E8%A7%A3%E9%87%8A/"/>
      <url>/2022/07/20/Saas%E8%A7%A3%E9%87%8A/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.zhihu.com/question/35087138/answer/948548254">如何向小白解释什么是 SaaS？ - 简道云的回答 - 知乎</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Saas,linux,测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>播放器测试</title>
      <link href="/2022/07/18/%E6%92%AD%E6%94%BE%E5%99%A8%E6%B5%8B%E8%AF%95/"/>
      <url>/2022/07/18/%E6%92%AD%E6%94%BE%E5%99%A8%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<!-- 简单示例 (id, server, type)  -->    <div id="aplayer-QnLtiJsQ" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="2597489971" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><!-- 进阶示例 -->    <div id="aplayer-bQvsAURJ" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="2597489971" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="true" data-mutex="false" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86"    ></div>]]></content>
      
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>B站视频嵌入测试</title>
      <link href="/2022/07/17/B%E7%AB%99%E8%A7%86%E9%A2%91%E5%B5%8C%E5%85%A5%E6%B5%8B%E8%AF%95/"/>
      <url>/2022/07/17/B%E7%AB%99%E8%A7%86%E9%A2%91%E5%B5%8C%E5%85%A5%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<div align=center class="aspect-ratio">    <!-- <iframe src="https://www.bilibili.com/video/BV1U54y1H7YD?spm_id_from=333.999.0.0&vd_source=6b896a4b15e13fcb7be61dea153dfc50"  -->    <iframe src="//player.bilibili.com/player.html?aid=846339150&bvid=BV1U54y1H7YD&cid=359755128&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>    scrolling="no"     border="0"     frameborder="no"     framespacing="0"     high_quality=1    danmaku=1     allowfullscreen="true">     </iframe></div>]]></content>
      
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RHCA学习笔记|RH358</title>
      <link href="/2022/07/12/RHCA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-RH358/"/>
      <url>/2022/07/12/RHCA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-RH358/</url>
      
        <content type="html"><![CDATA[<h1 id="Red-Hat-Services-Management-and-Automation"><a href="#Red-Hat-Services-Management-and-Automation" class="headerlink" title="Red Hat Services Management and Automation"></a>Red Hat Services Management and Automation</h1><blockquote><ul><li><p>Service &#x2F; RHCE7</p><ul><li>man</li><li>–help</li></ul></li><li><p>Ansible &#x2F; RHCE8</p><ul><li><p><a href="https://docs.ansible.com/ansible/2.8/index.html#">https://docs.ansible.com/ansible/2.8/index.html#</a></p><ul><li><a href="https://docs.ansible.com/ansible/2.9/reference_appendices/playbooks_keywords.html">keywords</a><ul><li>name</li><li>hosts</li><li>tasks</li><li>vars</li><li>loop(for)</li></ul></li><li><a href="https://docs.ansible.com/ansible/2.9/modules/modules_by_category.html">Module Index</a></li></ul></li><li><p>ansible-doc</p><ul><li>&#96;&#96;&#96;bash<br>$ ansible-doc -l | grep KEYWORD<br>$ ansible-doc MODULE-NAME<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">本课程基于</span><br><span class="line"></span><br><span class="line">- 红帽 Ansible 引擎 2.9</span><br><span class="line"></span><br><span class="line">- 红帽企业 Linux 8.1</span><br><span class="line"></span><br><span class="line">**[kiosk@foundation]**</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line">$ ls /content/courses/rh358/rhel8.1/grading-scripts/</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul></blockquote><h2 id="1-管理网络服务"><a href="#1-管理网络服务" class="headerlink" title="1 管理网络服务"></a>1 管理网络服务</h2><blockquote><ul><li>Systemd回顾</li><li>NetworkManager回顾</li><li>自动化配置服务和网络接口</li></ul></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">-RHEL&gt;=7 /pid=1=systemd</span><br><span class="line"><span class="comment"># systemctl list-unit-files | grep KEYWORD</span></span><br><span class="line"><span class="comment"># systemctl status KEYWORD</span></span><br><span class="line"></span><br><span class="line">* <span class="comment"># systemctl enable --now DAEMON</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl enable DAEMON</span></span><br><span class="line">* <span class="comment"># systemctl restart DAEMON</span></span><br><span class="line"><span class="comment"># systemctl status DAEMON</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl get-default</span></span><br><span class="line"><span class="comment"># systemctl -t target</span></span><br><span class="line">-CLI</span><br><span class="line"><span class="comment"># systemctl isolate multi-user.target# init 3</span></span><br><span class="line">-GUI</span><br><span class="line"><span class="comment"># systemctl isolate graphical.target# init 5</span></span><br><span class="line"><span class="comment"># systemctl set-default multi-user.target</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl list-dependencies graphical.target  | grep target</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl status crond.service </span></span><br><span class="line"><span class="comment"># systemctl stop crond.service </span></span><br><span class="line"><span class="comment"># systemctl mask crond.service </span></span><br><span class="line"><span class="comment"># systemctl is-active crond.service </span></span><br><span class="line"><span class="comment"># systemctl start crond</span></span><br><span class="line"><span class="comment"># systemctl unmask crond.service </span></span><br><span class="line"><span class="comment"># systemctl start crond</span></span><br><span class="line"><span class="comment"># systemctl is-active crond.service</span></span><br></pre></td></tr></table></figure><h4 id="Controlling-Network-Services"><a href="#Controlling-Network-Services" class="headerlink" title="Controlling Network Services"></a><strong>Controlling Network Services</strong></h4><blockquote><ul><li><p><strong>doc</strong></p><p># grep -r BOOPRO &#x2F;usr&#x2F;share<br># vim &#x2F;usr&#x2F;share&#x2F;doc&#x2F;initscripts&#x2F;sysconfig.txt</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">USERCTL</span>=<span class="literal">yes</span>|<span class="literal">no</span></span><br></pre></td></tr></table></figure></li><li><p><strong>man</strong><br># man -k ifcfg<br># man nm-settings-ifcfg-rh</p></li></ul></blockquote><p><strong>[student@workstation ~]</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ lab servicemgmt-netservice start</span><br></pre></td></tr></table></figure><hr><p><strong>[root@workstation]</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl status chronyd</span></span><br><span class="line"><span class="comment"># systemctl restart chronyd</span></span><br><span class="line"><span class="comment"># systemctl status chronyd</span></span><br></pre></td></tr></table></figure><p><strong>[root@servera]</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl status chronyd</span></span><br><span class="line"><span class="comment"># systemctl start chronyd</span></span><br><span class="line"><span class="comment"># systemctl status chronyd</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl is-enabled chronyd</span></span><br><span class="line"><span class="comment"># reboot</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl is-active chronyd</span></span><br></pre></td></tr></table></figure><p><strong>[student@workstation ~]</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ lab servicemgmt-netservice finish</span><br></pre></td></tr></table></figure><h4 id="Configuring-Network-Interfaces"><a href="#Configuring-Network-Interfaces" class="headerlink" title="Configuring Network Interfaces"></a><strong>Configuring Network Interfaces</strong></h4><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ MANWIDTH=120 man nmcli | grep nmcli.*add</span><br></pre></td></tr></table></figure></blockquote><p><strong>[student@workstation ~]</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ lab servicemgmt-netreview start</span><br></pre></td></tr></table></figure><p><strong>[root@servera]</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ip link</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># nmcli con show</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># nmcli con add con-name eth1 \</span></span><br><span class="line"><span class="built_in">type</span> ethernet \</span><br><span class="line">ifname eth1</span><br><span class="line"></span><br><span class="line"><span class="comment"># nmcli con show</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># nmcli con mod eth1 ipv4.addresses 192.168.0.1/24 \</span></span><br><span class="line">ipv4.method manual</span><br><span class="line"><span class="comment"># cat /etc/sysconfig/network-scripts/ifcfg-eth1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># nmcli con up eth1</span></span><br><span class="line"><span class="comment"># ip addr show dev eth1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ping -c 2 192.168.0.1</span></span><br><span class="line"><span class="comment"># echo $?</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ip route</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cat /etc/resolv.conf</span></span><br></pre></td></tr></table></figure><p><strong>[student@workstation ~]</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ lab servicemgmt-netreview finish</span><br></pre></td></tr></table></figure><h4 id="指导练习-自动化配置服务和网络接口"><a href="#指导练习-自动化配置服务和网络接口" class="headerlink" title="指导练习: 自动化配置服务和网络接口"></a><strong style='color: #1A97D5'>指导练习: 自动化配置服务和网络接口</strong></h4><blockquote><ul><li>roles:<br>- rhel-system-roles.<code>network</code> </li><li>-m <code>shell</code> -a ‘nmcli …’</li><li>-m <code>nmcli</code> -a ‘…’                            # pkg</li></ul></blockquote><hr><p><strong>[student@workstation]</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ lab servicemgmt-automation start</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible-playbook confignet.yml</span><br></pre></td></tr></table></figure><p><strong>[student@workstation]</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ lab servicemgmt-automation finish</span><br></pre></td></tr></table></figure><h2 id="2-配置网络聚合-配置网络Team"><a href="#2-配置网络聚合-配置网络Team" class="headerlink" title="2 配置网络聚合 配置网络Team"></a>2 配置网络聚合 配置网络Team</h2><blockquote><ul><li>管理网络Team</li><li>自动化网络Team</li></ul></blockquote><blockquote><p>带外管理，vnc</p></blockquote><blockquote><p>VIP - [ eth0 + eth1 ]</p><p>RHEL&lt;&#x3D;6 <code>bond</code>, RHEL&gt;&#x3D;7 <code>team</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># man -k nmcli</span></span><br><span class="line"><span class="comment"># man nmcli-examples | grep -A 2 nmcli.*team</span></span><br><span class="line">  $ nmcli con add <span class="built_in">type</span> team con-name `Team1` ifname `Team1` config `team1-master-json.conf`</span><br><span class="line">  $ nmcli con add <span class="built_in">type</span> ethernet con-name Team1-slave1 ifname `em1` master `Team1`</span><br><span class="line">  $ nmcli con add <span class="built_in">type</span> ethernet con-name Team1-slave2 ifname `em2` master `Team1`</span><br><span class="line">  </span><br><span class="line"><span class="comment"># man -k team</span></span><br><span class="line"><span class="comment"># man teamd.conf | grep backup</span></span><br><span class="line">  <span class="string">&quot;runner&quot;</span>: &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;activebackup&quot;</span>&#125;,</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-RHEL=7</span><br><span class="line"><span class="comment"># nmcli con add \</span></span><br><span class="line"><span class="built_in">type</span> team \</span><br><span class="line">con-name Team1 \</span><br><span class="line">ifname Team1 \</span><br><span class="line">config <span class="string">&#x27;&quot;runner&quot;: &#123;&quot;name&quot;: &quot;activebackup&quot;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">-RHEL=8</span><br><span class="line"><span class="comment"># nmcli con add type team con-name Team1 ifname Team1 team.runner activebackup</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># nmcli con add type ethernet con-name Team1-slave1 ifname eth1 master Team1</span></span><br><span class="line"><span class="comment"># nmcli con add type ethernet con-name Team1-slave2 ifname eth2 master Team1</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># nmcli dev status </span></span><br><span class="line"><span class="comment"># ls /etc/sysconfig/network-scripts/ifcfg-*</span></span><br><span class="line"><span class="comment"># nmcli connection up Team1-slave1</span></span><br><span class="line"><span class="comment"># nmcli connection up Team1-slave2</span></span><br><span class="line"><span class="comment"># nmcli dev status </span></span><br><span class="line"><span class="comment"># cat -n /etc/sysconfig/network-scripts/ifcfg-Team1</span></span><br><span class="line"><span class="comment"># man nmcli | grep nmcli.*mod</span></span><br><span class="line"><span class="comment"># nmcli connection mod Team1 ipv4.method manual ipv4.addresses 10.1.1.1/8</span></span><br><span class="line"><span class="comment"># nmcli connection up Team1</span></span><br><span class="line"><span class="comment"># ip a s | grep -w inet</span></span><br><span class="line"><span class="comment"># ping -c 4 10.1.1.1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># teamdctl Team1 state</span></span><br><span class="line"><span class="comment"># nmcli connection down Team1-slave1</span></span><br><span class="line"><span class="comment"># teamdctl Team1 state</span></span><br><span class="line"><span class="comment"># ping -c 4 10.1.1.1</span></span><br></pre></td></tr></table></figure><h2 id="3-管理DNS和DNS服务器"><a href="#3-管理DNS和DNS服务器" class="headerlink" title="3 管理DNS和DNS服务器"></a>3 管理DNS和DNS服务器</h2><h3 id="DNS（domain-name-system）概念"><a href="#DNS（domain-name-system）概念" class="headerlink" title="DNS（domain name system）概念"></a>DNS（domain name system）概念</h3><ul><li><p>早期使用hosts文件解析域名</p><p>具有主机名称重复、维护困难等困难</p></li><li><p>使用分布式&#x2F;层次性较强的DNS解决调度时，高并发也不会出现问题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">8.8.8.8</span><br><span class="line">114.114.114.114</span><br></pre></td></tr></table></figure></li></ul><h3 id="DNS作用"><a href="#DNS作用" class="headerlink" title="DNS作用"></a>DNS作用</h3><ul><li><p>正向解析：根据主机名称（域名）查找对应ip</p></li><li><p>反向解析：根据ip查找对应的主机域名</p></li></ul><h3 id="域名空间机构"><a href="#域名空间机构" class="headerlink" title="域名空间机构"></a>域名空间机构</h3><p>分布式&#x2F;层次性的体现</p><blockquote><p><code>.</code> 根域</p><p><code>com.</code> 顶级域（包括 组织域.org、国家域&#x2F;地区域、反向域）</p><p><code>mi.com.</code>二级域</p><p><code>mail.mi.com.</code>三级域（或主机名）</p><blockquote><p>如果顶级域不算的话，往下就是一级域二级域。</p></blockquote><p>主机名.DNS后缀 &#x3D; FQDN（完全合格域名）</p><p>如：FQDN<a href="http://www.mi.com/">www.mi.com</a>.</p></blockquote><h3 id="DNS查询过程"><a href="#DNS查询过程" class="headerlink" title="DNS查询过程"></a>DNS查询过程</h3><blockquote><p>DNS解析</p><ul><li>递归查询，一级一级查找</li><li>迭代查询，并行</li></ul></blockquote><h3 id="DNS查询过程-1"><a href="#DNS查询过程-1" class="headerlink" title="DNS查询过程"></a>DNS查询过程</h3><blockquote><p>从查询方式上分：</p><ul><li>递归查询：客户端得到结果只能是成功或失败</li><li>迭代查询：服务器以最佳结果作答</li></ul><p>从查询内容上分：</p><ul><li>正向查询：由域名查找IP</li><li>反向查询：由IP查找域名</li></ul></blockquote><h3 id="DNS资源记录"><a href="#DNS资源记录" class="headerlink" title="DNS资源记录"></a>DNS资源记录</h3><blockquote></blockquote><blockquote><ul><li>&#x2F;etc&#x2F;hosts</li><li>&#x2F;etc&#x2F;resolv.conf</li></ul></blockquote><blockquote><ul><li>描述DNS服务</li><li>使用Unbound配置缓存名称服务器</li><li>排故DNS问题<ul><li><strong>host</strong> <a href="http://www.mi.com/">www.mi.com</a>,<br>host 172.25.254.250 172.25.254.254</li><li>nslookup <a href="http://www.mi.com/">www.mi.com</a>,<br>nslookup 172.25.254.250  172.25.254.254</li><li>dig <a href="http://www.mi.com/">www.mi.com</a> ,<br>dig -x 172.25.254.250  @172.25.254.254</li></ul></li><li>:triangular_flag_on_post: 使用BIND 9配置权威名称服务器</li><li>自动化配置DNS</li></ul></blockquote><table><thead><tr><th align="center">ID</th><th align="center">TYPE</th><th align="center">主配置文件*2</th><th align="center">区域文件（正向|反向）*2</th><th align="center">operation</th><th align="center">PKG</th></tr></thead><tbody><tr><td align="center">1</td><td align="center"><strong>Master</strong></td><td align="center">Y</td><td align="center">Y</td><td align="center">edit</td><td align="center">bind</td></tr><tr><td align="center">2</td><td align="center">Slave</td><td align="center">Y</td><td align="center">N</td><td align="center">copy</td><td align="center">bind</td></tr><tr><td align="center">3</td><td align="center">Cache</td><td align="center">Y</td><td align="center">N</td><td align="center">-</td><td align="center">unbound</td></tr><tr><td align="center">4</td><td align="center">Forward</td><td align="center">Y</td><td align="center">N</td><td align="center">-</td><td align="center">bind</td></tr></tbody></table><blockquote><p>$ hostname -s<kbd>Enter</kbd>www</p></blockquote><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ grep ^hosts /etc/nsswitch.conf</span><br><span class="line">hosts:      files dns myhostname</span><br><span class="line"></span><br><span class="line">- files = hosts</span><br><span class="line">- dns = resolve.conf</span><br></pre></td></tr></table></figure><ul><li>hosts<ul><li>Linux, MacOS - &#x2F;etc&#x2F;hosts</li><li>Windows - C:\windows\system32\drivers\etc\hosts</li></ul></li><li>dns<ul><li>permanent <ul><li>$ nmcli con mod CN ipv4.dns 8.8.8.8</li></ul></li><li>active <ul><li>$ cat &#x2F;etc&#x2F;resolve.conf</li></ul></li></ul></li></ul></blockquote><blockquote><p>:one: domain&#x2F;conf_file<em><strong>1</strong>permission</em>2, file “example.com.localhost”;  ,file “25.172.loopback”; </p><p>​:two: zone&#x2F;zone_file*<strong>2</strong>正向<code>lab.example.com.</code> ； 反向<code>25.172.in-addr.arpa.</code></p><p>​:three: recorder<br>​hostname<code>A</code> ip                    主机名解析成IP地址；<br>​rever<!--se hid `PTR` hostna-->me    IP 地址解析成主机名</p><p>​<code>SOA</code> &#x3D; <code>NS</code> &#x3D; servera.lab.example.com<code>.</code></p></blockquote><p><img src="https://gitee.com/suzhen99/redhat/raw/master/images/dns-lookups.svg" alt="dns-lookups"></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">x:\&gt; <span class="title">ipconfig</span> /<span class="title">flushdns</span></span></span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">CLASS</th><th align="center"></th><th align="center">NID</th><th align="center">HID</th><th align="center">zone</th><th align="center">PTR</th></tr></thead><tbody><tr><td align="center">A</td><td align="center">10.1.2.3&#x2F;8</td><td align="center">10</td><td align="center">1.2.3</td><td align="center">10.in-addr.arpa.</td><td align="center">3.2.1</td></tr><tr><td align="center">B</td><td align="center">172.25.254.9&#x2F;16</td><td align="center">172.25</td><td align="center">254.9</td><td align="center">25.172.in-addr.arpa.</td><td align="center">9.254</td></tr><tr><td align="center">C</td><td align="center">192.168.9.10&#x2F;24</td><td align="center">192.168.9</td><td align="center">10</td><td align="center">9.168.192.in-addr.arpa.</td><td align="center">10</td></tr></tbody></table><h2 id="4-管理DHCP和IP地址分配"><a href="#4-管理DHCP和IP地址分配" class="headerlink" title="4 管理DHCP和IP地址分配"></a>4 管理DHCP和IP地址分配</h2><blockquote><ul><li>:triangular_flag_on_post: 使用DHCP配置IPv4地址分配</li><li>配置IPv6地址分配</li><li>自动化配置DHCP</li></ul></blockquote><blockquote><p>作用：分配网络参数，除了mac</p><p>工作原理：客户端广播，从先应答的服务器获得IP</p><p>协议：67&#x2F;UDP, 68&#x2F;UDP    <code>/etc/services</code></p><p>场景：无线路由、PXE、网络Ghost</p></blockquote><h2 id="5-管理打印机和打印文件"><a href="#5-管理打印机和打印文件" class="headerlink" title="5 管理打印机和打印文件"></a>5 管理打印机和打印文件</h2><blockquote><ul><li>配置和管理打印机</li><li>:triangular_flag_on_post: 自动化配置打印机</li></ul></blockquote><h2 id="6-配置邮件传输"><a href="#6-配置邮件传输" class="headerlink" title="6 配置邮件传输"></a>6 配置邮件传输</h2><blockquote><ul><li>配置一个仅发送邮件服务器</li><li>:triangular_flag_on_post: 自动配置Postfix</li></ul></blockquote><table><thead><tr><th align="center"></th><th align="center">Windows</th><th align="center">Linux</th><th align="center"></th></tr></thead><tbody><tr><td align="center">MTA<br>Mail Transport Agent</td><td align="center">Microssoft&#x2F;Exchange, <br>IBM&#x2F;Domino</td><td align="center">RHEL8 <strong>postfix</strong><br>RHEL&lt;&#x3D;7 sendmail<br>qmail</td><td align="center">邮局</td></tr><tr><td align="center">MDA<br>mail delivery agents</td><td align="center"></td><td align="center"></td><td align="center">邮递员</td></tr><tr><td align="center">MUA<br>mail user agent</td><td align="center">outlook, <br>foxmail</td><td align="center">GUI: evolution, thunderbird<br>CLI: <strong>mail</strong>, <strong>mutt</strong></td><td align="center">客户</td></tr></tbody></table><table><thead><tr><th align="center">PROTOCOL</th><th align="center"></th><th align="center"></th><th align="center">Package</th><th align="center">PORT</th></tr></thead><tbody><tr><td align="center">smtp</td><td align="center">发送</td><td align="center"></td><td align="center">postfix</td><td align="center">25</td></tr><tr><td align="center">imap</td><td align="center">接收</td><td align="center">同步sync</td><td align="center">dovecot</td><td align="center">143</td></tr><tr><td align="center">pop3</td><td align="center">接收</td><td align="center">拷贝copy</td><td align="center">dovecot</td><td align="center">110</td></tr></tbody></table><h2 id="7-配置MariaDB-SQL数据库"><a href="#7-配置MariaDB-SQL数据库" class="headerlink" title="7 配置MariaDB SQL数据库"></a>7 配置MariaDB SQL数据库</h2><blockquote><ul><li>:triangular_flag_on_post: 安装MariaDB数据库  </li><li>:triangular_flag_on_post: MariaDB中SQL管理</li><li>:triangular_flag_on_post: MariaDB用户和访问权限</li><li>备份和:triangular_flag_on_post: 恢复MariaDB</li><li>自动化部署MariaDB</li></ul></blockquote><blockquote><p>mysql -&#x3D;&gt; mariadb</p></blockquote><table><thead><tr><th align="center">SQL</th><th align="center">CMD（help CMD;）</th><th align="center">COMMENT</th></tr></thead><tbody><tr><td align="center">DDL</td><td align="center"><strong>create</strong>, alter, drop, <strong>show</strong>, use, DESCRIBE</td><td align="center">数据定义语言（结构）</td></tr><tr><td align="center">DML</td><td align="center"><strong>select</strong>, insert, update, delete</td><td align="center">数据操纵语言（内容）</td></tr><tr><td align="center">DCL</td><td align="center"><strong>grant</strong>, revoke</td><td align="center">数据控制语言（权限）</td></tr></tbody></table><h2 id="8-配置Web服务器"><a href="#8-配置Web服务器" class="headerlink" title="8 配置Web服务器"></a>8 配置Web服务器</h2><blockquote><ul><li>:triangular_flag_on_post: 使用Apache HTTPD配置一个基本Web服务器</li><li>:triangular_flag_on_post:使用Apache HTTPD配置和排故虚拟主机</li><li>:triangular_flag_on_post:配置Apache HTTPD HTTPS</li><li>:triangular_flag_on_post:使用Nginx配置一个Web服务器</li><li>自动化配置Web服务器</li></ul></blockquote><blockquote><p><code>当存在虚拟主机时，第一个虚拟主机会覆盖默认的web站点</code></p></blockquote><table><thead><tr><th align="center">TYPE</th><th align="center">PKG</th><th align="center">URL</th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center">http</td><td align="center">httpd</td><td align="center"><a href="http://www0.lab.example.com/">http://www0.lab.example.com</a></td><td align="center">基于<code>名称</code>的虚拟主机</td><td align="center">80</td></tr><tr><td align="center">vhost</td><td align="center">httpd</td><td align="center"><a href="http://webapp0.lab.example.com/">http://webapp0.lab.example.com</a></td><td align="center">基于<code>名称</code>的虚拟主机</td><td align="center">80</td></tr><tr><td align="center">https</td><td align="center">mod_ssl</td><td align="center"><a href="https://www0.lab.example.com/">https://www0.lab.example.com</a></td><td align="center">基于<code>端口</code>的虚拟主机</td><td align="center">443</td></tr><tr><td align="center">permission</td><td align="center">http_manual</td><td align="center"><a href="http://www0.lab.example.com/manual">http://www0.lab.example.com/manual</a></td><td align="center">权限</td><td align="center"></td></tr></tbody></table><table><thead><tr><th align="center">密文</th><th align="center">明文</th><th align="center">公钥</th><th align="center">私钥</th></tr></thead><tbody><tr><td align="center">https</td><td align="center">http + ssl</td><td align="center">*.crt public &#x2F; Lock</td><td align="center">*.key private &#x2F; Key</td></tr><tr><td align="center">ssh</td><td align="center">telnet</td><td align="center"></td><td align="center"></td></tr></tbody></table><table><thead><tr><th align="center"></th><th align="center">优点</th><th align="center">缺点</th><th></th></tr></thead><tbody><tr><td align="center">apache</td><td align="center">稳定</td><td align="center">组件多，重量</td><td></td></tr><tr><td align="center">nginx</td><td align="center">反向代理，轻量</td><td align="center"></td><td></td></tr></tbody></table><h2 id="9-调整Web服务器流量"><a href="#9-调整Web服务器流量" class="headerlink" title="9 调整Web服务器流量"></a>9 调整Web服务器流量</h2><blockquote><ul><li>使用Varnish缓存静态内容</li><li>使用HAProxy终止HTTPS流量和配置负载均衡</li><li>自动化调整Web服务</li></ul></blockquote><h2 id="10-提前基于文件的网络存储"><a href="#10-提前基于文件的网络存储" class="headerlink" title="10 提前基于文件的网络存储"></a>10 提前基于文件的网络存储</h2><blockquote><ul><li>导出NFS文件系统</li><li>提供SMB文件共享</li><li>自动化提供文件存储</li></ul></blockquote><table><thead><tr><th align="center"></th><th align="center"></th><th align="center"></th><th align="center">Windows</th><th align="center">Linux</th><th align="center">TYPE</th></tr></thead><tbody><tr><td align="center">NAS</td><td align="center">Network Attached Storage</td><td align="center">网络附加存储</td><td align="center">samba(SMB)</td><td align="center">nfs</td><td align="center">dir</td></tr><tr><td align="center">SAN</td><td align="center">Storage Area Network</td><td align="center">存储区域网络</td><td align="center">target &#x2F; iSCSI</td><td align="center"></td><td align="center">block</td></tr></tbody></table><table><thead><tr><th align="center">SERVICE</th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center">NAS&#x2F; directory</td><td align="center">samba</td><td align="center">nfs</td></tr><tr><td align="center">OS</td><td align="center">windows</td><td align="center">Like Unix</td></tr><tr><td align="center">Permission</td><td align="center">user</td><td align="center">ip, network, hostname, domain</td></tr><tr><td align="center">conf</td><td align="center">&#x2F;etc&#x2F;samba&#x2F;smb.cfg</td><td align="center">&#x2F;etc&#x2F;exports</td></tr><tr><td align="center">sharename</td><td align="center">[custom]</td><td align="center">&#x2F;path</td></tr><tr><td align="center">Pkg</td><td align="center">samba &#x2F; DAEMON,<br> samba-common &#x2F; conf, <br>samba-client &#x2F; smbclient</td><td align="center">nfs-utils</td></tr><tr><td align="center">DAEMON</td><td align="center">smb&#x2F;SERVICE, <br>nmb&#x2F;NAME</td><td align="center">nfs-server &#x2F; RHEL&gt;&#x3D;7, <br>nfs &#x2F; RHEL&lt;7</td></tr><tr><td align="center">firewall</td><td align="center">samba</td><td align="center">nfs -&#x3D;&gt; # mount,<br>[ port-mapper, mountd ] -&#x3D;&gt; $ showmount</td></tr><tr><td align="center">Client-cmd</td><td align="center">smbclient - like ftp interactive</td><td align="center">-</td></tr><tr><td align="center">filesystem</td><td align="center">cifs (cifs-utils)</td><td align="center">nfs</td></tr><tr><td align="center">autofs</td><td align="center">Yes</td><td align="center">Yes</td></tr></tbody></table><table><thead><tr><th align="center"></th><th align="center">Windows</th><th align="center">Linux</th><th align="center">QUOTA</th></tr></thead><tbody><tr><td align="center">Local</td><td align="center">ntfs</td><td align="center">ext4, xfs</td><td align="center">Y</td></tr><tr><td align="center">Remote</td><td align="center">cifs</td><td align="center">nfs</td><td align="center">N</td></tr></tbody></table><h2 id="11-访问基于块的网络存储"><a href="#11-访问基于块的网络存储" class="headerlink" title="11 访问基于块的网络存储"></a>11 访问基于块的网络存储</h2><blockquote><ul><li>提供iSCSI存储</li><li>访问iSCSI存储</li><li>自动化配置iSCSI Initiator</li></ul></blockquote><table><thead><tr><th align="center"></th><th align="center">Client</th><th align="center">Server</th></tr></thead><tbody><tr><td align="center">SAN &#x2F; block</td><td align="center">iscsi</td><td align="center">target</td></tr><tr><td align="center">CMD</td><td align="center">iscsiadm</td><td align="center">targetcli &#x2F; ls</td></tr><tr><td align="center"></td><td align="center">iscsiadm</td><td align="center">block</td></tr><tr><td align="center"></td><td align="center">lsblk</td><td align="center">iscsi - block</td></tr><tr><td align="center"></td><td align="center">fstab &#x2F; <code>_netdev</code></td><td align="center">iscsi - port</td></tr><tr><td align="center">acl</td><td align="center">&#x2F;etc&#x2F;iscsi&#x2F;init*</td><td align="center">iscsi - acl</td></tr><tr><td align="center">True</td><td align="center">iscsid</td><td align="center">target</td></tr><tr><td align="center">False</td><td align="center">iscsi</td><td align="center">targetd</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># iscsiadm --mode session -P 3</span></span><br></pre></td></tr></table></figure><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><h3 id="A0-step"><a href="#A0-step" class="headerlink" title="A0. step"></a>A0. step</h3><table><thead><tr><th align="center"></th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center">1</td><td align="center">word</td><td align="center"></td></tr><tr><td align="center">2</td><td align="center"><kbd>Tab</kbd></td><td align="center"></td></tr><tr><td align="center">3</td><td align="center">man</td><td align="center"></td></tr><tr><td align="center">4</td><td align="center">echo $?</td><td align="center">&#x3D;&#x3D; 0</td></tr></tbody></table><h3 id="A1-红帽"><a href="#A1-红帽" class="headerlink" title="A1. 红帽"></a>A1. 红帽</h3><table><thead><tr><th align="center">ID</th><th align="center">URL</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">RH358</td><td align="center"><a href="https://www.redhat.com/zh/services/training/rh358-red-hat-services-management-automation">红帽服务管理与自动化</a></td><td align="center">课程代码</td></tr><tr><td align="center">EX358</td><td align="center"><a href="https://www.redhat.com/zh/services/training/ex358-red-hat-certified-specialist-services-management-automation-exam">红帽认证服务管理和自动化专家考试</a></td><td align="center">考试代码</td></tr></tbody></table><h3 id="A2-软件"><a href="#A2-软件" class="headerlink" title="A2. 软件"></a>A2. 软件</h3><table><thead><tr><th align="center"></th><th align="center"></th><th></th></tr></thead><tbody><tr><td align="center">1</td><td align="center">VMware</td><td>虚拟机</td></tr><tr><td align="center">2</td><td align="center"><a href="https://typora.io/">Typora</a></td><td>Markdown</td></tr><tr><td align="center">3</td><td align="center">Xmind</td><td>思维导图</td></tr><tr><td align="center">4</td><td align="center">Snipaste</td><td>截图</td></tr><tr><td align="center"></td><td align="center"></td><td></td></tr><tr><td align="center"></td><td align="center"></td><td></td></tr></tbody></table><h3 id="A3-培训环境"><a href="#A3-培训环境" class="headerlink" title="A3. 培训环境"></a>A3. 培训环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> /etc/rht</span><br><span class="line">RHT_COURSE=rh358</span><br><span class="line">RHT_TITLE=<span class="string">&quot;Management and Automation of Linux Network Services (RH358)&quot;</span></span><br><span class="line">RHT_VMS=<span class="string">&quot;bastion workstation servera serverb serverc serverd &quot;</span></span><br><span class="line">RHT_VM0=<span class="string">&quot;classroom &quot;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">虚拟机</th><th align="center">主机名</th><th align="center">功能</th><th align="center">必须</th><th align="center">root</th><th align="center">User</th></tr></thead><tbody><tr><td align="center">VMware</td><td align="center">foundation</td><td align="center">平台</td><td align="center">1</td><td align="center">Asimov</td><td align="center">kiosk%redhat</td></tr><tr><td align="center">KVM</td><td align="center">classroom</td><td align="center">功能服务器</td><td align="center">1</td><td align="center">Asimov</td><td align="center">instructor%Asimov</td></tr><tr><td align="center">KVM</td><td align="center">bastion</td><td align="center">router</td><td align="center">1</td><td align="center">redhat</td><td align="center">student%student</td></tr><tr><td align="center">KVM</td><td align="center">workstation</td><td align="center">GUI</td><td align="center">0</td><td align="center">redhat</td><td align="center">student%student</td></tr><tr><td align="center">KVM</td><td align="center">server{a..d}</td><td align="center">CLI</td><td align="center">0</td><td align="center">redhat</td><td align="center">student%student</td></tr></tbody></table><p><strong>[kiosk@foundation]</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ rht-vmctl start classroom</span><br><span class="line">$ rht-vmctl start bastion</span><br><span class="line">$ rht-vmctl start workstation</span><br><span class="line">$ rht-vmctl start servera</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ping -c 4 workstation</span><br><span class="line">$ ssh root@workstation</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> /content/slides/</span><br></pre></td></tr></table></figure><h3 id="A4-yaml"><a href="#A4-yaml" class="headerlink" title="A4. yaml"></a>A4. yaml</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ ansible-doc -l | grep keyword</span><br><span class="line">$ ansible-doc module-name</span><br><span class="line">/EX</span><br><span class="line"></span><br><span class="line">$ ansible-playbook x.yml</span><br></pre></td></tr></table></figure><blockquote><ul><li><code>---</code>第一行</li><li>使用<code>缩进</code>表示层级关系，<code>:</code>上一级以冒号结尾</li><li>只允许<code>空格</code>，缩进不允许使用tab</li><li>缩进的空格数不重要，只要相同层级的元素左对齐即可</li><li><code>#</code>表示注释</li><li><code>key</code>:空格<code>value</code></li></ul></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tail -n 1 /etc/bashrc</span></span><br><span class="line"><span class="comment"># vim</span></span><br><span class="line">:<span class="built_in">set</span> all</span><br><span class="line">:<span class="built_in">help</span> tabstop</span><br><span class="line"></span><br><span class="line"><span class="comment"># ls /etc/vimrc ~/.vimrc</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cat</span> &gt; ~/.vimrc &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">set number ts=2 sw=2 et</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h3 id="A5-service"><a href="#A5-service" class="headerlink" title="A5. service"></a>A5. service</h3><table><thead><tr><th align="center">STEP</th><th>CMD</th><th>COMMENT</th><th></th></tr></thead><tbody><tr><td align="center">1</td><td>nmcli | nmtui</td><td>网络</td><td></td></tr><tr><td align="center">2</td><td>hostnamectl</td><td>主机名</td><td></td></tr><tr><td align="center">3</td><td>yum search KEYWORD</td><td>查安装包名</td><td>dns</td></tr><tr><td align="center">4</td><td>yum -y install PKG</td><td>安装软件</td><td>bind</td></tr><tr><td align="center">5</td><td>rpm -qc PKG | man -k nfs</td><td>查配置文件</td><td>bind</td></tr><tr><td align="center">6</td><td>vim &#x2F;etc&#x2F;..cfg(sec_service)</td><td>编辑(安全1&#x2F;4)</td><td>&#x2F;etc&#x2F;named.conf</td></tr><tr><td align="center">7</td><td>rpm -ql PKG | grep service<br>systemctl list-unit-files | grep KEYWORD</td><td>查守护进程</td><td>bind</td></tr><tr><td align="center">8</td><td>systemctl enable –now DAEMON<br>systemctl restart DAEMON</td><td>开机自启，立即启动</td><td>named</td></tr><tr><td align="center">9</td><td>firewall-cmd –permanent …, <br>–reload(sec_port)</td><td>防火墙(安全1&#x2F;4)</td><td></td></tr><tr><td align="center">10</td><td></td><td>文件系统(安全1&#x2F;4)</td><td></td></tr><tr><td align="center">11</td><td></td><td>SELinux(安全1&#x2F;4)</td><td></td></tr></tbody></table><h3 id="A6-OBJECTIVE-SCORE"><a href="#A6-OBJECTIVE-SCORE" class="headerlink" title="A6. OBJECTIVE: SCORE"></a>A6. OBJECTIVE: SCORE</h3><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Manage Network Services: 87%</span><br><span class="line">Manage Firewall Services: 100%</span><br><span class="line">Manage SELinux: 100%</span><br><span class="line">Manage DNS: 0%</span><br><span class="line">Manage DHCP: 100%</span><br><span class="line">Manage printers: 33%</span><br><span class="line">Manage Email services: 100%</span><br><span class="line">Manage a MariaDB database server: 100%</span><br><span class="line">Manage HTTPD web access: 100%</span><br><span class="line">Manage iSCSI: 50%</span><br><span class="line">Manage NFS: 100%</span><br><span class="line">Manage SMB: 75%</span><br><span class="line">Use Ansible to Configure Standard Services: 80%</span><br></pre></td></tr></table></figure></blockquote><h3 id="A7-学习技巧"><a href="#A7-学习技巧" class="headerlink" title="A7. 学习技巧"></a>A7. 学习技巧</h3><blockquote><ul><li><p>word</p></li><li><p><kbd>Tab</kbd> 补全,<kbd>Tab</kbd><kbd>Tab</kbd> 列出 </p></li><li><p>&#96;&#96;&#96;bash</p></li></ul><h1 id="man-command"><a href="#man-command" class="headerlink" title="man command"></a>man command</h1>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- ```bash</span><br><span class="line">  # echo $?</span><br></pre></td></tr></table></figure></blockquote><h3 id="A8-VMware-software"><a href="#A8-VMware-software" class="headerlink" title="A8. VMware+software"></a>A8. VMware+software</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install \</span></span><br><span class="line">open-vm-tools-desktop.x86_64 \</span><br><span class="line">xorg-x11-drv-vmware.x86_64</span><br></pre></td></tr></table></figure><h3 id="A9-ansible"><a href="#A9-ansible" class="headerlink" title="A9. ansible"></a>A9. ansible</h3><p><strong>[student@workstation]</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ yum search ansible</span><br><span class="line">$ yum list ansible</span><br><span class="line"></span><br><span class="line">$ rpm -qc ansible</span><br><span class="line">/etc/ansible/ansible.cfg</span><br><span class="line">/etc/ansible/hosts</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">head</span> /etc/ansible/ansible.cfg</span><br><span class="line">$ <span class="built_in">mkdir</span> playbook</span><br><span class="line">$ <span class="built_in">cp</span> /etc/ansible/ansible.cfg playbook/ansible.cfg</span><br><span class="line">$ <span class="built_in">cd</span> playbook/</span><br><span class="line">$ ansible --version</span><br><span class="line"></span><br><span class="line">$ vim /home/student/playbook/ansible.cfg</span><br><span class="line">...</span><br><span class="line">inventory      = /home/student/playbook/inventory</span><br><span class="line">$ <span class="built_in">cp</span> /etc/ansible/hosts inventory</span><br><span class="line">$ ansible-inventory --graph</span><br></pre></td></tr></table></figure><blockquote><p><strong>module</strong></p><ul><li>stat(when)</li><li>debug(echo)</li><li>setup(facts)</li><li>shell(*,|)</li><li>command(id, hostname)</li></ul></blockquote><h3 id="A10-vim"><a href="#A10-vim" class="headerlink" title="A10. vim"></a>A10. vim</h3><table><thead><tr><th align="center">ID</th><th></th><th></th></tr></thead><tbody><tr><td align="center">1</td><td><kbd>u</kbd></td><td>Undo</td></tr><tr><td align="center">2</td><td><kbd>5</kbd><kbd>g</kbd><kbd>g</kbd></td><td>Go</td></tr><tr><td align="center">3</td><td><kbd>Ctrl</kbd>-<kbd>V</kbd></td><td>Virtual block</td></tr><tr><td align="center">4</td><td><kbd>j</kbd>* n</td><td>:arrow_down:</td></tr><tr><td align="center">5</td><td><kbd>I</kbd></td><td>III12iii<u>3</u>aaa456AAA</td></tr><tr><td align="center">6</td><td><kbd>Esc</kbd></td><td></td></tr><tr><td align="center">7</td><td><kbd>o</kbd></td><td>Open</td></tr><tr><td align="center">8</td><td><kbd>x</kbd></td><td></td></tr><tr><td align="center"></td><td></td><td></td></tr></tbody></table><h3 id="A11-培训环境-2-练习环境"><a href="#A11-培训环境-2-练习环境" class="headerlink" title="A11. 培训环境 2 练习环境"></a>A11. 培训环境 2 练习环境</h3><blockquote><p>VMware</p><ul><li><a href="https://ark.intel.com/">CPU</a> * 8</li><li>MEM * 8G</li></ul></blockquote><table><thead><tr><th align="center">STEP</th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center">1</td><td align="center">VMware 第一次运行时</td><td align="center">选择<code>已移动</code></td></tr><tr><td align="center">2</td><td align="center">物理机 vmnet1</td><td align="center">172.25.254.<code>1</code>&#x2F;24</td></tr><tr><td align="center">3</td><td align="center">X:\&gt; <code>ping 172.25.254.250</code></td><td align="center">物理机：确认和 foundation连网</td></tr><tr><td align="center">4</td><td align="center">X:\&gt; <code>scp YOURPATH/ex358.rar kiosk@172.25.254.250:~</code></td><td align="center">物理机：拷贝文件</td></tr><tr><td align="center">5</td><td align="center">$ <code>unzip ex358.zip</code></td><td align="center">解压缩</td></tr><tr><td align="center">6</td><td align="center">$ <code>bash ex358/exam-setup.sh</code></td><td align="center">开始布署，约6分钟</td></tr><tr><td align="center">7</td><td align="center"># <code>systemctl shudown</code></td><td align="center">关机</td></tr><tr><td align="center">8</td><td align="center"></td><td align="center">做快照，名称<code>EX358</code></td></tr><tr><td align="center">9</td><td align="center"></td><td align="center">开机</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$ rht-vmctl status classroom</span><br><span class="line">classroom RUNNING</span><br><span class="line">$ rht-vmctl status all</span><br><span class="line">bastion DEFINED</span><br><span class="line">workstation DEFINED</span><br><span class="line">servera DEFINED</span><br><span class="line">serverb DEFINED</span><br><span class="line">serverc DEFINED</span><br><span class="line">serverd DEFINED</span><br><span class="line">$ rht-vmctl start bastion</span><br><span class="line"></span><br><span class="line">-CMD</span><br><span class="line">$ rht-vmctl start servera</span><br><span class="line">$ rht-vmctl start serverb</span><br><span class="line"></span><br><span class="line">-ANSIBLE</span><br><span class="line">$ rht-vmctl start workstation</span><br><span class="line">$ rht-vmctl start serverc</span><br><span class="line">$ rht-vmctl start serverd</span><br></pre></td></tr></table></figure><h4 id="A12-PC-VMware"><a href="#A12-PC-VMware" class="headerlink" title="A12. PC+VMware"></a>A12. PC+VMware</h4><table><thead><tr><th align="center">OS</th><th></th><th></th></tr></thead><tbody><tr><td align="center">win7</td><td>VMware-workstation-full-15.5.7</td><td>1、删除快照<br>2、改兼容性<br>3、改CPU+MEM</td></tr><tr><td align="center">win&gt;&#x3D;8</td><td>VMware-workstation-full-16.1.2</td><td></td></tr></tbody></table><blockquote><p>CPU: AMD</p><p>foundation 8.0 +RH358<br>foundation 8.2</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> RHCA,linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RHCA学习笔记|CL210</title>
      <link href="/2022/07/12/RHCA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-CL210/"/>
      <url>/2022/07/12/RHCA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-CL210/</url>
      
        <content type="html"><![CDATA[<h1 id="CL210-OpenStack"><a href="#CL210-OpenStack" class="headerlink" title="CL210 OpenStack"></a>CL210 OpenStack</h1><p><img src="https://i.loli.net/2021/11/30/8l9zAxQ5Ff1dGWT.png" alt="image-20211120205949927"></p><ul><li><p>课程的实验环境：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1     classroom            </span><br><span class="line">2     workstation                   </span><br><span class="line">3     power          虚拟的ipmi服务器</span><br><span class="line">4     utility        IPA服务器</span><br><span class="line">5     director       undercloud</span><br><span class="line">6     controller0    控制节点                 </span><br><span class="line">7     ceph0          存储节点                </span><br><span class="line">8     computehci0    超融合的计算节点</span><br><span class="line">9     compute0       计算节点</span><br><span class="line">10    compute1       计算节点</span><br></pre></td></tr></table></figure></li><li><p>课程目的</p><p>基于openstack创建一个云主机并为其提供服务</p></li></ul><h1 id="第一章-openStack的安装"><a href="#第一章-openStack的安装" class="headerlink" title="第一章 openStack的安装"></a>第一章 openStack的安装</h1><blockquote><ul><li>一些概念：</li></ul><p><a href="https://cloud.tencent.com/developer/article/1041633">XEN、VMware ESXi、Hyper-V以及KVM架构解析</a></p><p><a href="https://zhidao.baidu.com/question/584394281.html">IaaS, PaaS和SaaS及其区别</a></p><p><a href="https://www.redhat.com/zh/topics/cloud-computing/cloud-vs-virtualization">虚拟化和云的区别</a></p></blockquote><ol><li><p>OpenStack是什么？基于IAAS的私有云管理平台  —-&gt;目的: 创建和管理云主机</p><p>（OpenShift是基于PAAS层）</p></li><li><p>OpenStack的简易（最小化）架构： 至少 1个控制节点 + 1个计算节点（虚拟化服务器）</p></li></ol><blockquote><p>实际工作中需要考虑控制节点的高可用（以防出现故障）</p></blockquote><p>  虚拟化： 纵向扩展<br>  云计算： 横向扩展   vcpu  虚拟内存</p><blockquote><ul><li><code>横向扩展</code> 也叫 <code>水平扩展</code>，用更多的节点支撑更大量的请求。 如成千上万的蚂蚁完成一项搬运工作</li><li><code>纵向扩展</code> 又叫 <code>垂直扩展</code>，扩展一个点的能力支撑更大的请求。如利用1个人的能力，如蜘蛛侠逼停火车</li></ul></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><blockquote><ol><li><p>packstack安装  —–&gt; POC（概念验证，用于测试，演示，不适用于生产） all in one(新手推荐安装方式）</p><p><a href="https://blog.csdn.net/weixin_41831919/article/details/109035936">epel-release</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">epel：红帽官方为企业级linux（EL）提供的额外软件（extra package）包</span></span><br><span class="line">yum install epel-release</span><br><span class="line">yum install centos-release-openstack-victoria</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">包含openstack-packstack-puppet.noarch，类似于ansible</span></span><br><span class="line">yum install openstack-packstack</span><br><span class="line"></span><br><span class="line">基于packstack创建并修改自动应答文件：</span><br><span class="line">packstack --gen-answer-file a.txt</span><br><span class="line">packstack --answer-file a.txt</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://www.yuque.com/docs/share/ae18d053-503d-4ac0-be36-4faec656e7aa#%20%E3%80%8Aopenstack%20V%E7%89%88%20%E4%BD%BF%E7%94%A8packstack%E5%AE%89%E8%A3%85%EF%BC%9A%E3%80%8B">老师自己写的文档</a>：</p><h1 id="安装前的准备："><a href="#安装前的准备：" class="headerlink" title="安装前的准备："></a>安装前的准备：</h1><h2 id="1-关闭防火墙和selinux"><a href="#1-关闭防火墙和selinux" class="headerlink" title="1. 关闭防火墙和selinux"></a>1. 关闭防火墙和selinux</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@openstack ~]<span class="comment"># systemctl stop firewalld</span></span><br><span class="line">[root@openstack ~]<span class="comment"># systemctl disabled firewalld</span></span><br><span class="line">[root@openstack ~]<span class="comment"># sed -i &#x27;s/SELINUX=enforcing/SELINUX=disabled/g&#x27; /etc/selinux/config</span></span><br></pre></td></tr></table></figure><h2 id="2-安装必要的包"><a href="#2-安装必要的包" class="headerlink" title="2. 安装必要的包"></a>2. 安装必要的包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install bash-completion wget vim curl net-tools</span><br></pre></td></tr></table></figure><h2 id="3-设置主机名"><a href="#3-设置主机名" class="headerlink" title="3. 设置主机名"></a>3. 设置主机名</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 一定要配置</span></span><br><span class="line">[root@openstack ~]<span class="comment"># vim /etc/hosts</span></span><br><span class="line">192.168.26.100  openstack.example.com</span><br><span class="line"></span><br><span class="line">[root@openstack ~]<span class="comment"># hostnamctl set-hostname openstack.example.com</span></span><br></pre></td></tr></table></figure><h2 id="4-配置静态IP地址"><a href="#4-配置静态IP地址" class="headerlink" title="4. 配置静态IP地址"></a>4. 配置静态IP地址</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## openstack不支持NetworkManager，所以要停掉</span></span><br><span class="line">[root@openstack ~]<span class="comment"># systemctl disable NetworkManager</span></span><br><span class="line">[root@openstack ~]<span class="comment"># systemctl stop NetworkManager</span></span><br><span class="line">[root@openstack ~]<span class="comment"># yum install network-scripts -y</span></span><br><span class="line">[root@openstack ~]<span class="comment"># systemctl start network &amp;&amp; systemctl enable network</span></span><br><span class="line"></span><br><span class="line">[root@openstack ~]<span class="comment"># vim /etc/sysconfig/network-scripts/ifcfg-ens33</span></span><br><span class="line">IPADDR=192.168.26.100</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=192.168.26.2</span><br><span class="line">DNS1=192.168.26.2</span><br><span class="line"></span><br><span class="line">[root@openstack ~]<span class="comment"># vim /etc/sysconfig/network-scripts/ifcfg-ens37</span></span><br><span class="line">IPADDR=10.0.0.1</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">ONBOOT=<span class="built_in">yes</span></span><br></pre></td></tr></table></figure><h1 id="openstack安装"><a href="#openstack安装" class="headerlink" title="openstack安装"></a>openstack安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 启用电源模块</span></span><br><span class="line">[root@openstack ~]<span class="comment"># dnf config-manager --enable powertools</span></span><br><span class="line">[root@openstack ~]<span class="comment"># yum install centos-release-openstack-victoria -y</span></span><br><span class="line"><span class="comment">## 严格保证安装最新版版</span></span><br><span class="line">[root@openstack ~]<span class="comment"># yum update -y</span></span><br><span class="line">[root@openstack ~]<span class="comment"># reboot</span></span><br></pre></td></tr></table></figure><h2 id="生成自动应答文件"><a href="#生成自动应答文件" class="headerlink" title="生成自动应答文件"></a>生成自动应答文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 坑，必须移除epel，不然可能有个依赖包过不去（老师说的，不知道啥意思）</span></span><br><span class="line">[root@openstack ~]<span class="comment"># yum autoremove epel-release</span></span><br><span class="line">[root@openstack ~]<span class="comment"># yum autoremove openstack-packstack</span></span><br><span class="line">[root@openstack ~]<span class="comment"># yum clean all</span></span><br><span class="line">[root@openstack ~]<span class="comment"># yum install -y openstack-packstack</span></span><br><span class="line">[root@openstack ~]<span class="comment"># yum install openstack-packstack -y</span></span><br><span class="line">[root@openstack ~]<span class="comment"># packstack --gen-answer-file aa.txt</span></span><br><span class="line">[root@openstack ~]<span class="comment"># vim aa.txt</span></span><br><span class="line"><span class="comment">## 是否生成一个自动演示的实例（浪费时间）</span></span><br><span class="line">CONFIG_PROVISION_DEMO=n</span><br><span class="line"><span class="comment">## 图形化界面管理员密码（自动生成的是随机的乱码）</span></span><br><span class="line">CONFIG_KEYSTONE_ADMIN_PW=redhat</span><br><span class="line"><span class="comment">## 网络使用类型（不改就使用ovn了）</span></span><br><span class="line">CONFIG_NEUTRON_L2_AGENT=openvswitch</span><br><span class="line"><span class="comment">## 外网网卡</span></span><br><span class="line">CONFIG_NEUTRON_OVS_BRIDGE_IFACES=br-ex:ens33</span><br><span class="line"><span class="comment">## 支持的网络类型</span></span><br><span class="line">CONFIG_NEUTRON_ML2_TYPE_DRIVERS=geneve,flat,vxlan</span><br><span class="line">CONFIG_NEUTRON_ML2_TENANT_NETWORK_TYPES=vxlan</span><br><span class="line"><span class="comment">## 虚拟交换机</span></span><br><span class="line">CONFIG_NEUTRON_ML2_MECHANISM_DRIVERS=openvswitch</span><br><span class="line"><span class="comment">## 扁平网络的名字</span></span><br><span class="line">CONFIG_NEUTRON_ML2_FLAT_NETWORKS=datacentre</span><br><span class="line"></span><br><span class="line">[root@openstack ~]<span class="comment"># packstack --answer-file aa.txt</span></span><br><span class="line">Welcome to the Packstack setup utility</span><br><span class="line"></span><br><span class="line">The installation <span class="built_in">log</span> file is available at: /var/tmp/packstack/20210922-010500-85phzhks/openstack-setup.log</span><br><span class="line"></span><br><span class="line">Installing:</span><br><span class="line">Clean Up                                             [ DONE ]</span><br><span class="line">Discovering ip protocol version                      [ DONE ]</span><br><span class="line">Setting up ssh keys                                  [ DONE ]</span><br><span class="line">Preparing servers                                    [ DONE ]</span><br><span class="line">Pre installing Puppet and discovering hosts<span class="string">&#x27; details [ DONE ]</span></span><br><span class="line"><span class="string">Preparing pre-install entries                        [ DONE ]</span></span><br><span class="line"><span class="string">Setting up CACERT                                    [ DONE ]</span></span><br><span class="line"><span class="string">...........</span></span><br><span class="line"><span class="string">等待约10到20分钟安装完成！</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">**** Installation completed successfully ******</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Additional information:</span></span><br><span class="line"><span class="string"> * Time synchronization installation was skipped. Please note that unsynchronized time on server instances might be problem for some OpenStack components.</span></span><br><span class="line"><span class="string"> * File /root/keystonerc_admin has been created on OpenStack client host 192.168.26.100. To use the command line tools you need to source the file.</span></span><br><span class="line"><span class="string"> * To access the OpenStack Dashboard browse to http://192.168.26.100/dashboard .</span></span><br><span class="line"><span class="string">Please, find your login credentials stored in the keystonerc_admin in your home directory.</span></span><br><span class="line"><span class="string"> * The installation log file is available at: /var/tmp/packstack/20210922-010500-85phzhks/openstack-setup.log</span></span><br><span class="line"><span class="string"> * The generated manifests are available at: /var/tmp/packstack/20210922-010500-85phzhks/manifests</span></span><br></pre></td></tr></table></figure><h2 id="安装和错误参考："><a href="#安装和错误参考：" class="headerlink" title="安装和错误参考："></a>安装和错误参考：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://www.cnblogs.com/dyd168/p/14454518.html</span><br><span class="line">https://blog.csdn.net/qq_25650463/article/details/114981776</span><br><span class="line">https://ibmimedia.com/blog/1142/error-function-lookup-did-not-find-a-value-for-the-name-default-exec-timeout</span><br></pre></td></tr></table></figure><h1 id="添加一个计算节点"><a href="#添加一个计算节点" class="headerlink" title="添加一个计算节点"></a>添加一个计算节点</h1><p>还没写</p></blockquote></li><li><p>进阶  命令行安装  一个组件一个组件的装（支持ansible安装，适用于生产）</p><p>参考<a href="openstack.org">官网文档</a></p></li><li><p>redhat OpenStack架构 （适用于生产）</p><p>基于tripleO项目（装包时有一个叫tripleo相关的包）： </p><p>核心：OOOopenstack      on     openstack<br>                          <strong>undercloud</strong>                <strong>overcloud</strong><br>安装、升级、管理都在undercloud（director）进行       实际生产工作的openstack         </p><p>​<a href="https://blog.csdn.net/bcfdsagbfcisbg/article/details/76862044">PXE</a>安装（undercloud通过PXE引导安装overcloud）</p><p>​<a href="https://www.jianshu.com/p/f0366f577e95">ipmi</a> 做电源管理（开机，关机，需要以太网卡支持ipmi协议）</p></li></ol></blockquote><h2 id="了解openstack的核心组件"><a href="#了解openstack的核心组件" class="headerlink" title="了解openstack的核心组件"></a>了解openstack的核心组件</h2><blockquote><p><code>keystone</code>: 身份验证<br><code>glance</code>：管理OpenStack的镜像（就是已经安装好OS或者应用的虚拟机的虚拟磁盘文件）<br><code>cinder</code>：块存储服务  给云主机来提供块存储服务  附加存储 只能同时由一个云主机访问<br><code>neutron</code>：云上私网   提供软件定义的网络<br><code>nova</code>：计算服务  资源的大管家  nova-compute nova-controlleber<br><code>dashboard</code>: web管理openstack<br><code>swift</code>: 对象存储服务 存储是非结构化数据 资源通过链接来分享 哈希去重 秒传 三副本机制<br><code>heat</code>: 自动化管理 批量的创建云主机<br><code>ceilmeter</code>： 监控和计费</p></blockquote><h2 id="依赖几个额外的组件"><a href="#依赖几个额外的组件" class="headerlink" title="依赖几个额外的组件"></a>依赖几个额外的组件</h2><blockquote><ol><li>数据库：mariadb&#x2F;mysql</li><li>rabbitmq-server  消息队列  提供标准的AMQP协议</li><li>redis  键值数据库</li><li>memcached  缓存</li><li>pacemaker  高可用集群</li><li>docker     所有的组件是以容器的形式来运行</li></ol></blockquote><h2 id="如果要实现最小化的openstack架构，至少需要哪几个组件？"><a href="#如果要实现最小化的openstack架构，至少需要哪几个组件？" class="headerlink" title="如果要实现最小化的openstack架构，至少需要哪几个组件？"></a>如果要实现最小化的openstack架构，至少需要哪几个组件？</h2><blockquote><p>keystone </p><p>glance  </p><p>neutron  </p><p>nova </p></blockquote><h2 id="启动实验环境的虚拟机："><a href="#启动实验环境的虚拟机：" class="headerlink" title="启动实验环境的虚拟机："></a>启动实验环境的虚拟机：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@foundation0 ~]# rht-vmctl fullreset all</span><br><span class="line">[root@foundation0 ~]# ssh stack@director</span><br><span class="line">(undercloud) [stack@director ~]$ rht-overcloud.sh start</span><br></pre></td></tr></table></figure><h2 id="容器的问题"><a href="#容器的问题" class="headerlink" title="容器的问题:"></a>容器的问题:</h2><blockquote><p>容器是什么？本质是OS上的一个进程  </p><p>器是不是虚拟化？是   操作系统虚拟化   内核支持容器技术就可以通过容器来封装应用  开箱即用  —-&gt;实现自动化运维  —–&gt; 云原生</p><p>三要素：镜像  容器  镜像仓库</p></blockquote><h2 id="如果要修改应用的配置文件："><a href="#如果要修改应用的配置文件：" class="headerlink" title="如果要修改应用的配置文件："></a>如果要修改应用的配置文件：</h2><blockquote><h3 id="方法1-登录容器："><a href="#方法1-登录容器：" class="headerlink" title="方法1. 登录容器："></a>方法1. 登录容器：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@controller0 ~]<span class="comment"># docker exec -it horizon bash</span></span><br></pre></td></tr></table></figure><h3 id="方法2："><a href="#方法2：" class="headerlink" title="方法2："></a>方法2：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@controller0 ~]# cd /var/lib/config-data/puppet-generated/</span><br></pre></td></tr></table></figure></blockquote><h2 id="实验：图形化创建一个实例"><a href="#实验：图形化创建一个实例" class="headerlink" title="实验：图形化创建一个实例"></a>实验：图形化创建一个实例</h2><p>如果dashboard报500错误，登录controller0 重启容器： docker restart horizon</p><blockquote><ol><li><p>创建租户project   </p></li><li><p>创建用户 跟project对应 （user1已经授权admin角色）</p></li><li><p>用创建好的用户登录</p></li><li><p>先创建flavor(规格）admin创建  </p></li><li><p>上传镜像  </p></li><li><p>创建网络 </p><ol><li>创建云上网络 VPC网络  </li><li>创建物理网络（admin创建） 做浮动IP 先删除原来的172.25的物理网络，再新建物理网络<br>子网：172.25.250.0&#x2F;24  类型：flat  名字：datacentre  网关： 172.25.250.0&#x2F;24</li></ol></li><li><p>创建路由器，管理内网和外网</p></li><li><p>创建安全组和SSH密钥</p></li><li><p>创建实例并绑定浮动IP</p></li><li><p>ssh登录访问  测试用户cloud-user能否登录云主机</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 key1.pem</span><br><span class="line">ssh -i key1.pem cloud-user@172.25.250.104</span><br></pre></td></tr></table></figure></li></ol></blockquote><h1 id="第二章-keystone和消息队列"><a href="#第二章-keystone和消息队列" class="headerlink" title="第二章 keystone和消息队列"></a>第二章 keystone和消息队列</h1><ol><li><p>keystone的要素</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">user  service  endpoint</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">openstack user create --domain default --password-prompt glance</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">openstack service create --name glance --description <span class="string">&quot;OpenStack Image&quot;</span> image</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">openstack endpoint create --region RegionOne image public http://controller:9292</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">(overcloud) [stack@director ~]$ openstack catalog show nova</span><br><span class="line">+-----------+------------------------------------------+</span><br><span class="line">| Field     | Value                                    |</span><br><span class="line">+-----------+------------------------------------------+</span><br><span class="line">| endpoints | regionOne                                |</span><br><span class="line">|           |   admin: http://172.24.1.50:8774/v2.1    |</span><br><span class="line">|           | regionOne                                |</span><br><span class="line">|           |   public: http://172.25.250.50:8774/v2.1 |</span><br><span class="line">|           | regionOne                                |</span><br><span class="line">|           |   internal: http://172.24.1.50:8774/v2.1 |</span><br><span class="line">|           |                                          |</span><br><span class="line">| id        | 8865b646577e49d1b79ba48e81ba8cba         |</span><br><span class="line">| name      | nova                                     |</span><br><span class="line">| type      | compute                                  |</span><br><span class="line">+-----------+------------------------------------------+</span><br></pre></td></tr></table></figure></li></ol><p>组件之前相互访问的时候需要token:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(overcloud) [stack@director ~]$ openstack console url show small</span><br><span class="line">+-------+------------------------------------------------------------------------------------+</span><br><span class="line">| Field | Value                                                                              |</span><br><span class="line">+-------+------------------------------------------------------------------------------------+</span><br><span class="line">| type  | novnc                                                                              |</span><br><span class="line">| url   | http://172.25.250.50:6080/vnc_auto.html?token=73aebd78-65fd-4771-a184-8e0115dd145e |</span><br><span class="line">+-------+------------------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure><p>当前OpenStack 13的版本：使用的token 类型是fernet  密钥是轮转的密钥<br>教材的P145的实验</p><ol start="2"><li>消息队列: 实现AMQP协议的通信<br>实验：P97<br>[student@workstation ~]$ lab controlplane-message setup<br>创建一个指定rabbitmq的用户，使用这个用户来实现消息队列服务，并开启消息追踪的选项。<br>ssh root@controller0<br>docker exec -it rabbitmq-bundle-docker-0 bash<br>rabbitmqctl命令来创建一个rabbitmq的用户，并授权</li></ol><blockquote><p>创建用户：<br>rabbitmqctl add_user tracer redhat</p><p>设置用户的权限：<br>rabbitmqctl set_permissions tracer “.<em>“ “.</em>“ “.*”</p><p>把用户标记成管理员角色：（可选）<br>rabbitmqctl set_user_tags tracer administrator</p><p>开启跟踪选项：<br>rabbitmqctl trace_on</p></blockquote><p>exchange 有几个种类：</p><ul><li>Direct：用户订阅到一个 queue 并关联一个 binding key，服务端设置 routing key 和 binding key 与用户订阅的 queue关联</li><li>Topic：用户订阅的 queue 具备广义性，服务端可以将数据发送到相应的queue</li><li>Fanout：消息广播到所有订阅的 queues，无论 routing key 和 binding key是否匹配</li><li>Headers：使用消息的 header 特性来对 queue 进行 binding</li></ul><p> </p><p>第二天<br>对象存储：<br>三要素： account  container(存储容器 存储桶） object(理解成要存储的文件）<br>图形化创建好container后 上传object</p><p>在实例里，访问container中的object<br>yum install python2-openstackclient<br>source overcloudrc-user1<br>openstack container list<br>openstack object save c1 aa.txt</p><h1 id="第三章-身份验证管理"><a href="#第三章-身份验证管理" class="headerlink" title="第三章  身份验证管理"></a>第三章  身份验证管理</h1><p>多域管理  类似于在OpenStack上有两个公司  不同的公司可以使用不同的身份验证方式 比如IPA  默认这个域叫Default<br>层次结构：<br>domain     创建域，这个域可以是本地域  也可以是基于IPA的域（LDAP + KERBEROS）  AD域<br>   |<br>project<br>   |<br> user</p><p>启动多域的身份验证方式：</p><ol><li><p>修改horzion<br>[root@controller0 ~]# vim &#x2F;var&#x2F;lib&#x2F;config-data&#x2F;puppet-generated&#x2F;horizon&#x2F;etc&#x2F;openstack-dashboard&#x2F;<br>OPENSTACK_KEYSTONE_MULTIDOMAIN_SUPPORT &#x3D; True<br>OPENSTACK_KEYSTONE_DEFAULT_DOMAIN &#x3D; ‘Default’<br>[root@controller0 ~]# docker restart horizon</p></li><li><p>修改keystone<br>[root@controller0 ~]# vim &#x2F;var&#x2F;lib&#x2F;config-data&#x2F;puppet-generated&#x2F;keystone&#x2F;etc&#x2F;keystone&#x2F;keystone.conf<br>domain_specific_drivers_enabled&#x3D;True<br>[root@controller0 ~]# docker restart keystone</p></li></ol><p>例子：<br>在 overcloud 中创建 OpenStack域Demo，其中包含 Engineering 与 Production<br>项目，在域Demo中创建OpenStack组Devops， 其中需包含以下用户：<br>✓ user1用户是 Engineering 项目的用户(<em>MEMBER</em>)与管理员(ADMIN)， email 地址为：<br>   <a href="mailto:&#x75;&#115;&#101;&#x72;&#49;&#x40;&#108;&#97;&#x62;&#46;&#x65;&#x78;&#97;&#109;&#112;&#108;&#x65;&#46;&#x63;&#x6f;&#x6d;">&#x75;&#115;&#101;&#x72;&#49;&#x40;&#108;&#97;&#x62;&#46;&#x65;&#x78;&#97;&#109;&#112;&#108;&#x65;&#46;&#x63;&#x6f;&#x6d;</a>。<br>✓ user2 用户是 Engineering 项目的用户， email 地址为：<br>   <a href="mailto:&#117;&#115;&#101;&#x72;&#x32;&#x40;&#108;&#x61;&#x62;&#46;&#101;&#120;&#x61;&#x6d;&#x70;&#x6c;&#x65;&#x2e;&#x63;&#111;&#x6d;">&#117;&#115;&#101;&#x72;&#x32;&#x40;&#108;&#x61;&#x62;&#46;&#101;&#120;&#x61;&#x6d;&#x70;&#x6c;&#x65;&#x2e;&#x63;&#111;&#x6d;</a></p><p>✓ user3用户是 Production 项目的用户与管理员， email 地址为：<br>   <a href="mailto:&#x75;&#115;&#x65;&#114;&#x33;&#x40;&#x6c;&#x61;&#x62;&#46;&#101;&#x78;&#97;&#109;&#x70;&#x6c;&#101;&#x2e;&#x63;&#111;&#x6d;">&#x75;&#115;&#x65;&#114;&#x33;&#x40;&#x6c;&#x61;&#x62;&#46;&#101;&#x78;&#97;&#109;&#x70;&#x6c;&#101;&#x2e;&#x63;&#111;&#x6d;</a>。<br>✓ user4用户是 Production 项目的用户， email 地址为：<br>   <a href="mailto:&#117;&#115;&#x65;&#114;&#52;&#x40;&#108;&#97;&#98;&#x2e;&#x65;&#120;&#97;&#x6d;&#x70;&#108;&#x65;&#x2e;&#99;&#111;&#x6d;">&#117;&#115;&#x65;&#114;&#52;&#x40;&#108;&#97;&#98;&#x2e;&#x65;&#120;&#97;&#x6d;&#x70;&#108;&#x65;&#x2e;&#99;&#111;&#x6d;</a>。</p><p>(overcloud) [stack@director ~]$ openstack domain create Demo<br>(overcloud) [stack@director ~]$ openstack project create Engineering –domain Demo<br>(overcloud) [stack@director ~]$ openstack project create Production –domain Demo</p><p>创建admin用户和admin角色，并跟两个项目绑定<br>(overcloud) [stack@director ~]$ openstack user create admin –domain Demo –password redhat<br>(overcloud) [stack@director ~]$ openstack role add –user admin –user-domain Demo –project Engineering –project-domain Demo admin<br>(overcloud) [stack@director ~]$ openstack role add –user admin –user-domain Demo –project Production –project-domain Demo admin<br>剩下的配置图形化完成。使用图形化来登录，所有剩下的配置都可以通过图形化完成。</p><p>方法2，命令行完成：（不推荐）<br>创建域和组：<br>source ~&#x2F;overcloudrc<br>(overcloud) [stack@director ~]$ openstack domain create 210Demo<br>(overcloud) [stack@director ~]$ openstack group create Devops –domain 210Demo<br>创建项目：<br>(overcloud) [stack@director ~]$ openstack project create Engineering –domain 210Demo<br>(overcloud) [stack@director ~]$ openstack project create Production –domain 210Demo</p><p>创建用户：<br>openstack user create Robert –domain 210Demo –password redhat –project Engineering<br>–email <a href="mailto:&#x72;&#x6f;&#x62;&#101;&#x72;&#x74;&#x40;&#x6c;&#x61;&#x62;&#46;&#101;&#120;&#97;&#109;&#x70;&#108;&#x65;&#x2e;&#99;&#111;&#109;">&#x72;&#x6f;&#x62;&#101;&#x72;&#x74;&#x40;&#x6c;&#x61;&#x62;&#46;&#101;&#120;&#97;&#109;&#x70;&#108;&#x65;&#x2e;&#99;&#111;&#109;</a><br>openstack user create George –domain 210Demo –password redhat –project Engineering<br>–email <a href="mailto:&#103;&#101;&#x6f;&#114;&#103;&#101;&#x40;&#108;&#97;&#98;&#46;&#101;&#120;&#x61;&#x6d;&#112;&#x6c;&#101;&#46;&#x63;&#x6f;&#109;">&#103;&#101;&#x6f;&#114;&#103;&#101;&#x40;&#108;&#97;&#98;&#46;&#101;&#120;&#x61;&#x6d;&#112;&#x6c;&#101;&#46;&#x63;&#x6f;&#109;</a><br>openstack user create William –domain 210Demo –password redhat –project Production<br>–email <a href="mailto:&#x77;&#x69;&#108;&#108;&#x69;&#97;&#109;&#64;&#108;&#97;&#x62;&#x2e;&#x65;&#x78;&#97;&#109;&#x70;&#x6c;&#x65;">&#x77;&#x69;&#108;&#108;&#x69;&#97;&#109;&#64;&#108;&#97;&#x62;&#x2e;&#x65;&#x78;&#97;&#109;&#x70;&#x6c;&#x65;</a><br>openstack user create John –domain 210Demo –password redhat –project Production –<br>email <a href="mailto:&#x6a;&#x6f;&#104;&#110;&#x40;&#108;&#x61;&#98;&#x2e;&#101;&#120;&#x61;&#109;&#112;&#x6c;&#101;&#x2e;&#99;&#111;&#109;">&#x6a;&#x6f;&#104;&#110;&#x40;&#108;&#x61;&#98;&#x2e;&#101;&#120;&#x61;&#109;&#112;&#x6c;&#101;&#x2e;&#99;&#111;&#109;</a></p><p>分配角色：<br>Engineering 项目：<br>openstack role add –user Robert –user-domain 210Demo –project Engineering –<br>project-domain 210Demo admin<br>openstack role add –user Robert –user-domain 210Demo –project Engineering –<br>project-domain 210Demo <em>member</em><br>openstack role add –user George –user-domain 210Demo –project<br>Engineering –project-domain 210Demo <em>member</em></p><p>验证角色分配：<br>openstack role assignment list –user Robert –user-domain 210Demo –project Engineering<br>–project-domain 210Demo –names<br>openstack role assignment list –user George –user-domain 210Demo –project<br>Engineering –project-domain 210Demo –names</p><p>Production 项目：<br>openstack user create William –domain 210Demo –password redhat –project Production<br>–email <a href="mailto:&#x77;&#x69;&#x6c;&#x6c;&#105;&#97;&#109;&#64;&#108;&#x61;&#x62;&#x2e;&#x65;&#x78;&#97;&#x6d;&#112;&#108;&#x65;">&#x77;&#x69;&#x6c;&#x6c;&#105;&#97;&#109;&#64;&#108;&#x61;&#x62;&#x2e;&#x65;&#x78;&#97;&#x6d;&#112;&#108;&#x65;</a><br>openstack user create John –domain 210Demo –password redhat –project Production –<br>email <a href="mailto:&#x6a;&#111;&#x68;&#110;&#x40;&#x6c;&#97;&#98;&#x2e;&#x65;&#120;&#97;&#x6d;&#x70;&#x6c;&#101;">&#x6a;&#111;&#x68;&#110;&#x40;&#x6c;&#97;&#98;&#x2e;&#x65;&#120;&#97;&#x6d;&#x70;&#x6c;&#101;</a></p><p>分配角色：<br>openstack role add –user George –user-domain 210Demo –project Engineering –<br>project-domain 210Demo <em>member</em><br>openstack role add –user William –user-domain 210Demo –project Production –projectdomain 210Demo admin<br>openstack role add –user William –user-domain 210Demo –project Production –projectdomain 210Demo <em>member</em><br>openstack role add –user John –user-domain 210Demo –project Production –projectdomain 210Demo <em>member</em></p><p>添加用户到组：<br>openstack group add user –group-domain 210Demo –user-domain 210Demo Devops<br>Robert<br>openstack group add user –group-domain 210Demo –user-domain 210Demo Devops<br>George<br>openstack group add user –group-domain 210Demo –user-domain 210Demo Devops<br>William<br>openstack group add user –group-domain 210Demo –user-domain 210Demo Devops<br>John</p><p>当前OpenStack 13的版本：使用的token 类型是fernet  密钥是轮转的密钥<br>教材的P145的实验</p><p>有四种 Token 提供者：UUID、 PKI、 PKIZ 和最新的 Fernet（pronounced fehr’nεt）<br>UUID Token：在 Folsom 版本前是默认的的提供者，由 32 byte 的随机 UUID 构成。轻<br>量化，易于验证，但是也有缺点：UUID 保存在 Keystone 的后端，token 过期不会删除，<br>因此新的 UUID 会不断占用存储空间，而且 UUID token 的验证比较耗费网络带宽，进而<br>限制了集群的规模</p><p>PKI 和 PKIZ Token：Public Key Infrastructure (PKI) tokens 由 Grizzly 版本引入，降低<br>了网络带宽的消耗，增加了安全性。 PKIZ token 通过 zlib 压缩 token。优点是通过公私<br>钥验证方式不需要每次都传递身份验证信息，请求服务只需要获取身份认证服务的 CA 证<br>书即可。 缺点是性能太差，花大量时间在创建和验证 token 上，对于大负载不可接受。<br>PKI&#x2F;PKIZ token 在 Mitaka 版本又被 UUID Token 替代，并在 Ocata 版本被取消</p><p>Fernet Token：此 token 基于对称加密验证，加解密使用相同的秘钥。 Fernet 支持多<br>keys，使用当前的 key 进行加密，上一个 key 或下一个 key 进行解密，通过滚动循环来增加安全性。称为秘钥的轮转<br>fernet token 不超过250 bytes 且不存储到 Keystone 的后端，不需要永久保存且不需要维护，即时生成。保存在每个 Keystone 的节点 &#x2F;etc&#x2F;keystone&#x2F;fernetkeys&#x2F; 目录中。 Fernet token 由 Kilo 版本引入，成为 Ocata 版本的默认token</p><p>要配置密钥的轮转，使用的是mistral组件启用一个工作流的方式来实现的，这个组件是安装在undercloud上的<br>(overcloud) [stack@director ~]$ source stackrc<br>(undercloud) [stack@director ~]$ openstack workflow list -f yaml | grep fernet<br>  Name: tripleo.fernet_keys.v1.rotate_fernet_keys<br>(undercloud) [stack@director ~]$ openstack workflow execution create tripleo.fernet_keys.v1.rotate_fernet_keys ‘{“container”: “overcloud”}’<br>+——————–+——————————————-+<br>| Field              | Value                                     |<br>+——————–+——————————————-+<br>| ID                 | 087758c7-7b4c-4412-8637-cff6662e3457      |<br>| Workflow ID        | c00289f9-612a-4744-b94a-a24d8e89736b      |<br>| Workflow name      | tripleo.fernet_keys.v1.rotate_fernet_keys |<br>| Workflow namespace |                                           |<br>| Description        |                                           |<br>| Task Execution ID  | <none>                                    |<br>| State              | RUNNING                                   |<br>| State info         | None                                      |<br>| Created at         | 2019-08-16 18:38:36                       |<br>| Updated at         | 2019-08-16 18:38:36                       |<br>+——————–+——————————————-+</p><p>()[root@controller0 fernet-keys]# ls -l<br>total 12<br>-rw——-. 1 keystone keystone 44 Aug 16 18:39 0<br>-rw——-. 1 keystone keystone 44 Aug 16 18:39 1<br>-rw——-. 1 keystone keystone 44 Aug 16 18:39 2</p><h1 id="第四章-镜像管理"><a href="#第四章-镜像管理" class="headerlink" title="第四章 镜像管理"></a>第四章 镜像管理</h1><p>如果创建自定义镜像，公共镜像无法满足用户的需求。<br>在基础镜像  或者公共镜像的基础上 对镜像做微调。</p><p>驱动的小问题：<br>vmware: e1000e(CPU仿真 性能较差）  vmnet3 （全虚拟化的半虚拟化的驱动  性能好  装vmtools）选择哪一个驱动？<br>kvm:    半虚拟化的驱动  针对的是磁盘驱动和网卡驱动  virtI&#x2F;O  Linux不需要安装   windows需要单独安装</p><p>四个自定义镜像的工具：diskimage-builder  guestfish   virt-customize cloud-init</p><p>创建自定义镜像，注意的问题:</p><ol><li>安装cloud-init</li><li>安装virt io 的驱动</li><li>ip地址要设置成动态</li><li>封装  删除主机的唯一的属性<br>windows: sysprep.exe （系统里执行）<br>linux: virt-sysprep -a rhel7.qcow2 虚拟化服务器节点上执行</li></ol><p>guestfish P187实验<br>实验环境中：需要在workstation上完成  不能在director上做  会失败<br>考试：director上完成<br>[root@workstation ~]# yum install libguestfs-tools-c<br>[root@workstation ~]# guestfish -i –network -a osp-small.qcow2</p><blockquote><p><fs> command “yum install -y httpd”<br><fs> command “systemctl enable httpd”<br><fs> command “systemctl is-enabled httpd”<br>enabled</p></blockquote><blockquote><p><fs> touch &#x2F;var&#x2F;www&#x2F;html&#x2F;index.html<br><fs> edit &#x2F;var&#x2F;www&#x2F;html&#x2F;index.html<br><fs> command “useradd user1”</p></blockquote><blockquote><p><fs> command “passwd -d user1”<br>Removing password for user user1.<br>passwd: Success</p></blockquote><blockquote><p><fs> selinux-relabel &#x2F;etc&#x2F;selinux&#x2F;targeted&#x2F;contexts&#x2F;files&#x2F;file_contexts &#x2F;<br><fs> exit</p></blockquote><p>. virt-customize<br>virt-customize -a ~&#x2F;demo-rhel-base.qcow2 –install aide –root-password password:letmein –selinux-relabel</p><ol start="4"><li>cloud-init<br>cloud-init是一组python的脚本和程序，通过这个程序来完成系统的定制的过程，包括 密钥的注入  主机名  网络设置</li></ol><p>使用cloud-init常见有两种格式：</p><ol><li><p>shell脚本  #!&#x2F;bin&#x2F;bash<br>#!&#x2F;bin&#x2F;bash<br>yum install httpd -y<br>systemctl enable httpd<br>systemctl start httpd</p></li><li><p>cloud-config  云配置格式  P198页的实验<br>[student@workstation ~]$ vim cloud.cfg<br>#cloud-config<br>users:</p></li></ol><ul><li>name: cloud-user<br>sudo: ALL&#x3D;(ALL) NOPASSWD:ALL<br>ssh_authorized_keys:</li><li>ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDHufCmzG95rJkXHZOe+7rHMaf3me7geAfdYAc2fuoKjSVoBni4aF4MYkSmb1UYyXjtQ++x2+i13+Osn9FJZmvda0maqT6DuIcpiAxldVrnNJFv5L1VFGiFDbUglThPc25Ytn7bWqg02pFJz4Nc9vN+PzVETevL8b0tMvWPQ44MRuXCCM+UaHO1mBD2pcEnpQ1R&#x2F;MzYxTzzdvjP5iBn4GAp7KjUw&#x2F;+FvBhlNiKsXJjQGl6MHbCZhtgsntJzl7tKGY4SgJXZaUD0TnpPeCBlEmWNUz4hAoVMfiiZA4fLAmJ7yZqwRcr4EVnqbmZC6CfIhVxb1J69UHhK62KS6513MP3v Generated-by-Nova</li></ul><p>packages:</p><ul><li>aide</li><li>httpd</li><li>vsftpd<br>runcmd:</li><li>echo “Customized with cloud-init” &gt; &#x2F;etc&#x2F;motd</li><li>echo “This is a test file” &gt; &#x2F;home&#x2F;cloud-user&#x2F;test_file.txt</li></ul><p>hostname: cloud-test.example.com<br>manage_etc_hosts: true    （更新&#x2F;etc&#x2F;hosts）</p><p>服务启动：<br>cloud-init-local —-&gt; cloud-init —–&gt; cloud-config —-&gt;cloud-final </p><h1 id="第五章-存储管理"><a href="#第五章-存储管理" class="headerlink" title="第五章  存储管理"></a>第五章  存储管理</h1><p>常见的存储的分类： 1. SAN<br>                      FC-SAN  ISCSI   FCoE<br>                   2. NAS<br>                      NFS   CIFS<br>                                      3. ceph 分布式  软件定义的存储  —–&gt; 容器化ceph: rook ceph<br>                                           支持三种方式访问：1. RGW (对象存储方式去访问） 2. RBD  以块的方式访问  裸设备<br>                                                          3. cephfs (cephfs原生的文件系统，在系统上安装cephfs的软件包，然后才能挂载）<br>                                                               如果openstack要跟ceph做集成，需要配置基于cephx的身份验证，基于一个秘钥来实现身份验证<br>                                                               &#x2F;etc&#x2F;ceph&#x2F;ceph.client.openstack.keyring   ceph.conf</p><p>​                 创建一个基于cephx身份验证的用户：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph auth get-or-create client.application1 mon &#x27;allow r&#x27; &gt; /etc/ceph/ceph.client.application1.keyring</span><br></pre></td></tr></table></figure><p>​               创建ceph存储类型：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openstack volume type create --property volume_backend_name=tripleo_ceph cephvoltype</span><br><span class="line">               openstack volume create --size 1 --type cephvoltype cephvol1</span><br><span class="line">               rados -p volumes ls</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> RHCA,linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux基础服务应用</title>
      <link href="/2022/07/12/Linux%E5%9F%BA%E7%A1%80%E6%9C%8D%E5%8A%A1%E5%BA%94%E7%94%A8/"/>
      <url>/2022/07/12/Linux%E5%9F%BA%E7%A1%80%E6%9C%8D%E5%8A%A1%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="SSH远程连接服务"><a href="#SSH远程连接服务" class="headerlink" title="SSH远程连接服务"></a>SSH远程连接服务</h2><h3 id="SSH协议"><a href="#SSH协议" class="headerlink" title="SSH协议"></a>SSH协议</h3><p>​SSH：应用层协议</p><p>​作用：远程连接设备，方便操作</p><h3 id="服务器管理方式"><a href="#服务器管理方式" class="headerlink" title="服务器管理方式"></a>服务器管理方式</h3><ol><li><p>本地管理方式</p><p>安装系统、故障修复</p></li><li><p>远程连接方式</p></li></ol><h3 id="SSH服务架构"><a href="#SSH服务架构" class="headerlink" title="SSH服务架构"></a>SSH服务架构</h3><p>服务端：开启SSH服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看是否有ssh进程</span></span><br><span class="line">ps -elf|grep ssh</span><br><span class="line"></span><br><span class="line"><span class="comment"># Print network connections, routing tables, interface statistics, masquerade connections, and multicast mem‐berships</span></span><br><span class="line">netstat -antp | grep ssh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提供ssh服务的软件</span></span><br><span class="line">[lnsslimbo@mycentos8 ~]$ <span class="built_in">which</span> sshd</span><br><span class="line">/usr/sbin/sshd</span><br><span class="line">[lnsslimbo@mycentos8 ~]$ rpm -qf /usr/sbin/sshd</span><br><span class="line">openssh-server-8.0p1-5.el8.aarch64</span><br></pre></td></tr></table></figure><p> 客户端：连接软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">windows：</span><br><span class="line">xmanager，secureCRT，Putty</span><br><span class="line">linux： </span><br><span class="line">open-cliets软件</span><br><span class="line">ssh命令</span><br><span class="line">[lnsslimbo@mycentos8 ~]$ rpm -q openssh-clients</span><br><span class="line">openssh-clients-8.0p1-5.el8.aarch64</span><br></pre></td></tr></table></figure><h3 id="SSH客户端工具使用"><a href="#SSH客户端工具使用" class="headerlink" title="SSH客户端工具使用"></a>SSH客户端工具使用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 远程连接</span></span><br><span class="line">ssh user@ip</span><br><span class="line"></span><br><span class="line"><span class="comment"># 远程命令</span></span><br><span class="line"><span class="comment"># 查看内存</span></span><br><span class="line">ssh user@ip free -m</span><br><span class="line"></span><br><span class="line"><span class="comment"># 远程传输文件</span></span><br><span class="line"><span class="comment"># 从前拷贝到后，本地路径直接写，服务器端路径为user@ip：路径</span></span><br><span class="line">scp 路径 路径</span><br><span class="line">scp -r 目录 路径</span><br><span class="line"></span><br><span class="line"><span class="comment"># 多台机器相互传输文件时，要求同时安装过rsync,增量拷贝</span></span><br><span class="line">[lnsslimbo@mycentos8 ~]$ rpm -q rsync</span><br><span class="line">rsync-3.1.3-12.el8.aarch64</span><br><span class="line"></span><br><span class="line"><span class="comment"># a是保留权限，v是显示过程，与scp类似</span></span><br><span class="line">rsync -av a b</span><br></pre></td></tr></table></figure><h3 id="SSH服务的认证方式"><a href="#SSH服务的认证方式" class="headerlink" title="SSH服务的认证方式"></a>SSH服务的认证方式</h3><blockquote><ul><li><p>基于用户名密码的认证</p></li><li><p>基于密钥的认证&#x2F;免密SSH</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在客户端生成密钥对，指定类型为rsa，默认生成到家目录/.ssh中</span></span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line"><span class="comment"># 将公钥拷贝给服务端，服务端将公钥信息保存到家目录/.ssh/authorized_keys文件中</span></span><br><span class="line">ssh-copy-id user@ip</span><br></pre></td></tr></table></figure></li><li><p>注意：</p><ul><li>密钥的认证是基于用户实现的</li><li>密钥的认证是单向的</li></ul></li></ul></blockquote><h3 id="SSH配置文件"><a href="#SSH配置文件" class="headerlink" title="SSH配置文件"></a>SSH配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#修改ssh端口，不得小于1024（已经分配完给特定的应用）</span></span><br><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line">port 8888</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启sshd进程</span></span><br><span class="line">systemctl restart sshd </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看网络状态</span></span><br><span class="line">[root@mycentos8 home] netstat -antp | grep ssh</span><br><span class="line">tcp     0   0 0.0.0.0:22       0.0.0.0:*           LISTEN      942/sshd            </span><br><span class="line">tcp     0   0 10.211.55.3:22   10.211.55.2:62706   ESTABLISHED 2755/sshd: lnsslimb </span><br><span class="line">tcp6    0   0 :::22            :::*                LISTEN      942/sshd       </span><br></pre></td></tr></table></figure><p><a href="https://segmentfault.com/a/1190000022686430">netstat笔记</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">netstat常见参数</span><br><span class="line">-a (all) 显示所有选项，默认不显示LISTEN相关。</span><br><span class="line">-t (tcp) 仅显示tcp相关选项。</span><br><span class="line">-u (udp) 仅显示udp相关选项。</span><br><span class="line">-n 拒绝显示别名，能显示数字的全部转化成数字。</span><br><span class="line">-l 仅列出有在 Listen (监听) 的服务状态。</span><br><span class="line"></span><br><span class="line">-p 显示建立相关链接的程序名</span><br><span class="line">-r 显示路由信息，路由表</span><br><span class="line">-e 显示扩展信息，例如uid等</span><br><span class="line">-s 按各个协议进行统计</span><br><span class="line">-c 每隔一个固定时间，执行该netstat命令。</span><br></pre></td></tr></table></figure><h4 id="修改防火墙相关"><a href="#修改防火墙相关" class="headerlink" title="修改防火墙相关"></a>修改防火墙相关</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">关闭防火墙服务</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">关闭防火墙开机自弃</span></span><br><span class="line">systemctl disable firewalld</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">彻底屏蔽防火墙服务</span></span><br><span class="line">systemctl mask firewalld</span><br></pre></td></tr></table></figure><h4 id="修改selinux相关"><a href="#修改selinux相关" class="headerlink" title="修改selinux相关"></a>修改selinux相关</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看selinux状态</span></span><br><span class="line">getenforce</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">临时关闭</span></span><br><span class="line">setenforce 0</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">彻底关闭selinux</span></span><br><span class="line">vim /etc/sysconfig/selinux</span><br><span class="line">SELINUX=enforcing -&gt; disabled</span><br></pre></td></tr></table></figure><blockquote><p>ssh默认端口修改后，scp需要使用-P指定端口</p></blockquote><h4 id="禁止root用户登录"><a href="#禁止root用户登录" class="headerlink" title="禁止root用户登录"></a>禁止root用户登录</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line">PermitRootLogin yes -&gt; no</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改后需要重启ssh服务</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用其他用户登录后su -root提权</span></span><br></pre></td></tr></table></figure><h4 id="禁用密码登录"><a href="#禁用密码登录" class="headerlink" title="禁用密码登录"></a>禁用密码登录</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line">PasswordAuthentication yes -&gt; no</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 测试,linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RHCE学习笔记|RH294</title>
      <link href="/2021/08/18/RHCE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-RH294/"/>
      <url>/2021/08/18/RHCE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-RH294/</url>
      
        <content type="html"><![CDATA[<h1 id="写在前头"><a href="#写在前头" class="headerlink" title="写在前头"></a>写在前头</h1><blockquote><p>学习294这本书的感觉跟之前两本最大的差异感就是，csa的题是可以在完成“把课听明白，把笔记做完整，脑子里都有印象”之后可以直接上手去做，就差不多能做下去的。除了容器的部分比较复杂意外，基本上就算磕磕绊绊也能顺下来。ce的学习，就294一本书，知识点比较整合，只有ansible的相关内容，从笔记的字数上也能看出来，但就是看上去这么简单的四天的学习内容，体量只有15道，但是考试时间却是四个小时（虽然用不了）。</p><p>我用之前学习的态度，去认真地过视频，从视频中摘笔记。等到我自信地说我可以去做题了，实在不会我从笔记里也能找到。等到我上手以后，才发现，有些题是看着笔记也完全不知道该从哪里做起。</p><p>经过一段时间的学习，我可能知道我学会了什么知识点，学知识点的时候都能应用到某些地方。但是做题的时候，题的字面意思不会告诉你，我会用到哪些知识点。尤其一些题中的涉及逻辑的题，你可能知道会用到判断，用到循环，用到变量，一个逻辑能力的思考过程，如果没有之前的练习，在考场上现想，我想时间怎么都是不够的，一个playbook想半天，考题中可不止这么一个简单的逻辑。从这一点便是可以看出，实践的重要性，在面对实践性考试时，我觉得不记笔记都可以，毕竟如果你不会就会翻来覆去地去学，你有了笔记自以为会了，养成了一个一忘了就去看笔记的习惯，这对考试是极不友好的坏习惯。</p><p>所以这个笔记我做的内容不多，把课完整地过完以后，知识点收集了一遍，就没太多注重在理论上的深究了，而且一些在考试中遇到的问题与其他想法也没有放上来。</p><p>限制别人思考的能力是一种变相的debuff（当然也不排除是我懒的写上来了），其中由于对ansible之前的陌生以及生活中完全没有用到过的缺少实际应用中的思考，所以这篇笔记的内容最多只是将老师上课内容的知识点摘录了一部分，甚至有所不及。ansible的内容在ca中有更深入的研究，我现在所学不过皮毛，对学习上的帮助不大，对考试甚至还有危害性。非要说他有什么作用，那就只有跟着老师的课过一遍了。</p><hr><p>想要考试，练习比笔记更重要，我用自己的经验来证明这一点。事无巨细的笔记不会让你思考的速度更快，只有做过逻辑相关的思考，并且一步一步完整地做下来过，才会对考试有所帮助。</p><p>如果你是单纯的为了扩展学习，此篇笔记的内容欠缺略有些多。如果是为了考试，那么我希望在你看过一遍笔记以后，完全摒弃它去做题，有了自己的思考，才会转变为自己的内容。</p><hr><p>祝考试的都过，学习的都有进步。</p><p><strong>&#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; Copyright © 2021.8.18 LNSS. in Zhipan Li’s Class &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D;</strong></p></blockquote><h1 id="第一章-ansible简介"><a href="#第一章-ansible简介" class="headerlink" title="第一章  ansible简介"></a>第一章  ansible简介</h1><table><thead><tr><th>第一天</th><th>第二天</th><th>第三天</th><th>第四天</th></tr></thead><tbody><tr><td>介绍Ansible</td><td>管理变量和事实</td><td></td><td>对Ansible进行故障排除</td></tr><tr><td>部署Ansible</td><td>实施任务控制</td><td>在被管理节点上创建文件或目录</td><td>自动执行Linux管理任务</td></tr><tr><td>实施Playbook</td><td></td><td>管理大项目</td><td>总复习</td></tr><tr><td>EHCE模拟题及参考答案</td><td></td><td>利用角色简化Playbook</td><td></td></tr></tbody></table><p>RHCA-407+升级&#x3D;RH447</p><p>RHCE8&#x3D;407&#x3D;ansible  RHCE7（服务、安全）+升级 &#x3D; RH358</p><p>447  358  云计算 两门课</p><h2 id="术语"><a href="#术语" class="headerlink" title="术语"></a>术语</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 控制节点（Control node）：</span></span><br><span class="line">指安装了Ansible的主机，也叫Ansible服务器端,管理机。 Ansible控制节点主要用于发布运行任务，执行控制命令。Ansible的程序都安装在控制节点上，控制节点需要安装Python和Ansible所需的各种依赖库。注意：目前Ansible还不能安装在Windows下。</span><br><span class="line"><span class="section"># 受控节点（Managed nodes）：</span></span><br><span class="line">也叫客户机，就是想用Ansible执行任务的客户服务器。</span><br><span class="line"><span class="section"># 清单（Inventory）：</span></span><br><span class="line">受控节点的列表，就是所有要管理的主机列表。</span><br><span class="line"><span class="section"># host文件：</span></span><br><span class="line">清单列表通常保存在一个名为host文件中。在host文件中，可以使用IP地址或者主机名来表示具体的管理主机和认证信息，并可以根据主机的用户进行分组。缺省文件：/etc/ansible/hosts，可以通过-i指定自定义的host文件。</span><br><span class="line"><span class="section"># 模块（Modules）：</span></span><br><span class="line">模块是Ansible执行特定任务的代码块。比如：添加用户，上传文件和对客户机执行ping操作等。Ansible现在默认自带450多个模块，，Ansible Galaxy公共存储库则包含大约1600个模块。</span><br><span class="line"><span class="section"># 任务（Task）：</span></span><br><span class="line">是Ansible客户机上执行的操作。可以使用ad-hoc单行命令执行一个任务。</span><br><span class="line"><span class="section"># 剧本(Playbook):</span></span><br><span class="line">是利用YAML标记语言编写的可重复执行的任务的列表，playbook实现任务的更便捷的读写和贡献。比如，在Github上有大量的Ansible playbooks共享，你要你有一双善于发现的眼睛你就能找到大量的宝藏。</span><br><span class="line"><span class="section"># 角色（roles）：</span></span><br><span class="line">角色是Ansible 1.2版本引入的新特性，用于层次性、结构化地组织playbook。roles能够根据层次型结构自动装载变量文件、tasks以及handlers等。</span><br></pre></td></tr></table></figure><h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># ansible是新出现的自动化运维工具，基于Python开发，集合了众多运维工具（puppet、cfengine、chef、func、fabric）的优点，实现了批量系统配置、批量程序部署、批量运行命令等功能。ansible是基于模块工作的，本身没有批量部署的能力。真正具有批量部署的是ansible所运行的模块，ansible只是提供一种框架。主要包括：</span></span><br><span class="line">(1) 连接插件connection plugins：负责和被监控端实现通信；</span><br><span class="line">(2) host inventory：指定操作的主机，是一个配置文件里面定义监控的主机；</span><br><span class="line">(3) 各种模块核心模块、command模块、自定义模块；</span><br><span class="line">(4) 借助于插件完成记录日志邮件等功能；</span><br><span class="line">(5) playbook：剧本执行多个任务时，非必需可以让节点一次性运行多个任务。</span><br></pre></td></tr></table></figure><h1 id="第二章-部署ansible"><a href="#第二章-部署ansible" class="headerlink" title="第二章 部署ansible"></a>第二章 部署ansible</h1><h2 id="规划"><a href="#规划" class="headerlink" title="规划"></a>规划</h2><table><thead><tr><th>节点</th><th>角色</th></tr></thead><tbody><tr><td>workstation</td><td>管理节点|ansible</td></tr><tr><td>servera</td><td>受管节点|python、SSH</td></tr><tr><td>serverb</td><td>受管节点|python、SSH</td></tr><tr><td>serverc</td><td>受管节点|python、SSH</td></tr><tr><td>serverd</td><td>受管节点|python、SSH</td></tr><tr><td>bastion</td><td>网关</td></tr><tr><td>classroom</td><td>软件仓库、DNS等</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[kiosk@foundation0 ~]$ <span class="built_in">cat</span> test.sh </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> workstation servera serverb;</span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">ssh root@<span class="variable">$i</span> <span class="string">&#x27;echo &quot;HOSTNAME IS: $HOSTNAME&quot;&#x27;</span></span><br><span class="line">ssh root@<span class="variable">$i</span> <span class="string">&#x27;python3 --version&#x27;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="配置文件ansible-cfg"><a href="#配置文件ansible-cfg" class="headerlink" title="配置文件ansible.cfg"></a>配置文件ansible.cfg</h2><h3 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h3><p>得出结论为：（从上到下由高到低）</p><ul><li><p>在环境变量<code>/etc/profile</code>中定义ANSIBLE_CONFIG</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ANSIBLE_CONFIG=/opt/ansible.cfg</span><br><span class="line">export ANSIBLE_CONFIG</span><br><span class="line"></span><br><span class="line">source  /etc/profile</span><br></pre></td></tr></table></figure></li><li><p><code>./ansible.cfg</code> 当前目录，一般使用该目录作为工作环境</p></li><li><p><code>~/.ansible.cfg</code>  家目录下隐藏文件</p></li><li><p><code>/etc/ansible/ansible.cfg</code>  全局变量</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install ansible</span></span><br><span class="line"><span class="comment"># ansible -V</span></span><br><span class="line"><span class="comment"># ansible --version</span></span><br><span class="line"><span class="comment"># vim /etc/ansible/ansible.cfg</span></span><br><span class="line"><span class="comment"># grep &#x27;\[.*&#x27; /etc/ansible/ansible.cfg</span></span><br><span class="line"><span class="comment"># vim /etc/ansible/ansible.cfg</span></span><br><span class="line"><span class="comment"># ansible --version|grep config</span></span><br><span class="line"><span class="comment"># ansible --version|grep &#x27;config &#x27;</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># mkdir ansible</span></span><br><span class="line"><span class="comment"># cd ani</span></span><br><span class="line"><span class="comment"># cd ansible/</span></span><br><span class="line"><span class="comment"># pwd</span></span><br><span class="line"><span class="comment"># cp /etc/ansible/ansible.cfg .</span></span><br><span class="line"><span class="comment"># ansible --version|grep &#x27;config &#x27;</span></span><br><span class="line"><span class="comment"># pwd</span></span><br><span class="line"><span class="comment"># cd</span></span><br><span class="line"><span class="comment"># ansible --version|grep &#x27;config &#x27;</span></span><br><span class="line"><span class="comment"># cd ansible/</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># ansible --version|grep &#x27;config &#x27;</span></span><br><span class="line"><span class="comment"># cd /mnt</span></span><br><span class="line"><span class="comment"># ansible --version|grep &#x27;config &#x27;</span></span><br><span class="line"><span class="comment"># cp /etc/ansible/ansible.cfg ~/.ansible.cfg</span></span><br><span class="line"><span class="comment"># ansible --version|grep &#x27;config &#x27;</span></span><br><span class="line"><span class="comment"># cd /root/ansible/</span></span><br><span class="line"><span class="comment"># pwd</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># ansible --version|grep &#x27;config &#x27;</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># echo $ANSIBLE_CONFIG</span></span><br><span class="line"><span class="comment"># ANSIBLE_CONFIG=/opt/ansible.cfg</span></span><br><span class="line"><span class="comment"># cp /etc/ansible/ansible.cfg /opt/</span></span><br><span class="line"><span class="comment"># echo $ANSIBLE_CONFIG</span></span><br><span class="line"><span class="comment"># ansible --version|grep &#x27;config &#x27;</span></span><br><span class="line"><span class="comment"># vim /etc/profile</span></span><br><span class="line"></span><br><span class="line">ANSIBLE_CONFIG=/opt/ansible.cfg</span><br><span class="line"><span class="built_in">export</span> ANSIBLE_CONFIG</span><br><span class="line"></span><br><span class="line"><span class="comment"># source /etc/profile</span></span><br><span class="line"><span class="comment"># ansible --version|grep &#x27;config &#x27;</span></span><br><span class="line"><span class="comment"># pwd</span></span><br><span class="line"><span class="comment"># history -w</span></span><br><span class="line"><span class="comment"># vim ~/.bash_history</span></span><br><span class="line"><span class="comment"># man ansible</span></span><br><span class="line"><span class="comment"># man ansible|grep -i file</span></span><br></pre></td></tr></table></figure><h3 id="各个选项分类"><a href="#各个选项分类" class="headerlink" title="各个选项分类"></a>各个选项分类</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@workstation tmp]# grep -E &#x27;^\[&#x27; /etc/ansible/ansible.cfg </span><br><span class="line">[defaults]</span><br><span class="line">[inventory]</span><br><span class="line">[privilege_escalation]</span><br><span class="line">[paramiko_connection]</span><br><span class="line">[ssh_connection]</span><br><span class="line">[persistent_connection]</span><br><span class="line">[accelerate]</span><br><span class="line">[selinux]</span><br><span class="line">[colors]</span><br><span class="line">[diff]</span><br></pre></td></tr></table></figure><h2 id="清单文件"><a href="#清单文件" class="headerlink" title="清单文件"></a>清单文件</h2><table><thead><tr><th><strong>主机</strong></th><th><strong>主机组</strong></th><th><strong>嵌套组</strong></th><th><strong>范围</strong></th></tr></thead><tbody><tr><td><strong>Web1.example.com</strong></td><td><strong>[web-servers]</strong></td><td><strong>[Web-servers]</strong></td><td><strong>【START:END】</strong></td></tr><tr><td><strong>Web2.example.com</strong></td><td><strong>Web1.example.com</strong>  <strong>Web2.example.com</strong></td><td><strong>Web1.example.com</strong>  <strong>Web2.example.com</strong></td><td><strong>Server[01:20].example.com</strong></td></tr><tr><td><strong>db1.example.com</strong></td><td><strong>[db-servers]</strong></td><td><strong>[Db-servers]</strong></td><td><strong>[a:d].dns.example.com</strong></td></tr><tr><td><strong>db1.example.com</strong></td><td><strong>db1.example.com</strong>  <strong>db2.example.com</strong></td><td><strong>db1.example.com</strong>  <strong>db2.example.com</strong></td><td></td></tr><tr><td><strong>192.168.10.20</strong></td><td><strong>172.17.25.8</strong></td><td><strong>172.17.25.8</strong></td><td></td></tr><tr><td></td><td></td><td><strong>[Servers:children]</strong></td><td></td></tr><tr><td></td><td></td><td><strong>Web-servers</strong></td><td></td></tr></tbody></table><h2 id="多清单文件"><a href="#多清单文件" class="headerlink" title="多清单文件"></a>多清单文件</h2><p>首先需要将<code>/root/ansible/ansible.cfg</code>中的清单文件配置修改为一个目录，将所有清单文件放到该目录下</p><ul><li><p>对于目录下创建的多个清单文件，如需创建嵌套组，需要再创建一个文件，其中写入以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[servers:children]</span><br><span class="line">host-pattern1</span><br><span class="line">host-pattern2</span><br></pre></td></tr></table></figure><blockquote><p>但是必须保证这个文件是排序在所有嵌套组中出现的清单之后出现的，才能识别到</p><p>为了保证该文件的顺序是排在所有文件之后，需要按照命名的排序规则修改该文件的名字来满足需求(a-z)</p></blockquote></li><li><p>所以一般采用第二种方法，在文件中写入以下内容（先导入清单再写嵌套组）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[host-pattern1]</span><br><span class="line">[host-pattern2]</span><br><span class="line">[servers:children]</span><br><span class="line">host-pattern1</span><br><span class="line">host-pattern2</span><br></pre></td></tr></table></figure></li></ul><h2 id="连接windows-无用"><a href="#连接windows-无用" class="headerlink" title="连接windows^无用^"></a>连接windows^无用^</h2><p>Microsoft windows 受管主机使用winrm协议和端口5986进行连接，若要这样配置，可以将所有这些受管主机放入windows组，然后创建一个名为<code>group_vars/windows</code>（创建一个组变量）的文件并使它包含下列几行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Ansible_connection: winrm</span><br><span class="line">Ansible_port: 5986</span><br></pre></td></tr></table></figure><h2 id="配置一个工作环境-主要"><a href="#配置一个工作环境-主要" class="headerlink" title="配置一个工作环境^主要^"></a>配置一个工作环境^主要^</h2><ol><li><p>装包^先确认环境中有没有ansible^</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y ansible</span><br></pre></td></tr></table></figure></li><li><p>将默认的配置文件<code>/etc/ansible/ansible.cfg</code>复制到<code>/root/ansible/</code>下，以该目录作为当前工作目录</p></li><li><p>仿造系统中示例的清单文件<code>/etc/ansible/hosts</code>，在<code>/root/ansible/</code>下创建清单文件，内容如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[web]</span><br><span class="line">servera.lab.example.com</span><br><span class="line">serverb.lab.example.com</span><br><span class="line">[db]</span><br><span class="line">serverc.lab.example.com</span><br><span class="line">serverd.lab.example.com</span><br><span class="line">[servers:children]</span><br><span class="line">web</span><br><span class="line">db</span><br></pre></td></tr></table></figure><p>在同级目录下的<code>ansible.cfg</code>中，配置如下内容（非强制性，只是配置一个常用的环境）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inventory      = /root/ansible/inventory</span><br></pre></td></tr></table></figure></li><li><p>可以通过以下命令查看配置好的清单文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">有层级关系的查看所有清单文件中的结构</span></span><br><span class="line">ansible-inventory --g</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看单个组中包含哪些主机</span></span><br><span class="line">ansible --list-host 组</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">以json格式显示当前的清单文件</span></span><br><span class="line">ansible-inventory --list</span><br></pre></td></tr></table></figure></li></ol><h2 id="AD-hoc（命令行临时管理）-有用"><a href="#AD-hoc（命令行临时管理）-有用" class="headerlink" title="AD-hoc（命令行临时管理）^有用^"></a>AD-hoc（命令行临时管理）^有用^</h2><ul><li><strong>临时命令,一次性执行,选项的优先级高于任何配置文件</strong></li></ul><p><code>ansible host-pattern –m module [-a ‘module arguments’] [-i inventory]</code></p><p>​模块参数，多个参数在’’中用;隔开，但是要指定支持的模块（比如shell）</p><blockquote><p> ansible + 主机组 + 模块类型(可省略,默认为command) + 参数 + 指定清单文件(可省略,默认为ansible.cfg配置)</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim ansible.cfg</span></span><br><span class="line"><span class="comment"># vim hosts</span></span><br><span class="line"><span class="comment"># ansible-inventory --g</span></span><br><span class="line"><span class="comment"># ansible webservers -m shell -a &#x27;whoami;hostname&#x27;</span></span><br><span class="line"><span class="comment"># vim ansible.cfg</span></span><br><span class="line"><span class="comment"># ansible webservers -m shell -a &#x27;whoami;hostname&#x27;</span></span><br><span class="line"><span class="comment"># ansible dbservers -m shell -a &#x27;whoami;hostname&#x27;</span></span><br><span class="line"><span class="comment"># ssh root@servera</span></span><br><span class="line"><span class="comment"># ssh student@servera</span></span><br><span class="line"><span class="comment"># ansible servers -m shell -a &#x27;whoami;hostname&#x27;</span></span><br><span class="line"><span class="comment"># ansible servers -m shell -a &#x27;whoami;date;hostname&#x27;</span></span><br><span class="line"><span class="comment"># ansible servers -m ping</span></span><br><span class="line"><span class="comment"># ansible servers -m shell -a &#x27;useradd test&#x27;</span></span><br><span class="line"><span class="comment"># ansible servers -m shell -a &#x27;whoami&#x27;</span></span><br><span class="line"><span class="comment"># vim ansible.cfg</span></span><br><span class="line"><span class="comment"># ansible servers -m shell -a &#x27;useradd test&#x27;</span></span><br><span class="line"><span class="comment"># ansible servers -m shell -a &#x27;id test&#x27;</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># vim test.sh</span></span><br><span class="line"><span class="comment"># sh test.sh</span></span><br><span class="line"><span class="comment"># vim test.sh</span></span><br><span class="line"><span class="comment"># sh test.sh</span></span><br><span class="line"><span class="comment"># vim ansible.cfg</span></span><br><span class="line"><span class="comment"># ansible servers -m shell -a &#x27;whoami&#x27;</span></span><br><span class="line"><span class="comment"># vim ansible.cfg</span></span><br><span class="line"><span class="comment"># ansible servers -m shell -a &#x27;whoami&#x27;</span></span><br><span class="line"><span class="comment"># ssh test@servera</span></span><br><span class="line"><span class="comment"># vim ansible.cfg</span></span><br><span class="line"><span class="comment"># cp hosts /home/student/</span></span><br><span class="line"><span class="comment"># cp ansible.cfg /home/student/</span></span><br><span class="line"><span class="comment"># chown -R student:student /home/student/</span></span><br><span class="line"><span class="comment"># su - student</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ansible-inventory --g</span></span><br><span class="line"><span class="comment"># ansible all -m shell -a &#x27;useradd redhat&#x27;</span></span><br><span class="line"><span class="comment"># ansible all -m shell -a &#x27;id redhat&#x27;</span></span><br><span class="line"><span class="comment"># ansible all -m shell -a &#x27;mkdir /test&#x27;</span></span><br><span class="line"><span class="comment"># ansible all -m shell -a &#x27;ls -ld /test&#x27;</span></span><br><span class="line"><span class="comment"># history</span></span><br><span class="line"><span class="comment"># ansible all -m shell -a &#x27;mkdir /test&#x27;</span></span><br><span class="line"><span class="comment"># ansible all -m file -a &#x27;path=/test state=directory&#x27;</span></span><br><span class="line"><span class="comment"># history</span></span><br><span class="line"><span class="comment"># ansible all -m file -a &#x27;path=/test state=directory&#x27;</span></span><br><span class="line"><span class="comment"># ansible all -m file -a &#x27;path=/harry state=directory&#x27;</span></span><br><span class="line"><span class="comment"># ansible all -m shell -a &#x27;ls -ld /harry&#x27;</span></span><br><span class="line"><span class="comment"># ansible all -m file -a &#x27;path=/harry state=directory&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="提权-重要"><a href="#提权-重要" class="headerlink" title="提权^重要^"></a>提权^重要^</h2><ul><li><p>**永久提权:**在配置文件中修改以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">remote_user = 无高级权限的某用户</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[privilege_escalation]</span><br><span class="line"><span class="comment">#become=True</span></span><br><span class="line"><span class="comment">#become_method=sudo</span></span><br><span class="line"><span class="comment">#become_user=root</span></span><br><span class="line"><span class="comment">#become_ask_pass=False</span></span><br></pre></td></tr></table></figure></li><li><p>**临时提权:**在命令行中依次执行</p><p><code>ansible</code> <code>host-pattern(主机组)</code> <code>[-u user(用户身份)]</code> <code>[-b|--become（提权）]</code> <code>[--become-method=sudo(提权方式)]</code> <code>--ask-become-pass(询问输入密码)</code> <code>-m module -a command</code></p></li></ul><h2 id="部分命令模块"><a href="#部分命令模块" class="headerlink" title="部分命令模块"></a>部分命令模块</h2><ul><li><code>ansible host-pattern</code> <code>[–m module]</code> <code>[-a ‘module arguments’]</code></li></ul><h3 id="command-默认"><a href="#command-默认" class="headerlink" title="command^默认^"></a>command^默认^</h3><p>默认模块,有些特殊符号不支持(多条命令分隔<code>;</code>), 有幂等性(不会重复执行相同的操作,也不会因操作相同而报错)</p><h3 id="shell-command补位选手"><a href="#shell-command补位选手" class="headerlink" title="shell^command补位选手^"></a>shell^command补位选手^</h3><p>shell 调用远程主机的shell环境，但是command不指默认是python，不支持一些特殊字符，比如’’<code>;</code>‘’，所以此时可以指定m为shell模块（功能为调用远程主机的shell命令，本质上与普通模块不同）</p><h3 id="script-常用"><a href="#script-常用" class="headerlink" title="script^常用^"></a>script^常用^</h3><p>把本地脚本复制到远程，并在远程主机上执行脚本,<code>-a 本地脚本文件路径</code></p><h3 id="raw-无用"><a href="#raw-无用" class="headerlink" title="raw^无用^"></a>raw^无用^</h3><p>raw shell环境（缺失python环境）—&gt;多用于路由交换机</p><h3 id="debug-常用"><a href="#debug-常用" class="headerlink" title="debug^常用^"></a>debug^常用^</h3><p>用msg和var输出打印信息</p><p><code>msg：</code> <code>&quot;&#123;&#123; var &#125;&#125; is a var&quot;</code></p><p><code>var：</code> <code>var</code>只能加变量，且不需要用<code>&#123;&#123;&#125;&#125;</code></p><h3 id="stat-少用"><a href="#stat-少用" class="headerlink" title="stat^少用^"></a>stat^少用^</h3><p>可以查询文件的信息，比如一些变量是不是定义（存在），记不住可以看看</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">示例</span></span><br><span class="line">ansible all -m stat -a &quot;path=/root&quot;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ansible all -m shell -a &#x27;whoami&#x27;</span></span><br><span class="line"><span class="comment"># ansible all -u student -m shell -a &#x27;whoami&#x27;</span></span><br><span class="line"><span class="comment"># ansible all -u student -k -m shell -a &#x27;whoami&#x27;</span></span><br><span class="line"><span class="comment"># ssh student@classroom</span></span><br><span class="line"><span class="comment"># ansible all -u student -k -m shell -a &#x27;whoami&#x27;</span></span><br><span class="line"><span class="comment"># vim hosts</span></span><br><span class="line"><span class="comment"># ansible all -u student -k -m shell -a &#x27;whoami&#x27;</span></span><br><span class="line"><span class="comment"># ansible all -u student  -m shell -a &#x27;whoami&#x27;</span></span><br><span class="line"><span class="comment"># vim hosts</span></span><br><span class="line"><span class="comment"># ansible all -u student -k -m shell -a &#x27;whoami&#x27;</span></span><br><span class="line"><span class="comment"># ansible all -u student -k -f 10 -c ssh -m shell -a &#x27;whoami&#x27;</span></span><br><span class="line"><span class="comment"># ansible --help</span></span><br><span class="line"><span class="comment"># ansible all -u student -m shell -a &#x27;whoami&#x27;</span></span><br><span class="line"><span class="comment"># ansible all -m shell -a &#x27;whoami&#x27;</span></span><br><span class="line"><span class="comment"># vim hosts</span></span><br><span class="line"><span class="comment"># ansible all -m shell -a &#x27;whoami&#x27;</span></span><br><span class="line"><span class="comment"># vim hosts</span></span><br><span class="line"><span class="comment"># ansible all -m shell -a &#x27;whoami&#x27;</span></span><br><span class="line"><span class="comment"># ansible all -a &#x27;whoami&#x27;</span></span><br><span class="line"><span class="comment"># ansible all -a &#x27;whoami;date&#x27;</span></span><br><span class="line"><span class="comment"># ansible all -a &#x27;date&#x27;</span></span><br><span class="line"><span class="comment"># ansible all -a &#x27;whoami &amp;&amp; date&#x27;</span></span><br><span class="line"><span class="comment"># ansible all -a &#x27;echo test &gt; /root/test.txt&#x27;</span></span><br><span class="line"><span class="comment"># ansible all -m shell -a &#x27;echo test &gt; /root/test.txt&#x27;</span></span><br><span class="line"><span class="comment"># ansible all -m shell -a &#x27;whoami &amp;&amp; date&#x27;</span></span><br><span class="line"><span class="comment"># ansible all -m shell -a &#x27;whoami;date&#x27;</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># vim test.sh</span></span><br><span class="line"><span class="comment"># ansible all -m script -a &#x27;/root/ansible/test.sh&#x27;</span></span><br><span class="line"><span class="comment"># vim test.py</span></span><br></pre></td></tr></table></figure><h1 id="第三章-实施playbook"><a href="#第三章-实施playbook" class="headerlink" title="第三章 实施playbook"></a>第三章 实施playbook</h1><h2 id="yaml语法格式"><a href="#yaml语法格式" class="headerlink" title="yaml语法格式"></a>yaml语法格式</h2><p>三板斧</p><table><thead><tr><th>语法</th><th>描述</th></tr></thead><tbody><tr><td>缩进</td><td>YAML使用固定的缩进风格表示层级结构，每个缩进由两个空格组成，不能使用tabs(除非配置过vim)</td></tr><tr><td>冒号</td><td>以冒号结尾的除外，其他所有冒号后面所有必须有空格</td></tr><tr><td>短横线</td><td>表示列表项，使用一个短横线加一个空格，多个项使用同样的缩进级别作为同一列表</td></tr></tbody></table><h2 id="vim编辑器设置-好用，不配也行"><a href="#vim编辑器设置-好用，不配也行" class="headerlink" title="vim编辑器设置^好用，不配也行^"></a>vim编辑器设置^好用，不配也行^</h2><p><strong>调整tab键缩进</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在家目录下创建vim的隐藏配置文件</span></span><br><span class="line"><span class="comment"># 生产环境你可能没有root权限那么做一个自己的vimrc比较合适</span></span><br><span class="line">vim ~/.vimrc</span><br><span class="line">:<span class="built_in">help</span> usr_05.txt</span><br><span class="line">/autocmd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在help usr_05.txt中找到autocmd FileType</span></span><br><span class="line">autocmd FileType text  setlocal</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调整一个tab为两个空格</span></span><br><span class="line"><span class="comment"># vim ~/.vimrc</span></span><br><span class="line">autocmd FileType yaml setlocal ts=2 sw=2 et</span><br></pre></td></tr></table></figure><h2 id="playbook格式"><a href="#playbook格式" class="headerlink" title="playbook格式"></a>playbook格式</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Play是针对清单中选定的主机运行的一组有序任务(指定不同的主机组执行不同的任务需要不同的play)</span></span><br><span class="line"><span class="comment"># Playbook是一个文本文件，其中包含由一个或多个按特定顺序运行的play组成的列表</span></span><br><span class="line"><span class="comment"># 临时命令可以作为一次性命令对一组目标主机运行一项简单的任务</span></span><br><span class="line"><span class="comment"># Playbook可以通过轻松重复的方式对一组目标主机执行多项复杂的任务</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cat first.yml </span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">This</span> <span class="string">is</span> <span class="string">my</span> <span class="string">first</span> <span class="string">play</span>    <span class="string">---------------------------play</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span> <span class="string">---------------------主机组</span>  <span class="string">|</span></span><br><span class="line"><span class="string">  tasks: ----------------task| |</span></span><br><span class="line"><span class="string">  - name: Install httpd  || |</span></span><br><span class="line"><span class="string">    dnf: --------module   ||  |</span></span><br><span class="line"><span class="string">      name: httpd ----arg|     | | |</span></span><br><span class="line"><span class="string">      state: latest  ||  || |</span></span><br></pre></td></tr></table></figure><ul><li><p>首行缩进两个空格,以两个空格表示一层,具有严格的层级关系</p></li><li><p><code>：</code>后必加空格,紧跟变量必用<code>&quot;&quot;</code></p></li><li><p>短横线表示列表结构，一个短横线加一个空格表示一个新的层级</p></li><li><p>作为模块的参数,前面也缩进两个空格</p></li></ul><h3 id="翻译"><a href="#翻译" class="headerlink" title="翻译"></a>翻译</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 一个清单文件的基本格式：</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">主机（组）</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">name：</span> <span class="string">任务</span> <span class="number">1</span></span><br><span class="line">  <span class="string">模块：</span> </span><br><span class="line">    <span class="string">参数1：</span></span><br><span class="line">  <span class="string">参数2：</span></span><br><span class="line">  <span class="string">...</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">name：</span> <span class="string">任务</span> <span class="number">2</span></span><br><span class="line">  <span class="string">模块：</span> </span><br><span class="line">    <span class="string">参数1：</span></span><br><span class="line">  <span class="string">参数2：</span></span><br><span class="line">  <span class="string">...</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">主机（组）</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">name：</span> <span class="string">任务</span> <span class="number">1</span></span><br><span class="line">  <span class="string">模块：</span> </span><br><span class="line">    <span class="string">参数1：</span></span><br><span class="line">  <span class="string">参数2：</span></span><br></pre></td></tr></table></figure><h2 id="多task、play的playbook文件"><a href="#多task、play的playbook文件" class="headerlink" title="多task、play的playbook文件"></a>多task、play的playbook文件</h2><ul><li>执行是有先后顺序的，从上到下，依次执行。</li><li>若有报错，则中断执行，后面的任务不会继续（除非用了block，rescue，always）</li></ul><h3 id="多task"><a href="#多task" class="headerlink" title="多task"></a>多task</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">    <span class="attr">yum:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">httpd</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">latest或者present都可以，卸载为absent</span></span><br><span class="line">  <span class="comment"># yum -y install httpd</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task2</span></span><br><span class="line">    <span class="attr">service:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">httpd</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">started</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">yes</span></span><br><span class="line">       </span><br><span class="line">  <span class="comment"># systemctl enable --now httpd</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task3</span></span><br><span class="line">    <span class="attr">copy:</span></span><br><span class="line">      <span class="attr">content:</span> <span class="string">&quot;hello world\n&quot;</span></span><br><span class="line">      <span class="attr">dest:</span> <span class="string">/var/www/html/index.html</span></span><br><span class="line">  <span class="comment"># echo &#x27;hello world&#x27; &gt; /var/www/html/index.html</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task4</span></span><br><span class="line">    <span class="attr">firewalld:</span></span><br><span class="line">      <span class="attr">service:</span> <span class="string">http</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">enabled</span></span><br><span class="line">      <span class="attr">permanent:</span> <span class="literal">yes</span></span><br><span class="line">      <span class="attr">immediate:</span> <span class="literal">yes</span></span><br><span class="line">  <span class="comment"># firewall-cmd --permanent --add-service=http</span></span><br><span class="line">  <span class="comment"># firewall-cmd --reload</span></span><br></pre></td></tr></table></figure><h3 id="多play"><a href="#多play" class="headerlink" title="多play"></a>多play</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">This</span> <span class="string">is</span> <span class="string">my</span> <span class="string">first</span> <span class="string">play</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">httpd</span></span><br><span class="line">    <span class="attr">dnf:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">httpd</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">latest</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Exec</span> <span class="string">shell</span> </span><br><span class="line">    <span class="attr">shell:</span> <span class="string">whoami</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">add</span> <span class="string">user</span></span><br><span class="line">    <span class="attr">user:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">zhangsan</span></span><br><span class="line">      <span class="attr">comment:</span> <span class="string">administrator</span></span><br><span class="line">      <span class="attr">uid:</span> <span class="number">2000</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">/bin/bash</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line">      </span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">This</span> <span class="string">is</span> <span class="number">2</span> <span class="string">play</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">db</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span></span><br><span class="line">    <span class="attr">dnf:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">lrzsz</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">latest</span></span><br></pre></td></tr></table></figure><h2 id="详细程度、语法检查、空运行-没用"><a href="#详细程度、语法检查、空运行-没用" class="headerlink" title="详细程度、语法检查、空运行^没用^"></a>详细程度、语法检查、空运行^没用^</h2><h3 id="加强信息输出级别，查看更详细的信息"><a href="#加强信息输出级别，查看更详细的信息" class="headerlink" title="加强信息输出级别，查看更详细的信息"></a>加强信息输出级别，查看更详细的信息</h3><table><thead><tr><th align="center">选项</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">-v</td><td align="center">显示任务结果</td></tr><tr><td align="center">-vv</td><td align="center">任务结果和任务配置都会显示</td></tr><tr><td align="center">-vvv</td><td align="center">包含关于与受管主机连接的信息</td></tr><tr><td align="center">-vvvv</td><td align="center">增加了连接插件相关的额外详细程度选项，  包括受管主机上用于执行脚本的用户，以及所执行的脚本</td></tr></tbody></table><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ansible-playbook -v first.yml</span></span><br><span class="line"><span class="comment"># ansible-playbook -vv first.yml</span></span><br><span class="line"><span class="comment"># ansible-playbook -vvv first.yml</span></span><br><span class="line"><span class="comment"># ansible-playbook -vvvv first.yml</span></span><br></pre></td></tr></table></figure><h3 id="语法检查，空运行"><a href="#语法检查，空运行" class="headerlink" title="语法检查，空运行"></a>语法检查，空运行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible-playbook --syntax-check first.yml</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim first.yml</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible-playbook --syntax-check first.yml</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim first.yml</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ansible-playbook -C first.yml</span></span><br></pre></td></tr></table></figure><h2 id="Ansible-doc手册-重点且常用"><a href="#Ansible-doc手册-重点且常用" class="headerlink" title="Ansible-doc手册^重点且常用^"></a>Ansible-doc手册^重点且常用^</h2><p><code>Ansible-doc –l</code>列出所有的有文档的模块<br><code>Ansible-doc command</code>  单模块的帮助<br><code>Ansible-doc command -s</code> 生成示例输出</p><h2 id="一个特殊的模块（大宝贝）"><a href="#一个特殊的模块（大宝贝）" class="headerlink" title="一个特殊的模块（大宝贝）"></a>一个特殊的模块（大宝贝）</h2><p><code>stat</code></p><p><code>ansible-doc stat</code>，你会感谢我的</p><h3 id="status（模块版本）-了解即可"><a href="#status（模块版本）-了解即可" class="headerlink" title="status（模块版本）^了解即可^"></a>status（模块版本）^了解即可^</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">stableinterface:稳定模块</span><br><span class="line">preview:预览阶段，可能不稳定</span><br><span class="line">deprecated：弃用的旧版本模块</span><br><span class="line">supported_by: 上游ansible社区中维护者</span><br></pre></td></tr></table></figure><h2 id="用yml实现servera-nfs共享，serverb-autofs自动挂载实验"><a href="#用yml实现servera-nfs共享，serverb-autofs自动挂载实验" class="headerlink" title="用yml实现servera nfs共享，serverb autofs自动挂载实验"></a>用yml实现servera nfs共享，serverb autofs自动挂载实验</h2><blockquote><p>自己写的，不保证完全正确</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Servera</span> <span class="string">for</span> <span class="string">NFS</span> <span class="string">server</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">servera.lab.example.com</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">nfs-utils</span></span><br><span class="line">      <span class="attr">yum:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nfs-utils</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">latest</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Enable</span> <span class="string">service</span></span><br><span class="line">      <span class="attr">service:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nfs-server.service</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">started</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">yes</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Make</span> <span class="string">share</span> <span class="string">dir</span></span><br><span class="line">      <span class="attr">file :</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/nfs_share</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">directory</span></span><br><span class="line">        <span class="attr">mode:</span> <span class="string">&#x27;0755&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Modify</span> <span class="string">share.exports</span></span><br><span class="line">      <span class="attr">copy:</span></span><br><span class="line">        <span class="attr">content:</span> <span class="string">&quot;/nfs_share  *(rw,no_root_squash)\n&quot;</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">/etc/exports.d/share.exports</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Reload</span> <span class="string">service</span></span><br><span class="line">      <span class="attr">service:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nfs-server.service</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">reloaded</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Local</span> <span class="string">test</span></span><br><span class="line">      <span class="attr">command:</span> <span class="string">showmount</span> <span class="string">-e</span> <span class="string">localhost</span></span><br><span class="line">      <span class="attr">register:</span> <span class="string">result</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Test</span> <span class="string">result</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; result.stdout &#125;&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Firewall</span> <span class="string">add</span> <span class="string">service</span></span><br><span class="line">      <span class="attr">firewalld:</span></span><br><span class="line">        <span class="attr">service:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; item &#125;&#125;</span>&quot;</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">enabled</span></span><br><span class="line">        <span class="attr">permanent:</span> <span class="literal">yes</span></span><br><span class="line">        <span class="attr">immediate:</span> <span class="literal">yes</span></span><br><span class="line">      <span class="attr">loop:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">rpc-bind</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">nfs</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">mountd</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Serverb</span> <span class="string">for</span> <span class="string">NFS</span> <span class="string">client</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">serverb.lab.example.com</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Remote</span> <span class="string">test</span></span><br><span class="line">      <span class="attr">command:</span> <span class="string">showmount</span> <span class="string">-e</span> <span class="string">servera.lab.example.com</span></span><br><span class="line">      <span class="attr">register:</span> <span class="string">result2</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Test</span> <span class="string">result</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; result2.stdout &#125;&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">autofs</span></span><br><span class="line">      <span class="attr">yum:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">autofs</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">latest</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Enable</span> <span class="string">service</span></span><br><span class="line">      <span class="attr">service:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">autofs.service</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">started</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">yes</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Overwrite</span> <span class="string">config</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">echo</span> <span class="string">&quot;/share /etc/auto.share&quot;</span> <span class="string">&gt;&gt;</span> <span class="string">/etc/auto.master</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Modify</span> <span class="string">auto.share</span></span><br><span class="line">      <span class="attr">copy:</span></span><br><span class="line">        <span class="attr">content:</span> <span class="string">&quot;nfs_share       -fstype=nfs,rw         servera.lab.example.com:/nfs_share&quot;</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">/etc/auto.share</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Restart</span> <span class="string">service</span></span><br><span class="line">      <span class="attr">service:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">autofs.service</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">restarted</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Test</span> <span class="string">NfS</span> <span class="string">Client</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">servera.lab.example.com</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Touch</span> <span class="string">test</span> <span class="string">file</span> <span class="string">and</span> <span class="string">input</span> <span class="string">some</span> <span class="string">words</span></span><br><span class="line">     <span class="comment"># file: </span></span><br><span class="line">     <span class="comment">#   path: /nfs_share/testFile</span></span><br><span class="line">     <span class="comment">#   state: touch</span></span><br><span class="line">      <span class="attr">copy:</span></span><br><span class="line">        <span class="attr">content:</span> <span class="string">&quot;You have already succeeded to autofs&quot;</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">/nfs_share/testFile</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Test</span> <span class="string">NFS</span> <span class="string">CLient</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">serverb.lab.example.com</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">View</span> <span class="string">the</span> <span class="string">file</span></span><br><span class="line">      <span class="attr">command:</span> <span class="string">cat</span> <span class="string">/share/nfs_share/testFile</span></span><br><span class="line">      <span class="attr">register:</span> <span class="string">result</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Show</span> <span class="string">result</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; result.stdout &#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure></blockquote><h1 id="第四章-管理变量和事实-重点"><a href="#第四章-管理变量和事实-重点" class="headerlink" title="第四章 管理变量和事实^重点^"></a>第四章 管理变量和事实^重点^</h1><h2 id="命名规则"><a href="#命名规则" class="headerlink" title="命名规则"></a>命名规则</h2><table><thead><tr><th>有效的变量名</th><th>无效vim</th></tr></thead><tbody><tr><td><code>foo</code></td><td><code>*foo</code>，<a href="https://docs.python.org/3/reference/lexical_analysis.html#keywords">Python关键字，</a>例如<code>async</code>和<code>lambda</code></td></tr><tr><td><code>foo_env</code></td><td><a href="https://docs.ansible.com/ansible/latest/reference_appendices/playbooks_keywords.html#playbook-keywords">剧本关键字，</a>例如<code>environment</code></td></tr><tr><td><code>foo_port</code></td><td><code>foo-port</code>，<code>foo port</code>，<code>foo.port</code>（中横线，空格，”.”，都不被允许）</td></tr><tr><td><code>foo5</code>,<code>_foo</code></td><td><code>5foo</code>， <code>12</code></td></tr></tbody></table><ul><li>熟练地使用变量可以少些几行并提高复用能力，极大地提高效率</li></ul><h2 id="变量基本使用"><a href="#变量基本使用" class="headerlink" title="变量基本使用"></a>变量基本使用</h2><ul><li><code>register</code>变量，定义过后可以在整个yaml后半部分全局使用，不同于play变量</li><li>变量使用方法：定义在yml中定义并直接使用，<code>&#123;&#123; var &#125;&#125;</code>，在<code>：</code>开头的时候直接使用需要加引号以防止被识别成别的语法</li><li>在vars.yml中定义的变量优先级高于一个yml中自定义的同名变量</li></ul><blockquote><p>摘自笔记的示例</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat yaml1.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">remote_create_dir:</span> <span class="string">/myshare</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; remote_create_dir &#125;&#125;</span>&quot;</span></span><br><span class="line">      </span><br><span class="line"></span><br><span class="line"><span class="comment"># cat yaml2.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">remote_create_dir:</span> <span class="string">/myshare1</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">    <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; remote_create_dir &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task2</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">mkdir</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; remote_create_dir &#125;&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cat yaml3.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">remote_create_dir:</span> <span class="string">/myshare</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">    <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; remote_create_dir &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task2</span></span><br><span class="line">    <span class="attr">file:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; remote_create_dir &#125;&#125;</span>&quot;</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">directory</span></span><br><span class="line">      <span class="attr">mode:</span> <span class="string">&#x27;0777&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task3</span></span><br><span class="line">    <span class="attr">copy:</span></span><br><span class="line">      <span class="attr">src:</span> <span class="string">/etc/hosts</span></span><br><span class="line">      <span class="attr">dest:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; remote_create_dir &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task4</span></span><br><span class="line">    <span class="attr">shell:</span> <span class="string">ls</span> <span class="string">-l</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; remote_create_dir &#125;&#125;</span>&quot;</span></span><br><span class="line">    <span class="attr">register:</span> <span class="string">result</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span></span><br><span class="line">    <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; result &#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat yaml3.yml </span></span><br><span class="line">---</span><br><span class="line">- name: play1</span><br><span class="line">  hosts: webservers</span><br><span class="line">  vars:</span><br><span class="line">    remote_create_dir: /myshare</span><br><span class="line">  tasks:</span><br><span class="line">  - name: task1</span><br><span class="line">    debug:</span><br><span class="line">      msg: <span class="string">&quot;&#123;&#123; remote_create_dir &#125;&#125;&quot;</span></span><br><span class="line">  - name: task2</span><br><span class="line">    file:</span><br><span class="line">      path: <span class="string">&quot;&#123;&#123; remote_create_dir &#125;&#125;&quot;</span></span><br><span class="line">      state: directory</span><br><span class="line">      mode: <span class="string">&#x27;0777&#x27;</span></span><br><span class="line">  - name: task3</span><br><span class="line">    copy:</span><br><span class="line">      src: /etc/hosts</span><br><span class="line">      dest: <span class="string">&quot;&#123;&#123; remote_create_dir &#125;&#125;&quot;</span></span><br><span class="line">  - name: task4</span><br><span class="line">    shell: <span class="built_in">ls</span> -l <span class="string">&quot;&#123;&#123; remote_create_dir &#125;&#125;&quot;</span></span><br><span class="line">    register: result</span><br><span class="line">  - name:</span><br><span class="line">    debug:</span><br><span class="line">      msg: <span class="string">&quot;&#123;&#123; result &#125;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cat yaml4.yml  </span></span><br><span class="line">---</span><br><span class="line">- name: play1</span><br><span class="line">  hosts: webservers</span><br><span class="line">  vars_files:</span><br><span class="line">    - tom.yml</span><br><span class="line">  tasks:</span><br><span class="line">  - name: task1</span><br><span class="line">    debug:</span><br><span class="line">      msg:</span><br><span class="line">      - <span class="string">&quot;&#123;&#123; user &#125;&#125;&quot;</span></span><br><span class="line">      - <span class="string">&quot;&#123;&#123; home &#125;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cat yaml5.yml</span></span><br><span class="line">---</span><br><span class="line">- name: play1</span><br><span class="line">  hosts: webservers</span><br><span class="line">  tasks:</span><br><span class="line">  - name: task1</span><br><span class="line">    shell: <span class="built_in">echo</span> hi easthome</span><br><span class="line">    register: result</span><br><span class="line">  - name: task2</span><br><span class="line">    set_fact: var1=<span class="string">&quot;&#123;&#123; result.stdout &#125;&#125;&quot;</span></span><br><span class="line">  - name: task3</span><br><span class="line">    set_fact: var2=<span class="string">&quot;Your name is easthome&quot;</span></span><br><span class="line">  - name: task4</span><br><span class="line">    debug:</span><br><span class="line">      msg:</span><br><span class="line">      - <span class="string">&quot;&#123;&#123; result &#125;&#125;&quot;</span></span><br><span class="line">      - <span class="string">&quot;&#123;&#123; var1 &#125;&#125;&quot;</span></span><br><span class="line">      - <span class="string">&quot;&#123;&#123; var2 &#125;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cat yaml6.yml</span></span><br><span class="line">---</span><br><span class="line">- name: play1</span><br><span class="line">  hosts: webservers</span><br><span class="line">  vars_files:</span><br><span class="line">    - var2.yml</span><br><span class="line">  vars:</span><br><span class="line">    var2: Easthome</span><br><span class="line">  tasks:</span><br><span class="line"><span class="comment">#  - name: task1</span></span><br><span class="line"><span class="comment">#    shell: echo hi easthome</span></span><br><span class="line"><span class="comment">#    register: result</span></span><br><span class="line"><span class="comment">#  - name: task2</span></span><br><span class="line"><span class="comment">#    set_fact: var1=&quot;&#123;&#123; result.stdout &#125;&#125;&quot;</span></span><br><span class="line"><span class="comment">#  - name: task3</span></span><br><span class="line"><span class="comment">#    set_fact: var2=&quot;Your name is easthome&quot;</span></span><br><span class="line">  - name: task4</span><br><span class="line">    debug:</span><br><span class="line">      msg:</span><br><span class="line"><span class="comment">#      - &quot;&#123;&#123; result &#125;&#125;&quot;</span></span><br><span class="line"><span class="comment">#      - &quot;&#123;&#123; var1 &#125;&#125;&quot;</span></span><br><span class="line">      - <span class="string">&quot;&#123;&#123; var2 &#125;&#125;&quot;</span></span><br></pre></td></tr></table></figure><h2 id="从文件定义变量（此处不涉及主机主机组文件）"><a href="#从文件定义变量（此处不涉及主机主机组文件）" class="headerlink" title="从文件定义变量（此处不涉及主机主机组文件）"></a>从文件定义变量（此处不涉及主机主机组文件）</h2><ul><li><p>先写一个定义文件&#x2F;ansible&#x2F;vars.yml（一般都是在工作区的目录下，名字任取）</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">varname1:</span> <span class="string">varcontent1</span></span><br><span class="line"><span class="attr">varname2:</span> <span class="string">varcontent2</span></span><br></pre></td></tr></table></figure></li><li><p>在需要使用的playbook中载入</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">name1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">a,b,c</span></span><br><span class="line">  <span class="attr">vars_files:</span><span class="comment"># ————————&gt; 引入变量文件</span></span><br><span class="line">  <span class="string">vars.yml</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">name1</span></span><br><span class="line">  <span class="string">...</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>通过实验证明，同名变量的优先级顺序为：</p><p>命令行定义变量（adhoc） &gt; 文件中定义变量 &gt; play中定义变量</p></blockquote><h2 id="主机和主机组变量"><a href="#主机和主机组变量" class="headerlink" title="主机和主机组变量"></a>主机和主机组变量</h2><ul><li><p>主机变量直接跟在inventory文件中每个主机后面即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 比较好的示例</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> inventory</span><br><span class="line">...</span><br><span class="line">[zzz]</span><br><span class="line">classroom ansible_password=Asimov<span class="comment"># -----&gt; 赋予一个内置变量</span></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在classroom上执行命令时，（前提是ssh登录需要密码），实现了免密</span></span><br></pre></td></tr></table></figure></li><li><p>主机组变量需要在下面额外添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[组:vars]</span><br><span class="line">var1 = variable</span><br></pre></td></tr></table></figure><p>对所有主机组定义</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[all:vars]</span><br><span class="line">var2 = variable</span><br></pre></td></tr></table></figure></li><li><p>所属嵌套组同上操作</p><blockquote><p>经过验证，不能在嵌套组中的主机组后面直接定义变量，必须使用如上语法</p></blockquote></li></ul><blockquote><p>通过实验证明，清单文件中同名变量优先级的顺序为：</p><p>主机变量  &gt; 主机组变量 &gt; 嵌套组变量 &gt; all变量（越底层越优先）</p></blockquote><blockquote><p>摘自笔记的示例</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@workstation ansible]<span class="comment"># cat hosts </span></span><br><span class="line"><span class="comment"># This is the default ansible &#x27;hosts&#x27; file.</span></span><br><span class="line">[webservers]</span><br><span class="line">servera name=webservers_servera</span><br><span class="line">serverb name=webservers_serverb</span><br><span class="line">[dbservers]</span><br><span class="line">serverc name=dbservers_serverc</span><br><span class="line">serverd name=dbservers_serverd</span><br><span class="line">[servers:children]</span><br><span class="line">webservers</span><br><span class="line">dbservers</span><br><span class="line">[dbservers:vars]</span><br><span class="line">age=18</span><br><span class="line">[webservers:vars]</span><br><span class="line">address=china</span><br><span class="line">[all:vars]</span><br><span class="line">course=rh294</span><br><span class="line">   61  ansible all -m debug -a <span class="string">&#x27;msg=&#123;&#123; name &#125;&#125;&#x27;</span></span><br><span class="line">   62  vim hosts </span><br><span class="line">   63  ansible all -m debug -a <span class="string">&#x27;msg=&#123;&#123; name,age,address &#125;&#125;&#x27;</span></span><br><span class="line">   64  vim hosts </span><br><span class="line">   65  ansible all -m debug -a <span class="string">&#x27;msg=&#123;&#123; name,age,address,course &#125;&#125;&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="目录填充"><a href="#目录填充" class="headerlink" title="目录填充"></a>目录填充</h3><ul><li><p>对于主机和主机组比较多的情况，需要单独定义目录</p></li><li><p>目录名是固定的，不允许任意定义，分别为：</p><p>主机变量：<code>host_vars</code>，主机组变量<code>group_vars</code></p><p>在主机变量：<code>host_vars</code>下定义不同主机的同名文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim host_vars/servera</span><br><span class="line">vim host_vars/serverb</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在文件中直接定义变量即可</span></span><br><span class="line">var1： variable</span><br></pre></td></tr></table></figure><p>在主机组变量：<code>group_vars</code>下定义不同主机组的同名文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim group_vars/web# ————&gt; 普通主机组</span><br><span class="line">vim group_vars/servers# ————&gt; 嵌套组</span><br><span class="line">vim group_vars/all# ————&gt; 所有</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在文件中直接定义变量即可</span></span><br><span class="line">var1： variable</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>由于内容太多，此处未实验各个优先级顺序，据说官网定义有20多行</p><p>事实变量 &gt; 注册变量 &gt; playbook &gt; 清单（级别越低优先级越高，比如all&lt;嵌套组&lt;主机组&lt;主机）</p></blockquote><blockquote><p>通过实验发现，主机目录下文件内的变量名会变色显示，主机组的不会，不知缘由</p><p>变量没定义执行playbook的时候，有时显示红色undefined，有时显示绿色，也不知缘由</p></blockquote><blockquote><p>摘自原笔记</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir host_vars</span></span><br><span class="line"><span class="comment"># mkdir group_vars</span></span><br><span class="line"><span class="comment"># vim host_vars/servera</span></span><br><span class="line"><span class="comment"># cp host_vars/servera host_vars/serverb</span></span><br><span class="line"><span class="comment"># vim host_vars/serverb</span></span><br><span class="line"><span class="comment"># ansible webservers -m debug -a &#x27;msg=&#123;&#123; message &#125;&#125;&#x27;</span></span><br><span class="line"><span class="comment"># cp host_vars/servera group_vars/dbservers</span></span><br><span class="line"><span class="comment"># vim group_vars/dbservers</span></span><br><span class="line"><span class="comment"># ansible webservers -m debug -a &#x27;msg=&#123;&#123; message &#125;&#125;&#x27;</span></span><br><span class="line"><span class="comment"># ansible dbservers -m debug -a &#x27;msg=&#123;&#123; message &#125;&#125;&#x27;</span></span><br><span class="line"><span class="comment"># ansible all -m debug -a &#x27;msg=&#123;&#123; message &#125;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">[root@workstation ansible]<span class="comment"># cat host_vars/servera host_vars/serverb group_vars/dbservers </span></span><br><span class="line">message: <span class="string">&#x27;servera.lab.example.com&#x27;</span></span><br><span class="line">message: <span class="string">&#x27;serverb.lab.example.com&#x27;</span></span><br><span class="line">message: <span class="string">&#x27;serverc.lab.example.com &amp;&amp; serverd.lab.example.com&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="从命令行传递（覆盖）变量"><a href="#从命令行传递（覆盖）变量" class="headerlink" title="从命令行传递（覆盖）变量"></a>从命令行传递（覆盖）变量</h2><ul><li>achoc时，加上<code>-e 变量名=变量</code></li><li>命令行中定义变量，优先级大于其他定义文件</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ansible-playbook yaml5.yml -e var1=hello -e var2=world</span></span><br><span class="line"><span class="comment"># ansible-playbook yaml5.yml -e var1=&quot;hello world&quot; -e var2=&quot;hi easthome&quot;</span></span><br><span class="line"><span class="comment"># ansible-playbook yaml5.yml -e var1=&#x27;&quot;hello world&quot;&#x27; -e var2=&#x27;&quot;hi easthome&quot;&#x27;</span></span><br><span class="line"><span class="comment"># ansible all -vvvv -m debug -a &#x27;msg=&#123;&#123; name,age,address,course,message &#125;&#125;&#x27; -e name=EASTHOME -e age=30 -e message=&#x27;&quot;hello world&quot;&#x27; -e course=rh134</span></span><br></pre></td></tr></table></figure><h2 id="数组变量"><a href="#数组变量" class="headerlink" title="数组变量"></a>数组变量</h2><p>一个变量含有多个值</p><h3 id="列表变量"><a href="#列表变量" class="headerlink" title="列表变量"></a>列表变量</h3><ul><li><p>以列表的形式定义变量</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">vars:</span></span><br><span class="line">  <span class="string">变量1:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">值1</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">值2</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">值2</span></span><br></pre></td></tr></table></figure></li><li><p>引用时，用<code>变量1[位]</code>来选择数组中的不同值，第一位是0，不能给位加<code>&#39;&#39;</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">    <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; 变量1[0] &#125;&#125;</span>&quot;</span><span class="comment"># ————&gt; 值1</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; 变量1[1] &#125;&#125;</span>&quot;</span><span class="comment"># ————&gt; 值2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; 变量1[2] &#125;&#125;</span>&quot;</span><span class="comment"># ————&gt; 值3</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>摘自笔记示例</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">root@workstation</span> <span class="string">ansible</span>]<span class="comment"># cat address_vars.yml </span></span><br><span class="line"><span class="attr">nanfang:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">guangzhou</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">xianggang</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">taiwan</span></span><br><span class="line"><span class="attr">beifang:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">beijing</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">tianjin</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">shijiazhuang</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">root@workstation</span> <span class="string">ansible</span>]<span class="comment"># cat yaml8.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">vars_files:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">address_vars.yml</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">address:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">beijing</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">shanghai</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tianjin</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">hebei</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">    <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; address &#125;&#125;</span>&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; address[0] &#125;&#125;</span>&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; address[1] &#125;&#125;</span>&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; address[2] &#125;&#125;</span>&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; address[3] &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task2</span></span><br><span class="line">    <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; nanfang[2] &#125;&#125;</span>&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; beifang[0] &#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><h3 id="字典变量"><a href="#字典变量" class="headerlink" title="字典变量"></a>字典变量</h3><ul><li><p>以字典的形式定义变量</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">vars:</span></span><br><span class="line">    <span class="string">变量1:</span></span><br><span class="line">      <span class="attr">key1:</span> <span class="string">value1</span></span><br><span class="line">      <span class="attr">key2:</span> <span class="string">value2</span></span><br><span class="line">      <span class="attr">key3:</span> <span class="string">value3</span></span><br></pre></td></tr></table></figure></li><li><p>引用时，可以使用<code>变量1.key1</code>这种格式，但是不推荐（因为有<code>.</code>），推荐使用的方法为<code>变量1[&#39;key1&#39;]</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">    <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; 变量1[&#x27;key1&#x27;] &#125;&#125;</span>&quot;</span><span class="comment"># ————&gt; value1</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; 变量1[&#x27;key2&#x27;] &#125;&#125;</span>&quot;</span><span class="comment"># ————&gt; value2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; 变量1[&#x27;key3&#x27;] &#125;&#125;</span>&quot;</span><span class="comment"># ————&gt; value3</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>摘自笔记</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">root@workstation</span> <span class="string">ansible</span>]<span class="comment"># cat yaml9.yml </span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">vars_files:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">address_vars.yml</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">zhangsan:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">zhangsan</span></span><br><span class="line">      <span class="attr">age:</span> <span class="number">18</span></span><br><span class="line">      <span class="attr">id:</span> <span class="string">one</span></span><br><span class="line">    <span class="attr">lisi:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">lisi</span></span><br><span class="line">      <span class="attr">age:</span> <span class="number">19</span></span><br><span class="line">      <span class="attr">id:</span> <span class="string">two</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">    <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;Zhangsan ID is: <span class="template-variable">&#123;&#123; zhangsan.id &#125;&#125;</span>&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;Lisi age is: <span class="template-variable">&#123;&#123; lisi.age &#125;&#125;</span>&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;Zhangsan ID is: <span class="template-variable">&#123;&#123; zhangsan[&quot;id&quot;] &#125;&#125;</span>&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;Lisi age is: <span class="template-variable">&#123;&#123; lisi[&#x27;age&#x27;] &#125;&#125;</span>&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="注册变量registry"><a href="#注册变量registry" class="headerlink" title="注册变量registry"></a>注册变量registry</h2><ul><li><p>与模块（任务）同级，会把当前任务的返回值保存到变量中（一般模块没有返回值），可以在不同任务中注册多个变量（一个任务注册一个）</p></li><li><p>与play变量区分，register变量是全局定义的，之不过只有在定义后才能使用，play变量只有在当前play才可以使用</p></li><li><p>一般用法</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">...</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">module:</span> </span><br><span class="line">    <span class="attr">arg:</span> <span class="string">argument</span></span><br><span class="line">  <span class="attr">register:</span> <span class="string">随便</span> <span class="comment"># ——————&gt; 注意与模块同级</span></span><br><span class="line">  </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task</span> <span class="number">2</span>  <span class="comment"># ----&gt; 该任务会把上一个任务的返回结果打印出来</span></span><br><span class="line">    <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">var:</span> <span class="string">随便</span></span><br><span class="line">      <span class="string">或</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">输出&#123;&#123;</span> <span class="string">随便</span> <span class="string">&#125;&#125;</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">输出&#123;&#123;</span> <span class="string">随便[&#x27;stdout&#x27;]</span> <span class="string">&#125;&#125;</span><span class="comment"># ————&gt; 返回结果中只显示标准输出</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">输出&#123;&#123;</span> <span class="string">随便.rc</span> <span class="string">&#125;&#125;</span> <span class="comment"># ————&gt; 显示命令是否执行成功的返回值，0为成功，其他失败，常用于判断</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>摘自笔记</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">root@workstation</span> <span class="string">ansible</span>]<span class="comment"># cat yaml10.yml </span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install</span> <span class="string">the</span> <span class="string">latest</span> <span class="string">version</span> <span class="string">of</span> <span class="string">Apache</span></span><br><span class="line">    <span class="attr">yum:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">httpd</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line">    <span class="attr">register:</span> <span class="string">install_result</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task2</span></span><br><span class="line">    <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; install_result &#125;&#125;</span>&quot;</span></span><br><span class="line"><span class="comment"># cat yaml11.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="attr">argv:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">cat</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/passwd</span></span><br><span class="line">    <span class="attr">register:</span> <span class="string">com_result</span></span><br><span class="line"><span class="comment">#  - name: task2</span></span><br><span class="line"><span class="comment">#    de<span class="doctag">bug:</span></span></span><br><span class="line"><span class="comment">#      var: com_result</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task2</span></span><br><span class="line">    <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; com_result[&#x27;rc&#x27;] &#125;&#125;</span>&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; com_result[&#x27;stdout&#x27;] &#125;&#125;</span>&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; com_result[&#x27;failed&#x27;] &#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><h2 id="事实变量setup-重要"><a href="#事实变量setup-重要" class="headerlink" title="事实变量setup^重要^"></a>事实变量setup^重要^</h2><ul><li>事实变量是先存在（自己检测到的），后定义，再使用的</li></ul><h3 id="关闭事实变量收集的过程"><a href="#关闭事实变量收集的过程" class="headerlink" title="关闭事实变量收集的过程"></a>关闭事实变量收集的过程</h3><ul><li><p>基于playbook配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">aaa</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="string">...</span></span><br></pre></td></tr></table></figure></li><li><p>全局配置，修改ansible.cfg配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># smart - gather by default, but don&#x27;t regather if already gathered</span></span><br><span class="line"><span class="comment"># implicit - gather by default, turn off with gather_facts: False</span></span><br><span class="line"><span class="comment"># explicit - do not gather by default, must say gather_facts: True</span></span><br><span class="line"><span class="comment">#gathering = implicit  _____</span></span><br><span class="line">  <span class="comment">#     \  改成explicit</span></span><br><span class="line">gathering = explicit  <span class="comment"># &lt;___/</span></span><br></pre></td></tr></table></figure></li><li><p>默认play第一个任务为收集事实变量，关闭执行前事实变量的收集过程可以提高速度</p></li></ul><h3 id="收集事实变量并调用"><a href="#收集事实变量并调用" class="headerlink" title="收集事实变量并调用"></a>收集事实变量并调用</h3><h4 id="收集"><a href="#收集" class="headerlink" title="收集"></a>收集</h4><ul><li><p>通过将事实变量全部保存下来，并用vim编辑的方法查找所需要的值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ansible all -m setup &gt; hw.txt</span></span><br><span class="line"><span class="comment"># vim hw.txt</span></span><br></pre></td></tr></table></figure></li><li><p>通过过滤的方法直接找到相关信息（推荐）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ansible all -m setup -a <span class="string">&#x27;filter=*device*&#x27;</span></span><br><span class="line">ansible all -m setup -a <span class="string">&#x27;filter=*bios*&#x27;</span></span><br><span class="line">ansible all -m setup -a <span class="string">&#x27;filter=*memory*&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h4><ul><li><p>只有先收集了事实变量才可以被调用</p></li><li><p>先查后写，十分方便，建议躲开窗口，边查边写</p></li><li><p>与字典变量的使用方法一样，顶级key <code>ansible_facts</code>可以省略，有多级key的时候挨着写</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> </span><br><span class="line">  <span class="attr">debug:</span></span><br><span class="line">    <span class="attr">msg:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; ansible_device[&#x27;vda&#x27;][&#x27;size&#x27;] &#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="生成硬件报告-default过滤器（示例）"><a href="#生成硬件报告-default过滤器（示例）" class="headerlink" title="生成硬件报告|default过滤器（示例）"></a>生成硬件报告|default过滤器（示例）</h3><ul><li><p>为多台主机收集通过事实变量收集硬件信息，用<code>copy</code>模块将收集到的信息存储到对应文件，换行保留符<code>|</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">root@workstation</span> <span class="string">ansible</span>]<span class="comment"># cat yaml12.yml </span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">true</span><span class="comment"># ————&gt; 不指定也会默认收集事实变量</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">    <span class="attr">copy:</span></span><br><span class="line">      <span class="attr">content:</span> <span class="string">|</span><span class="comment"># ————&gt; 换行保留符，copy变量信息</span></span><br><span class="line">        <span class="string">HOSTNAME=&#123;&#123;</span> <span class="string">ansible_hostname</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="string">MEMORYSI=&#123;&#123;</span> <span class="string">ansible_memtotal_mb</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="string">BIOSVERS=&#123;&#123;</span> <span class="string">ansible_bios_version</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="string">DISKVDAS=&#123;&#123;</span> <span class="string">ansible_devices[&#x27;vda&#x27;][&#x27;size&#x27;]</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="string">DISKVDBS=&#123;&#123;</span> <span class="string">ansible_devices[&#x27;vdb&#x27;][&#x27;size&#x27;]</span> <span class="string">&#125;&#125;</span></span><br><span class="line">      <span class="attr">dest:</span> <span class="string">/root/hwreport.txt</span><span class="comment"># ————&gt; 到各主机的/root/hwreport.txt</span></span><br></pre></td></tr></table></figure></li><li><p>其中有一些主机的变量不存在，通过default过滤器，在读取不到变量时设置默认值，可以避免操作中断</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">root@workstation</span> <span class="string">ansible</span>]<span class="comment"># cat yaml12.yml </span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">    <span class="attr">copy:</span></span><br><span class="line">      <span class="attr">content:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        HOSTNAME=&#123;&#123; ansible_hostname &#125;&#125;</span></span><br><span class="line"><span class="string">        MEMORYSI=&#123;&#123; ansible_memtotal_mb &#125;&#125;通过|default(&#x27;NULL&#x27;)</span></span><br><span class="line"><span class="string">        BIOSVERS=&#123;&#123; ansible_bios_version &#125;&#125;使取不到该变量时也不停止</span></span><br><span class="line"><span class="string">        DISKVDAS=&#123;&#123; ansible_devices[&#x27;vda&#x27;][&#x27;size&#x27;] &#125;&#125;     /</span></span><br><span class="line"><span class="string">        DISKVDBS=&#123;&#123; ansible_devices[&#x27;vdb&#x27;][&#x27;size&#x27;] &#125;&#125;  /</span></span><br><span class="line"><span class="string">        DISKVDCS=&#123;&#123; ansible_devices[&#x27;vdc&#x27;][&#x27;size&#x27;] | default(&#x27;NULL&#x27;) &#125;&#125; # ___/</span></span><br><span class="line"><span class="string"></span>      <span class="attr">dest:</span> <span class="string">/root/hwreport.txt</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="自定义事实变量"><a href="#自定义事实变量" class="headerlink" title="自定义事实变量"></a>自定义事实变量</h3><ul><li><p>一般自定义的事实变量在<code>ansible_facts.ansible_local</code>下</p></li><li><p>在被管理节点上创建目录（不要求主机上安装了ansible），并在目录下创建自定义文件,支持两种格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /etc/ansible/facts.d<span class="comment"># ————&gt; 格式一定要对</span></span><br><span class="line"><span class="comment"># 在目录下</span></span><br><span class="line">vim 随便.fact  <span class="comment"># ————&gt; 后缀一定要对</span></span><br></pre></td></tr></table></figure><ul><li><p>格式1（<code>ini</code>）</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[一级key]</span></span><br><span class="line">二级<span class="attr">key1</span>=value1</span><br><span class="line">二级<span class="attr">key2</span>=value2</span><br></pre></td></tr></table></figure></li><li><p>格式2 （<code>json</code>）</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;随便&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;一级key&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;二级key1&quot;</span><span class="punctuation">:</span> <span class="string">&quot;value1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;二级key2&quot;</span><span class="punctuation">:</span> <span class="string">&quot;value2&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>用setup模块收集事实变量</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible -m setup -a <span class="string">&#x27;filter=*一级key*&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;ansible_local&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;随便&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;一级key&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;二级key1&quot;</span><span class="punctuation">:</span> <span class="string">&quot;value1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;二级key2&quot;</span><span class="punctuation">:</span> <span class="string">&quot;value2&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="魔法变量-重要"><a href="#魔法变量-重要" class="headerlink" title="魔法变量^重要^"></a>魔法变量^重要^</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 一些变量并非事实或通过setup模块设置，但也由ansible自动设置，这些魔法变量也可以用于获取特定受管主机的相关信息</span></span><br></pre></td></tr></table></figure><ul><li>也可被称为内置变量，也是不需要定义就存在，（但是会不同设置而变化）</li></ul><h3 id="常用的四个"><a href="#常用的四个" class="headerlink" title="常用的四个"></a>常用的四个</h3><p><code>hostvars</code>收集了事实变量后会显示更多，比较特殊</p><p><code>group_names</code>^常用^当前所在主机组的名称（包括嵌套组）</p><p><code>groups</code> 列出清单中所有的组和主机（与在哪个主机上执行无关）</p><p><code>inventory_hostname</code>^常用^当前的主机名称</p><blockquote><p><code>hostvars</code>中，顶级key是主机名字（与清单对应），次级key中，如果用到事实变量，<code>ansible_facts</code>不能省略</p></blockquote><h4 id="命令行示例"><a href="#命令行示例" class="headerlink" title="命令行示例"></a>命令行示例</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ansible webservers -m debug -a var=inventory_hostname</span></span><br><span class="line"><span class="comment"># ansible webservers -m debug -a var=groups</span></span><br><span class="line"><span class="comment"># ansible webservers -m debug -a var=group_names</span></span><br><span class="line"><span class="comment"># ansible dbservers -m debug -a var=group_names</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ansible dbservers -m debug -a &#x27;msg=&quot;&#123;&#123; hostvars &#125;&#125;&quot;&#x27;</span></span><br><span class="line"><span class="comment"># ansible dbservers -m debug -a &#x27;msg=&quot;&#123;&#123; hostvars[&quot;servera&quot;] &#125;&#125;&quot;&#x27;</span></span><br><span class="line"><span class="comment"># ansible dbservers -m debug -a &#x27;msg=&quot;&#123;&#123; hostvars[&quot;servera&quot;][&quot;inventory_hostname&quot;] &#125;&#125;&quot;&#x27;</span></span><br><span class="line"><span class="comment"># 输出全域名</span></span><br><span class="line"><span class="comment"># ansible dbservers -m debug -a &#x27;msg=&quot;&#123;&#123; hostvars[&quot;servera&quot;][&quot;ansible_facts&quot;][&quot;fqdn&quot;] &#125;&#125;&quot;&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="playbook示例"><a href="#playbook示例" class="headerlink" title="playbook示例"></a>playbook示例</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat yaml13.yml </span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">    <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;<span class="template-variable">&#123;&#123; hostvars[&quot;servera&quot;][&quot;inventory_hostname&quot;] &#125;&#125;</span>&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;<span class="template-variable">&#123;&#123; hostvars[&quot;servera&quot;][&quot;ansible_facts&quot;][&quot;default_ipv4&quot;][&quot;address&quot;] &#125;&#125;</span>&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;<span class="template-variable">&#123;&#123; hostvars[&quot;servera&quot;][&quot;ansible_facts&quot;][&quot;fqdn&quot;] &#125;&#125;</span>&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;<span class="template-variable">&#123;&#123; hostvars[&quot;servera&quot;][&quot;ansible_facts&quot;][&quot;hostname&quot;] &#125;&#125;</span>&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="管理机密vault-轻点"><a href="#管理机密vault-轻点" class="headerlink" title="管理机密vault^轻点^"></a>管理机密vault^轻点^</h2><ul><li><p>加密的结果只是不能直接修改playbook而已，实际上并不安全</p></li><li><p>加密</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible-vault encrypt yml文件</span><br><span class="line">输入密码</span><br></pre></td></tr></table></figure></li><li><p>在创建文件时加密</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible-vault create yml文件</span><br><span class="line">输入密码</span><br></pre></td></tr></table></figure></li><li><p>解密</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible-vault decrypt yml文件 </span><br><span class="line">输入密码</span><br></pre></td></tr></table></figure></li><li><p>查看加密文件（用别的方式看到的是乱码）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible-vault view yml文件</span><br><span class="line">输入密码</span><br></pre></td></tr></table></figure></li><li><p>编辑加密文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible-vault edit yml文件</span><br><span class="line">输入密码</span><br></pre></td></tr></table></figure></li><li><p>改密</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible-vault rekey yml文件</span><br><span class="line">输入密码</span><br></pre></td></tr></table></figure></li><li><p>命令行指定密码文件，此时进行如上操作时不再需要输入密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible-vault view vault.yml --vault-password-file=passwd.txt</span><br><span class="line">ansible-vault view vault.yml --vault-id=passwd.txt<span class="comment"># 功能更强</span></span><br></pre></td></tr></table></figure></li><li><p>配置文件指定密码文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@workstation ansible]<span class="comment"># vim vault ansible.cfg </span></span><br><span class="line">/vault</span><br><span class="line"><span class="comment"># specifying --vault-password-file on the command line.</span></span><br><span class="line">vault_password_file = /root/ansible/passwd.txt</span><br></pre></td></tr></table></figure><blockquote><p>除去上述操作不需要密码外，此时如果rekey修改密码，会优先使用配置文件中定义的密码，不会弹出修改密码的提示</p></blockquote><blockquote><p>此时如果执意要通过命令行修改密码，除去修改配置文件外，还可以使用<code>--ask-vault-pass</code>参数</p></blockquote><blockquote><p>但是就算通过上述方式改密成功，也会因为缓存存在而导致一段时间内即使配置文件内密码与实际不符，也依旧可以进行免密操作</p></blockquote><blockquote><p>强制vim加密后的文件,任意修改都会导致文件错误,无法访问也无法解密</p></blockquote></li></ul><blockquote><p>示例</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ansible-vault -h</span></span><br><span class="line"><span class="comment"># cat yaml11.yml</span></span><br><span class="line"><span class="comment"># ansible-vault encrypt yaml11.yml</span></span><br><span class="line"><span class="comment"># cat yaml11.yml</span></span><br><span class="line"><span class="comment"># ansible-vault decrypt yaml11.yml</span></span><br><span class="line"><span class="comment"># cat yaml11.yml</span></span><br><span class="line"><span class="comment"># ansible-vault create vault.yml</span></span><br><span class="line"><span class="comment"># cat vault.yml</span></span><br><span class="line"><span class="comment"># ansible-vault view vault.yml</span></span><br><span class="line"><span class="comment"># ansible-vault edit vault.yml</span></span><br><span class="line"><span class="comment"># ansible-vault rekey vault.yml</span></span><br><span class="line"><span class="comment"># ansible-vault view vault.yml</span></span><br><span class="line"><span class="comment"># ansible-vault view vault.yml</span></span><br><span class="line"><span class="comment"># echo passwd &gt; passwd.txt</span></span><br><span class="line"><span class="comment"># ansible-vault rekey vault.yml</span></span><br><span class="line"><span class="comment"># ansible-vault vault.yml</span></span><br><span class="line"><span class="comment"># ansible-vault view vault.yml</span></span><br><span class="line"><span class="comment"># ansible-vault view vault.yml --vault-password-file=passwd.txt</span></span><br><span class="line"><span class="comment"># ansible-vault view vault.yml --vault-id=passwd.txt</span></span><br><span class="line"><span class="comment"># ansible-vault view vault.yml</span></span><br><span class="line"><span class="comment"># cat vault.yml</span></span><br><span class="line"><span class="comment"># vim ansible.cfg</span></span><br><span class="line"><span class="comment"># ansible-vault view vault.yml</span></span><br><span class="line"><span class="comment"># cat vault.yml</span></span><br><span class="line"><span class="comment"># ansible-playbook vault.yml</span></span><br><span class="line"><span class="comment"># vim vault.yml</span></span><br><span class="line">[root@workstation ansible]<span class="comment"># grep vault ansible.cfg </span></span><br><span class="line"><span class="comment"># specifying --vault-password-file on the command line.</span></span><br><span class="line">vault_password_file = /root/ansible/passwd.txt</span><br></pre></td></tr></table></figure><h1 id="第五章-实施任务控制"><a href="#第五章-实施任务控制" class="headerlink" title="第五章 实施任务控制"></a>第五章 实施任务控制</h1><h2 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h2><h3 id="循环列表"><a href="#循环列表" class="headerlink" title="循环列表"></a>循环列表</h3><ol><li><p>先定义一个列表变量</p></li><li><p>使用时，与任务同级地定义一个<code>loop:&quot;&#123;&#123; var111 &#125;&#125;&quot;</code>或者<code>loop:（换行）- 列表1 - 列表2</code>放到下面,调用时用<code>&#123;&#123; item &#125;&#125;</code>关键字，老版本中<code>loop</code>用<code>with_item</code>代替</p></li></ol><p>示例:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 标准写法</span></span><br><span class="line">[root@workstation ansible]<span class="comment"># cat yaml14.yml </span></span><br><span class="line">---</span><br><span class="line">- name: play1</span><br><span class="line">  hosts: webservers</span><br><span class="line">  vars:</span><br><span class="line">    packages:</span><br><span class="line">      - httpd</span><br><span class="line">      - lrzsz</span><br><span class="line">      - yum-utils</span><br><span class="line">      </span><br><span class="line">  gather_facts: <span class="literal">true</span></span><br><span class="line">  tasks:</span><br><span class="line">  - name: install pa</span><br><span class="line">    dnf:</span><br><span class="line">      name: <span class="string">&quot;&#123;&#123; item &#125;&#125;&quot;</span></span><br><span class="line">      state: latest</span><br><span class="line">    loop: <span class="string">&quot;&#123;&#123; packages &#125;&#125;&quot;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 也可以这么写</span></span><br><span class="line">  - name: install packages</span><br><span class="line">    dnf:</span><br><span class="line">      name: <span class="string">&quot;&#123;&#123; item &#125;&#125;&quot;</span></span><br><span class="line">      state: latest</span><br><span class="line">    loop:</span><br><span class="line">      - httpd</span><br><span class="line">      - lrzsz</span><br><span class="line">      - yum-utils</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不标准写法但是能用，这个写法只在装包的时候实验过可以用，其他的比如useradd的时候不可以，变量放到上面也不行</span></span><br><span class="line">  - name: install packages</span><br><span class="line">    dnf:</span><br><span class="line">      name: <span class="string">&quot;&#123;&#123; package &#125;&#125;&quot;</span></span><br><span class="line">      state: latest</span><br><span class="line">    package:</span><br><span class="line">      - httpd</span><br><span class="line">      - lrzsz</span><br><span class="line">      - yum-utils</span><br></pre></td></tr></table></figure><h3 id="循环字典"><a href="#循环字典" class="headerlink" title="循环字典"></a>循环字典</h3><ol><li>定义一个字典变量，一个变量有多个key</li><li>使用时，与任务同级地定义一个<code>loop:&quot;&#123;&#123; var111 &#125;&#125;&quot;</code>放到下面,调用时用<code>&#123;&#123; item.key1 &#125;&#125;</code>来匹配模块的不同参数</li></ol><blockquote><p>与列表不同的地方是变量自带多个参数，循环时可以直接循环参数</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">root@workstation</span> <span class="string">ansible</span>]<span class="comment"># cat yaml15.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">add</span> <span class="string">user</span> <span class="string">on</span> <span class="string">all</span> </span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">users:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">zhangsan</span></span><br><span class="line">      <span class="attr">comment:</span> <span class="string">webadmin</span></span><br><span class="line">      <span class="attr">uid:</span> <span class="number">3000</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">lisi</span></span><br><span class="line">      <span class="attr">comment:</span> <span class="string">dbadmin</span></span><br><span class="line">      <span class="attr">uid:</span> <span class="number">4000</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">wangwu</span></span><br><span class="line">      <span class="attr">comment:</span> <span class="string">administrator</span></span><br><span class="line">      <span class="attr">uid:</span> <span class="number">5000</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">add</span> <span class="string">user</span></span><br><span class="line">    <span class="attr">user:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; item.name &#125;&#125;</span>&quot;</span>     </span><br><span class="line">      <span class="attr">comment:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; item.comment &#125;&#125;</span>&quot;</span></span><br><span class="line">      <span class="attr">uid:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; item.uid &#125;&#125;</span>&quot;</span></span><br><span class="line">    <span class="attr">loop:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; users &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="number">308</span>  <span class="string">vim</span> <span class="string">yaml15.yml</span></span><br><span class="line">  <span class="number">309</span>  <span class="string">ansible-playbook</span> <span class="string">yaml15.yml</span></span><br><span class="line">  <span class="number">310</span>  <span class="string">vim</span> <span class="string">yaml15.yml</span></span><br><span class="line">  <span class="number">311</span>  <span class="string">ansible-playbook</span> <span class="string">yaml15.yml</span></span><br><span class="line">  <span class="number">312</span>  <span class="string">vim</span> <span class="string">yaml15.yml</span></span><br><span class="line">  <span class="number">314</span>  <span class="string">ansible</span> <span class="string">all</span> <span class="string">-m</span> <span class="string">shell</span> <span class="string">-a</span> <span class="string">&#x27;id zhangsan;id lisi;id wangwu&#x27;</span></span><br><span class="line">  <span class="number">315</span>  <span class="string">ansible</span> <span class="string">all</span> <span class="string">-m</span> <span class="string">shell</span> <span class="string">-a</span> <span class="string">&#x27;tail -n 3 /etc/passwd&#x27;</span></span><br><span class="line">  <span class="number">316</span>  <span class="string">cat</span> <span class="string">yaml15.yml</span></span><br></pre></td></tr></table></figure><h2 id="判断-需要记"><a href="#判断-需要记" class="headerlink" title="判断^需要记^"></a>判断^需要记^</h2><ul><li><p><code>when</code>里面的变量不用加<code>&#123;&#123; &#125;&#125;</code>，直接调用即可</p></li><li><p>可以结合and，or来使用</p></li><li><p>与play同级，则全play判断，与task同级，则全task判断，与block同级，则全block判断，放到最底下</p></li></ul><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p><code>==</code><code>&lt;</code> <code>&gt;</code><code>&lt;=</code><code>&gt;=</code><code>!=</code></p><blockquote><p>值为数字时直接使用即可，值为字符串的时候，需要给字符串加<code>&quot;&quot;</code></p></blockquote><ul><li>存在<code>var1 is defined</code></li><li>不存在<code>var1 is not defined</code></li></ul><h3 id="布尔值"><a href="#布尔值" class="headerlink" title="布尔值"></a>布尔值</h3><ul><li><p>1,true,True,yes</p><p><code>Memory_available</code></p></li><li><p>0,false,False,no</p><p><code>Not memory_available</code></p></li></ul><h3 id="成员"><a href="#成员" class="headerlink" title="成员"></a>成员</h3><ul><li><p>第一个变量的值存在，作为第二个变量的列表中的值</p><p><code>var1 in var2</code></p></li><li><p>示例</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 再hosts定义主机组为all时，通过条件判断只执行web组的任务</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">name</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task</span></span><br><span class="line">  <span class="attr">module:</span></span><br><span class="line">    <span class="attr">arg1:</span> <span class="string">suibian</span> </span><br><span class="line">    <span class="attr">arg2:</span> <span class="string">suibian</span></span><br><span class="line"><span class="attr">when:</span> <span class="string">&#x27;&quot;web&quot; in group_names&#x27;</span></span><br><span class="line"><span class="string">或</span></span><br><span class="line"><span class="attr">when:</span> <span class="string">&quot;inventory_hostname in groups[&#x27;web&#x27;]&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>两者效果相同</p><p><code>when: &#39;&quot;web&quot; in group_names&#39;</code>是指当web组在所有组中的时候</p><p><code>when: &quot;inventory_hostname in groups[&#39;web&#39;]&quot;</code>是指主机在web组中的时候</p></blockquote></li></ul><blockquote><p>示例</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@workstation ansible]<span class="comment"># cat yaml16.yml</span></span><br><span class="line">---</span><br><span class="line">- name: play1</span><br><span class="line">  hosts: all</span><br><span class="line">  tasks:</span><br><span class="line">  - name: install the latest version of Apache and MariaDB</span><br><span class="line">    dnf:</span><br><span class="line">      name:</span><br><span class="line">        - httpd</span><br><span class="line">        - mariadb-server</span><br><span class="line">      state: latest</span><br><span class="line">    when: <span class="string">&#x27;&quot;webservers&quot; in group_names&#x27;</span></span><br><span class="line">  - name: upgrade all packages</span><br><span class="line">    dnf:</span><br><span class="line">      name: <span class="string">&quot;*&quot;</span></span><br><span class="line">      state: latest</span><br><span class="line">    when: <span class="string">&#x27;&quot;dbservers&quot; in group_names&#x27;</span></span><br><span class="line">  - name: install the <span class="string">&#x27;Development tools&#x27;</span> package group</span><br><span class="line">    dnf:</span><br><span class="line">      name: <span class="string">&#x27;@Development tools&#x27;</span></span><br><span class="line">      state: present</span><br><span class="line">    when: <span class="string">&#x27;&quot;webservers&quot; in group_names&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="处理任务失败"><a href="#处理任务失败" class="headerlink" title="处理任务失败"></a>处理任务失败</h2><p><code>ignore_errors: true</code>忽略错误继续执行，不会中断</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">root@workstation</span> <span class="string">ansible</span>]<span class="comment"># cat yaml17.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">    <span class="attr">debug:</span>  </span><br><span class="line">      <span class="attr">msg:</span> <span class="string">hello</span> <span class="string">world</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task2</span></span><br><span class="line">    <span class="attr">shell:</span> <span class="string">mkdir</span> <span class="string">/shell</span></span><br><span class="line">    <span class="attr">ignore_errors:</span> <span class="literal">true</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task3</span></span><br><span class="line">    <span class="attr">shell:</span> <span class="string">ls</span> <span class="string">-ld</span> <span class="string">/shell</span></span><br><span class="line">    <span class="attr">register:</span> <span class="string">result</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task4</span></span><br><span class="line">    <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">var:</span> <span class="string">result</span></span><br></pre></td></tr></table></figure><h2 id="block-resuce-always-重点"><a href="#block-resuce-always-重点" class="headerlink" title="block resuce always^重点^"></a>block resuce always^重点^</h2><p><code>block</code>定义要运行的主要任务</p><p><code>rescue</code>与block同级，定义要在block子句中定义的任务失败时跳转运行的任务</p><p><code>always</code>定义始终都在独立运行的任务，不论block和rescue子句中定义的任务是成功还是失败</p><blockquote><p>三者的顺序很重要，block中任务出错会跳转到rescue，always不管前面任务是否中断都执行</p><p><code>但是三者子句内的任务如果出错，则会当场中断</code></p></blockquote><blockquote><p>示例</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">root@workstation</span> <span class="string">ansible</span>]<span class="comment"># cat yaml20.yml </span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">example</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">block</span> <span class="string">tasks</span></span><br><span class="line">    <span class="attr">block:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mkdir</span> <span class="string">file</span>     </span><br><span class="line">      <span class="attr">shell:</span> <span class="string">mkdir</span> <span class="string">/mydir</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">block2</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">block</span> <span class="string">task2</span> </span><br><span class="line">    <span class="attr">rescue:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">debug</span> <span class="string">message</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">The</span> <span class="string">file</span> <span class="string">/mydir</span> <span class="string">is</span> <span class="string">exist......</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mkdir</span> <span class="string">/myshell</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">mkdir</span> <span class="string">/myshell</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">rescue</span> <span class="string">task3</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">resuce</span> <span class="string">task3</span></span><br><span class="line">    <span class="attr">always:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">always</span> <span class="string">tasks</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">I</span> <span class="string">am</span> <span class="string">always</span> <span class="string">tasks......</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">always</span> <span class="string">task2</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">mkdir</span> <span class="string">/test</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">always</span> <span class="string">task3</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">always</span> <span class="string">task3</span></span><br></pre></td></tr></table></figure><h2 id="创建LV-考点"><a href="#创建LV-考点" class="headerlink" title="创建LV^考点^"></a>创建LV^考点^</h2><ul><li><p>创建卷组时会自动先创建物理卷</p></li><li><p><code>lvg</code>创建卷组，<code>lvof</code>创建逻辑卷，<code>ansible-doc</code> 查询详细用法</p></li><li><p>&#96;&#96;&#96;<br>parted分区–&gt;lvg–&gt;lvol–&gt;mkfs–&gt;mount</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">```yaml</span><br><span class="line">---</span><br><span class="line">- name: 分区并创建卷组</span><br><span class="line">  hosts: web,db</span><br><span class="line">  vars:</span><br><span class="line">    disk_name: /dev/vdb</span><br><span class="line">  tasks:</span><br><span class="line">  - name: my block tasks</span><br><span class="line">    block:</span><br><span class="line">    - name: Task 1 Create a new primary partition</span><br><span class="line">      parted:</span><br><span class="line">        device: &quot;&#123;&#123; disk_name &#125;&#125;&quot;</span><br><span class="line">        number: 1</span><br><span class="line">        part_start: 100MiB</span><br><span class="line">        part_end: 600MiB</span><br><span class="line">        state: present</span><br><span class="line">    - name: Task 2 Create a new primary partition</span><br><span class="line">      parted:</span><br><span class="line">        device: &quot;&#123;&#123; disk_name &#125;&#125;&quot;</span><br><span class="line">        number: 2</span><br><span class="line">        part_start: 700MiB</span><br><span class="line">        part_end: 1200MiB</span><br><span class="line">        state: present</span><br><span class="line">    - name: Task 3 Create a new primary partition</span><br><span class="line">      parted:</span><br><span class="line">        device: &quot;&#123;&#123; disk_name &#125;&#125;&quot;</span><br><span class="line">        number: 3</span><br><span class="line">        part_start: 1300MiB</span><br><span class="line">        part_end: 1800MiB</span><br><span class="line">        state: present</span><br><span class="line">    - name: Create a volume group on top of /dev/sda1 with </span><br><span class="line">      lvg:</span><br><span class="line">        vg: vg.services</span><br><span class="line">        pvs: /dev/vdb1,/dev/vdb2,/dev/vdb3 </span><br><span class="line">        pesize: 32</span><br><span class="line">    when: ansible_devices.vdb is defined</span><br><span class="line">    </span><br><span class="line">- name: 创建逻辑卷</span><br><span class="line">  hosts: web,db</span><br><span class="line">  vars:</span><br><span class="line">    disk_name: /dev/vdb</span><br><span class="line">  tasks:</span><br><span class="line">  - name: task 1</span><br><span class="line">    block:</span><br><span class="line">    - name:</span><br><span class="line">      lvol:</span><br><span class="line">        vg: vg.services</span><br><span class="line">        lv: lv.services</span><br><span class="line">        size: 2000</span><br><span class="line">      when: ansible_lvm[&#x27;vgs&#x27;][&#x27;vg.services&#x27;] is defined</span><br><span class="line">    rescue:</span><br><span class="line">    - name: rescue task 1</span><br><span class="line">      debug:</span><br><span class="line">        msg: &#x27;vg.services free &lt; 2000MB&#x27;</span><br><span class="line">    - name:</span><br><span class="line">      lvol:</span><br><span class="line">        vg: vg.services</span><br><span class="line">        lv: lv.services</span><br><span class="line">        size: 1000</span><br><span class="line">      when: ansible_lvm[&#x27;lvs&#x27;][&#x27;lv.services&#x27;] is not defined</span><br><span class="line">    - name: Create a ext2 filesystem on /dev/sdb1</span><br><span class="line">      filesystem:</span><br><span class="line">        fstype: xfs</span><br><span class="line">        dev: /dev/vg.services/lv.services</span><br><span class="line">      #when: ansible_lvm[&#x27;vgs&#x27;][&#x27;vg.services&#x27;] is defined</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    - name: Change file ownership, group and permissions</span><br><span class="line">      file:</span><br><span class="line">        path: /lv</span><br><span class="line">        owner: root</span><br><span class="line">        group: root</span><br><span class="line">        mode: &#x27;0644&#x27;</span><br><span class="line">        state: directory</span><br><span class="line">    </span><br><span class="line">    - name: Mount DVD read-only</span><br><span class="line">      mount:</span><br><span class="line">        path: /lv</span><br><span class="line">        src: /dev/vg.services/lv.services</span><br><span class="line">        opts: ro,noauto</span><br><span class="line">        fstype: xfs</span><br><span class="line">        state: unmounted</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h1 id="第六章-playbook管理主机"><a href="#第六章-playbook管理主机" class="headerlink" title="第六章 playbook管理主机"></a>第六章 playbook管理主机</h1><h2 id="文件管理模块-重要"><a href="#文件管理模块-重要" class="headerlink" title="文件管理模块^重要^"></a>文件管理模块^重要^</h2><table><thead><tr><th>模块名</th><th>说明</th></tr></thead><tbody><tr><td>blockinfile</td><td>插入、更新 、删除，自定义标记先包围的多行文本块</td></tr><tr><td>file</td><td>设置权限、所有者、SElinux上下文及常规文件、符号连接、硬链接等</td></tr><tr><td>copy</td><td>远程到远程copy，类似file，可以设置文件属性、SElinux上下文 控制-&gt;受管节点；remote_src修改为no可以实现控制节点到受管节点的复制</td></tr><tr><td>fetch</td><td>和copy类似，从host 取回到控制节点，相反工作方式，从远端拷贝到控制节点</td></tr><tr><td>lineinfile</td><td>改文件某一行时使用</td></tr><tr><td>stat</td><td>检测文件状态，类似linux 中stat命令</td></tr><tr><td>synchronize</td><td>围绕rsync一个打包程序。增量复制</td></tr><tr><td>template</td><td>重点！！！</td></tr></tbody></table><h3 id="file（同时设置setype安全上下文）"><a href="#file（同时设置setype安全上下文）" class="headerlink" title="file（同时设置setype安全上下文）"></a>file（同时设置setype安全上下文）</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Create</span> <span class="string">an</span> <span class="string">insecure</span> <span class="string">file</span></span><br><span class="line">  <span class="attr">file:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/work</span></span><br><span class="line">    <span class="attr">owner:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">group:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">mode:</span> <span class="string">&#x27;1777&#x27;</span></span><br><span class="line">    <span class="attr">state:</span> <span class="string">directory</span></span><br><span class="line">    <span class="attr">setype:</span> <span class="string">httpd_sys_content_t</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">shell:</span> <span class="string">ls</span> <span class="string">-ldZ</span> <span class="string">/work</span></span><br><span class="line">  <span class="attr">register:</span> <span class="string">result</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task</span> <span class="number">3</span> </span><br><span class="line">  <span class="attr">debug:</span></span><br><span class="line">    <span class="attr">var:</span> <span class="string">result</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Change</span> <span class="string">file</span> <span class="string">ownership,</span> <span class="string">group</span> <span class="string">and</span> <span class="string">permissions</span></span><br><span class="line">  <span class="attr">file:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/etc/foo.conf</span></span><br><span class="line">    <span class="attr">owner:</span> <span class="string">foo</span></span><br><span class="line">    <span class="attr">group:</span> <span class="string">foo</span></span><br><span class="line">    <span class="attr">mode:</span> <span class="string">&#x27;0644&#x27;</span></span><br><span class="line">    <span class="attr">state:</span> <span class="string">touch</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Touch</span> <span class="string">a</span> <span class="string">file,</span> <span class="string">using</span> <span class="string">symbolic</span> <span class="string">modes</span> <span class="string">to</span> <span class="string">set</span> <span class="string">the</span> <span class="string">permissions</span> <span class="string">(equivalent</span> <span class="string">to</span> <span class="number">0644</span><span class="string">)</span></span><br><span class="line">  <span class="attr">file:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/tmp/&#123;&#123;</span> <span class="string">item</span> <span class="string">&#125;&#125;</span></span><br><span class="line">    <span class="attr">state:</span> <span class="string">touch</span></span><br><span class="line">  <span class="attr">loop:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">x</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">z</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Create</span> <span class="string">two</span> <span class="string">hard</span> <span class="string">links</span>     <span class="comment"># ————&gt; 其实应该是软连接</span></span><br><span class="line">  <span class="attr">file:</span></span><br><span class="line">    <span class="attr">src:</span> <span class="string">&#x27;/tmp/<span class="template-variable">&#123;&#123; item.src &#125;&#125;</span>&#x27;</span></span><br><span class="line">    <span class="attr">dest:</span> <span class="string">&#x27;<span class="template-variable">&#123;&#123; item.dest &#125;&#125;</span>&#x27;</span></span><br><span class="line">    <span class="attr">state:</span> <span class="string">link</span><span class="comment"># ————&gt; 硬链接的state： hard</span></span><br><span class="line">  <span class="attr">with_items:</span></span><br><span class="line">    <span class="bullet">-</span> &#123; <span class="attr">src:</span> <span class="string">x</span>, <span class="attr">dest:</span> <span class="string">y</span> &#125;<span class="comment"># ————&gt; 多变量循环的写法</span></span><br><span class="line">    <span class="bullet">-</span> &#123; <span class="attr">src:</span> <span class="string">z</span>, <span class="attr">dest:</span> <span class="string">k</span> &#125;</span><br></pre></td></tr></table></figure><h3 id="copy（也可以设置安全上下文）"><a href="#copy（也可以设置安全上下文）" class="headerlink" title="copy（也可以设置安全上下文）"></a>copy（也可以设置安全上下文）</h3><ul><li><p>有file的一部分功能，设置文件的属性</p><p>从<code>src</code>copy到<code>dest</code>，默认为主机内复制</p></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">root@workstation</span> <span class="string">ansible</span>]<span class="comment"># cat copy.yml </span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">example</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Copy</span> <span class="string">file</span> <span class="string">with</span> <span class="string">owner</span> <span class="string">and</span> <span class="string">permissions</span></span><br><span class="line">    <span class="attr">copy:</span></span><br><span class="line">      <span class="attr">src:</span> <span class="string">/root/ansible/hosts</span></span><br><span class="line">      <span class="attr">dest:</span> <span class="string">/etc/foo.conf</span></span><br><span class="line">      <span class="attr">owner:</span> <span class="string">foo</span></span><br><span class="line">      <span class="attr">group:</span> <span class="string">foo</span></span><br><span class="line">      <span class="attr">mode:</span> <span class="string">&#x27;0644&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>同时可以设置文件的内容，在文件不存在时，创建^像vim^</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">vim</span> <span class="string">a</span> <span class="string">file</span></span><br><span class="line">    <span class="attr">copy:</span></span><br><span class="line">      <span class="attr">content:</span> <span class="string">&#x27;shit&#x27;</span></span><br><span class="line">      <span class="attr">dest:</span> <span class="string">/root/name</span></span><br><span class="line">      <span class="attr">setype:</span> <span class="string">httpd_sys_content_t</span></span><br><span class="line">      <span class="attr">mode:</span> <span class="string">&#x27;0777&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>从本地复制到远程</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">my</span> <span class="string">play</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Copy</span> <span class="string">file</span> <span class="string">with</span> <span class="string">owner</span> <span class="string">and</span> <span class="string">permissions</span></span><br><span class="line">    <span class="attr">copy:</span></span><br><span class="line">      <span class="attr">src:</span> <span class="string">/root/ansible/zidingyi</span></span><br><span class="line">      <span class="attr">dest:</span> <span class="string">/etc/foo9.conf</span></span><br><span class="line">      <span class="attr">owner:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">group:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">mode:</span> <span class="string">&#x27;0644&#x27;</span></span><br><span class="line">      <span class="attr">setype:</span> <span class="string">httpd_sys_content_t</span></span><br><span class="line">      <span class="attr">remote_src:</span> <span class="literal">no</span><span class="comment"># ————&gt; 此处与示例文件的描述不符合，no的时候为本地到远程复制</span></span><br></pre></td></tr></table></figure><h3 id="fetch"><a href="#fetch" class="headerlink" title="fetch"></a>fetch</h3><ul><li>把远端的文件取回到本地，执行完成后会在本地生成一个fetch目录，目录下的子目录为不同主机下fetch文件来源的目录</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">my</span> <span class="string">play</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Store</span> <span class="string">file</span> <span class="string">into</span> <span class="string">/tmp/fetched/host.example.com/tmp/somefile</span></span><br><span class="line">    <span class="attr">fetch:</span></span><br><span class="line">      <span class="attr">src:</span> <span class="string">/etc/hostname</span></span><br><span class="line">      <span class="attr">dest:</span> <span class="string">/tmp/fetched/test</span></span><br><span class="line">      <span class="attr">flat:</span> <span class="literal">yes</span><span class="comment"># ——————&gt; 可以实现覆盖</span></span><br></pre></td></tr></table></figure><h3 id="lineinfine"><a href="#lineinfine" class="headerlink" title="lineinfine"></a>lineinfine</h3><ul><li>常用于修改文件中<strong>某一行</strong>的内容</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">root@workstation</span> <span class="string">ansible</span>]<span class="comment"># cat lineinfile.yml </span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">example</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Ensure</span> <span class="string">SELinux</span> <span class="string">is</span> <span class="string">set</span> <span class="string">to</span> <span class="string">enforcing</span> <span class="string">mode</span></span><br><span class="line">    <span class="attr">lineinfile:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/etc/selinux/config</span></span><br><span class="line">      <span class="attr">regexp:</span> <span class="string">&#x27;^SELINUX=&#x27;</span><span class="comment"># ————&gt; 正则匹配</span></span><br><span class="line">      <span class="attr">line:</span> <span class="string">SELINUX=disabled</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Make</span> <span class="string">sure</span> <span class="string">group</span> <span class="string">wheel</span> <span class="string">is</span> <span class="string">not</span> <span class="string">in</span> <span class="string">the</span> <span class="string">sudoers</span> <span class="string">configuration</span></span><br><span class="line">    <span class="attr">lineinfile:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/etc/sudoers</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">absent</span><span class="comment"># ————&gt; 删除某一行</span></span><br><span class="line">      <span class="attr">regexp:</span> <span class="string">&#x27;^%wheel&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="blockinfile"><a href="#blockinfile" class="headerlink" title="blockinfile"></a>blockinfile</h3><ul><li>常用于插入、更新 、删除，自定义文件中标记线包围的<strong>多行文本块</strong>（block）</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">root@workstation</span> <span class="string">ansible</span>]<span class="comment"># cat block.yml </span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">example</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">dbservers</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">task1</span></span><br><span class="line">    <span class="attr">copy:</span></span><br><span class="line">      <span class="attr">src:</span> <span class="string">/etc/hosts</span></span><br><span class="line">      <span class="attr">dest:</span> <span class="string">/hosts</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Add</span> <span class="string">mappings</span> <span class="string">to</span> <span class="string">/etc/hosts</span></span><br><span class="line">    <span class="attr">blockinfile:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/hosts</span></span><br><span class="line">      <span class="attr">block:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        &#123;&#123; item.ip &#125;&#125; &#123;&#123; item.hostname &#125;&#125; &#123;&#123; item.name &#125;&#125;</span></span><br><span class="line"><span class="string"></span>      <span class="attr">marker:</span> <span class="string">&quot;# &#123;mark&#125; ANSIBLE MANAGED BLOCK <span class="template-variable">&#123;&#123; item.hostname &#125;&#125;</span>&quot;</span></span><br><span class="line">    <span class="attr">with_items:</span></span><br><span class="line">    <span class="bullet">-</span> &#123; <span class="attr">name:</span> <span class="string">host1</span>, <span class="attr">hostname:</span> <span class="string">host1.example.com</span>, <span class="attr">ip:</span> <span class="number">10.10</span><span class="number">.1</span><span class="number">.10</span> &#125;</span><br><span class="line">    <span class="bullet">-</span> &#123; <span class="attr">name:</span> <span class="string">host2</span>, <span class="attr">hostname:</span> <span class="string">host2.example.com</span>, <span class="attr">ip:</span> <span class="number">10.10</span><span class="number">.1</span><span class="number">.11</span> &#125;</span><br><span class="line">    <span class="bullet">-</span> &#123; <span class="attr">name:</span> <span class="string">host3</span>, <span class="attr">hostname:</span> <span class="string">host3.example.com</span>, <span class="attr">ip:</span> <span class="number">10.10</span><span class="number">.1</span><span class="number">.12</span> &#125;</span><br></pre></td></tr></table></figure><h3 id="stat，fail"><a href="#stat，fail" class="headerlink" title="stat，fail"></a>stat，fail</h3><ul><li><code>stat</code>：查看文件状态</li><li><code>fail</code>：手动发送失败信息，且后续任务不执行</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">root@workstation</span> <span class="string">ansible</span>]<span class="comment"># cat stat.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">my</span> <span class="string">play</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">stat:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/etc/foo.conf</span></span><br><span class="line">    <span class="attr">register:</span> <span class="string">st</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; st &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">fail:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;Whoops! file ownership has changed&quot;</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">st.stat.pw_name</span> <span class="string">==</span> <span class="string">&#x27;root&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">hello</span></span><br></pre></td></tr></table></figure><h3 id="模板template（一个包含变量的普通文本文件-j2）-重要"><a href="#模板template（一个包含变量的普通文本文件-j2）-重要" class="headerlink" title="模板template（一个包含变量的普通文本文件.j2）^重要^"></a>模板template（一个包含变量的普通文本文件.j2）^重要^</h3><ul><li><p>模板中的变量是通过收集远程主机的事实变量查得到的</p><p>常用的变量：长域名<code>ansible_fqdn</code>，ipv4地址 <code>ansible_defaults_ipv4.address</code></p></li></ul><blockquote><p>示例：apache服务器中主页输出<code>welcome to &#123;&#123; hostname &#125;&#125; on &#123;&#123; ip &#125;&#125;</code></p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">root@workstation</span> <span class="string">ansible</span>]<span class="comment"># cat web.yaml </span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">example</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install</span> <span class="string">the</span> <span class="string">latest</span> <span class="string">version</span> <span class="string">of</span> <span class="string">Apache</span><span class="comment"># ————&gt; 装包</span></span><br><span class="line">    <span class="attr">yum:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">httpd</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">latest</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Start</span> <span class="string">service</span> <span class="string">httpd,</span> <span class="string">if</span> <span class="string">not</span> <span class="string">started</span><span class="comment"># ————&gt; 起服务</span></span><br><span class="line">    <span class="attr">service:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">httpd</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">started</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">yes</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">firewalld:</span><span class="comment"># ————&gt; 防火墙放行并立即重启</span></span><br><span class="line">      <span class="attr">service:</span> <span class="string">http</span></span><br><span class="line">      <span class="attr">permanent:</span> <span class="literal">yes</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">enabled</span></span><br><span class="line">      <span class="attr">immediate:</span> <span class="literal">yes</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Template</span> <span class="string">a</span> <span class="string">file</span> <span class="string">to</span> <span class="string">/etc/files.conf</span><span class="comment"># ————&gt; 复制本地模板到远程主机</span></span><br><span class="line">    <span class="attr">template:</span></span><br><span class="line">      <span class="attr">src:</span> <span class="string">/root/ansible/index.j2</span></span><br><span class="line">      <span class="attr">dest:</span> <span class="string">/var/www/html/index.html</span></span><br><span class="line">[<span class="string">root@workstation</span> <span class="string">ansible</span>]<span class="comment"># cat index.j2 # ————&gt; 配置模板文件</span></span><br><span class="line"><span class="string">Welcome</span> <span class="string">to</span> &#123;&#123; <span class="string">ansible_fqdn</span> &#125;&#125; <span class="string">on</span> &#123;&#123; <span class="string">ansible_default_ipv4.address</span> &#125;&#125;</span><br></pre></td></tr></table></figure><h4 id="jinja2-模板-考"><a href="#jinja2-模板-考" class="headerlink" title="jinja2 + 模板^考^"></a>jinja2 + 模板^考^</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 条件判断</span></span><br><span class="line">&#123;% <span class="keyword">if</span> finish %&#125;</span><br><span class="line">&#123;&#123; 变量 &#125;&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 循环</span></span><br><span class="line">&#123;% <span class="keyword">for</span> myhost <span class="keyword">in</span> group [<span class="string">&#x27;myhost&#x27;</span>] %&#125;</span><br><span class="line">&#123;&#123; var &#125;&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>示例</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在受管节点/etc/myhosts文件追加内容，要求：</span></span><br><span class="line">1、在all执行</span><br><span class="line">2、文件只生成在webservers</span><br><span class="line">3、包含下列信息 所有主机（server[abcd]）</span><br><span class="line">172.25.250.10   servera.lab.example.com servera</span><br><span class="line">  ^   ^   ^</span><br><span class="line">  |   |   |</span><br><span class="line"><span class="comment"># IP   FQDN         HOSTNAME</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">root@workstation</span> <span class="string">ansible</span>]<span class="comment"># cat hosts.yml </span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">example</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Template</span> <span class="string">a</span> <span class="string">file</span> <span class="string">to</span> <span class="string">/etc/files.conf</span></span><br><span class="line">    <span class="attr">template:</span></span><br><span class="line">      <span class="attr">src:</span> <span class="string">/root/ansible/hosts.j2</span></span><br><span class="line">      <span class="attr">dest:</span> <span class="string">/etc/myhosts</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">&#x27;&quot;webservers&quot; in group_names&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>jinja2</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@workstation ansible]# vim hosts.j2 </span><br><span class="line">&#123;% for i in groups[&#x27;all&#x27;] %&#125;</span><br><span class="line">&#123;&#123; hostvars[i][&quot;ansible_facts&quot;][&quot;default_ipv4&quot;][&quot;address&quot;] &#125;&#125; &#123;&#123; hostvars[host][&quot;ansible_facts&quot;][&quot;fqdn&quot;] &#125;&#125; &#123;&#123; hostvars[host][&quot;ansible_facts&quot;][&quot;hostname&quot;] &#125;&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><h4 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">root@workstation</span> <span class="string">ansible</span>]<span class="comment"># cat guolv.yml </span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">example</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">dbservers</span> </span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">zhangsan</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span></span><br><span class="line">    <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span></span><br><span class="line">      <span class="comment"># 考试时很实用</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; ansible_fqdn | to_nice_yaml&#125;&#125;</span>&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; name | upper() &#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><h1 id="第七章-管理大型项目"><a href="#第七章-管理大型项目" class="headerlink" title="第七章 管理大型项目"></a>第七章 管理大型项目</h1><h2 id="主机模式选择"><a href="#主机模式选择" class="headerlink" title="主机模式选择"></a>主机模式选择</h2><p>清单文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># All</span><br><span class="line"># ungrouped</span><br><span class="line"># *.example.com</span><br><span class="line"># 172.17.25.8</span><br><span class="line"># Servera,serverb,serverc</span><br><span class="line"># Servera,*.example.com,172.17.25.8</span><br><span class="line"># Webserver,&amp;dbserver</span><br><span class="line"># Webserver,!dbserver</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 清单的书写规则：</span></span><br><span class="line">[START:END]</span><br><span class="line">192.168.[0:15].[0:255] 表示 192.168.0.0-192.168.15.255</span><br><span class="line">server[a:c].example.com  表示   a-c</span><br><span class="line">server[01:15].example.com  表示   server01.example.com-server15</span><br><span class="line">ipv6也可以通过[a:f]这种方式</span><br><span class="line"><span class="comment"># 重点：</span></span><br><span class="line">all： 所有主机</span><br><span class="line">ungrouped ： 不属于任何一个组的所有主机</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证计算机是否在清单内</span></span><br><span class="line">ansible 主机成员 --list-hosts</span><br><span class="line"></span><br><span class="line"><span class="comment"># playbook中hosts后面的写法</span></span><br><span class="line">hosts： all</span><br><span class="line">hosts： ungrouped</span><br><span class="line">hosts： <span class="string">&#x27;*&#x27;</span>  和all相同</span><br><span class="line">使用特殊字符时，必须添加单引号，否则不生效</span><br><span class="line">hosts：<span class="string">&#x27;*.example.com&#x27;</span></span><br><span class="line">hosts：<span class="string">&#x27;datacenter*&#x27;</span></span><br><span class="line">列表形式</span><br><span class="line">hosts：servera，serverb</span><br><span class="line">hosts：webserver,serverc</span><br><span class="line">hosts：<span class="string">&#x27;devops,server*&#x27;</span></span><br><span class="line">冒号：取代逗号</span><br><span class="line">hosts：lab,&amp;datacenter 匹配lab组同时也属于datacenter组，顺序无所谓&amp;符号时同时也属于的意思</span><br><span class="line">hosts：datacenter,!test2.example.com  表示datacenter组，但不包括test2.。。这个主机</span><br><span class="line">hosts：all,!datacenter1  所有组，但不包含datacenter1组</span><br><span class="line">$ ansible-inventory --graph</span><br><span class="line">$ ansible all --list-host</span><br><span class="line">$ ansible <span class="string">&#x27;*&#x27;</span> --list-host</span><br><span class="line">$ ansible <span class="string">&#x27;172.25.250.1*&#x27;</span> --list-host</span><br><span class="line">$ ansible <span class="string">&#x27;172.25.250.11,172.25.250.9&#x27;</span> --list-host</span><br></pre></td></tr></table></figure><table><thead><tr><th><strong>主机</strong></th><th><strong>主机组</strong></th><th><strong>嵌套组</strong></th><th><strong>范围</strong></th></tr></thead><tbody><tr><td><strong>Web1.example.com</strong></td><td><strong>[web-servers]</strong></td><td><strong>[Web-servers]</strong></td><td><strong>【START:END】</strong></td></tr><tr><td><strong>Web2.example.com</strong></td><td><strong>Web1.example.com</strong>  <strong>Web2.example.com</strong></td><td><strong>Web1.example.com</strong>  <strong>Web2.example.com</strong></td><td><strong>Server[01:20].example.com</strong></td></tr><tr><td><strong>db1.example.com</strong></td><td><strong>[db-servers]</strong></td><td><strong>[Db-servers]</strong></td><td><strong>[a:d].dns.example.com</strong></td></tr><tr><td><strong>db1.example.com</strong></td><td><strong>db1.example.com</strong>  <strong>db2.example.com</strong></td><td><strong>db1.example.com</strong>  <strong>db2.example.com</strong></td><td></td></tr><tr><td><strong>192.168.10.20</strong></td><td><strong>172.17.25.8</strong></td><td><strong>172.17.25.8</strong></td><td></td></tr><tr><td></td><td></td><td><strong>[Servers:children]</strong></td><td></td></tr><tr><td></td><td></td><td><strong>Web-servers</strong></td><td></td></tr></tbody></table><h2 id="并行处理"><a href="#并行处理" class="headerlink" title="并行处理"></a>并行处理</h2><p><code>forks</code> 允许同时管理的主机数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用分叉在ansible中配置并行</span></span><br><span class="line">Forks = 5</span><br><span class="line"><span class="comment"># 命令行使用并行</span></span><br><span class="line">Ansbile-playbook –f 5</span><br><span class="line">Ansible-playbook –forks 5</span><br><span class="line">[greg@bastion ansible]$ vim /etc/ansible/ansible.cfg </span><br><span class="line"><span class="comment">#forks          = 5</span></span><br></pre></td></tr></table></figure><h2 id="滚动更新"><a href="#滚动更新" class="headerlink" title="滚动更新"></a>滚动更新</h2><p><code>serial</code> 多个机器分批执行任务,限制每次执行任务时选取的机器数（可以是台数，也可以是百分比）</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">root@workstation</span> <span class="string">ansible</span>]<span class="comment"># cat web.yaml </span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">example</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="comment">#serial: 75%</span></span><br><span class="line">  <span class="attr">serial:</span> <span class="number">25</span><span class="string">%</span>   <span class="comment">#可以是百分比，也可以是数量</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install</span> <span class="string">the</span> <span class="string">latest</span> <span class="string">version</span> <span class="string">of</span> <span class="string">Apache</span></span><br><span class="line">    <span class="attr">yum:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">httpd</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">latest</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Start</span> <span class="string">service</span> <span class="string">httpd,</span> <span class="string">if</span> <span class="string">not</span> <span class="string">started</span></span><br><span class="line">    <span class="attr">service:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">httpd</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">started</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">yes</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">firewalld:</span></span><br><span class="line">      <span class="attr">service:</span> <span class="string">http</span></span><br><span class="line">      <span class="attr">permanent:</span> <span class="literal">yes</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">enabled</span></span><br><span class="line">      <span class="attr">immediate:</span> <span class="literal">yes</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Template</span> <span class="string">a</span> <span class="string">file</span> <span class="string">to</span> <span class="string">/etc/files.conf</span></span><br><span class="line">    <span class="attr">template:</span></span><br><span class="line">      <span class="attr">src:</span> <span class="string">/root/ansible/index.j2</span></span><br><span class="line">      <span class="attr">dest:</span> <span class="string">/var/www/html/index.html</span></span><br></pre></td></tr></table></figure><h2 id="包含和导入文件"><a href="#包含和导入文件" class="headerlink" title="包含和导入文件"></a>包含和导入文件</h2><ul><li><p>playbook</p><p><code>include_tasks:</code>动态导入</p><p><code>import_tasks:</code>  静态导入</p></li><li><p>命令行</p><p><code>--list-tasks yaml16.yml</code>查看文件里有哪些任务</p><p><code>--start-at-task=&quot;&quot;</code>  指定从某条任务开始执行（注意文件名中的引号）</p></li><li><p>导入多个任务列表时不能一次性导入多个，要依次导入，且被导入的文件内为纯任务（无play结构）</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 错误示例</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">include_tasks:</span> <span class="comment">#- name: 任务</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">1.</span><span class="string">yml</span><span class="comment">#  include_tasks: </span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">2.</span><span class="string">yml</span><span class="comment">#  - 1.yml</span></span><br><span class="line"><span class="bullet">-</span> <span class="number">3.</span><span class="string">yml</span><span class="comment">#  - 2.yml</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 正确示例</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">任务1</span></span><br><span class="line">  <span class="attr">include_tasks:</span> <span class="number">1.</span><span class="string">yml</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">任务2</span></span><br><span class="line">  <span class="attr">import_tasks:</span> <span class="number">2.</span><span class="string">yml</span></span><br><span class="line"><span class="comment"># 或(name可省略)</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">include_tasks:</span> <span class="number">1.</span><span class="string">yml</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">import_tasks:</span> <span class="number">2.</span><span class="string">yml</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>示例</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat lamp.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">include_tasks:</span> <span class="string">web.yml</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">import_tasks:</span> <span class="string">service.yml</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">include_tasks:</span> <span class="string">firewall.yml</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">import_tasks:</span> <span class="string">tem.yml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 多个文件，每个文件中只有task</span></span><br><span class="line"><span class="comment"># web.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install</span> <span class="string">the</span> <span class="string">latest</span> <span class="string">version</span> <span class="string">of</span> <span class="string">Apache</span></span><br><span class="line">  <span class="attr">yum:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">httpd</span></span><br><span class="line">    <span class="attr">state:</span> <span class="string">latest</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># service.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Start</span> <span class="string">service</span> <span class="string">httpd,</span> <span class="string">if</span> <span class="string">not</span> <span class="string">started</span></span><br><span class="line">  <span class="attr">service:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">httpd</span></span><br><span class="line">    <span class="attr">state:</span> <span class="string">started</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">yes</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># firewall.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">firewalld:</span></span><br><span class="line">    <span class="attr">service:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">permanent:</span> <span class="literal">yes</span></span><br><span class="line">    <span class="attr">state:</span> <span class="string">enabled</span></span><br><span class="line">    <span class="attr">immediate:</span> <span class="literal">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># tem.yml </span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Template</span> <span class="string">a</span> <span class="string">file</span> <span class="string">to</span> <span class="string">/etc/files.conf</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">src:</span> <span class="string">/root/ansible/index.j2</span></span><br><span class="line">    <span class="attr">dest:</span> <span class="string">/var/www/html/index.html</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook --list-tasks yaml16.yml</span><br><span class="line">ansible-playbook --start-at-task=<span class="string">&quot;install the &#x27;Development tools&#x27; package group&quot;</span> yaml16.yml</span><br></pre></td></tr></table></figure><h1 id="第八章-roles-重点"><a href="#第八章-roles-重点" class="headerlink" title="第八章 roles^重点^"></a>第八章 roles^重点^</h1><h2 id="角色结构解析-x3D-目录名称"><a href="#角色结构解析-x3D-目录名称" class="headerlink" title="角色结构解析 &#x3D; 目录名称"></a>角色结构解析 &#x3D; 目录名称</h2><blockquote><p>相当于把一个playbook四分五裂地拆开到不同目录中</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">defaults角色变量默认值</span><br><span class="line">files  引用的静态文件</span><br><span class="line">handlers 处理程序</span><br><span class="line">meta  作者、readme 、依赖关系</span><br><span class="line">tasks  任务列表   角色的功能以及任务</span><br><span class="line">templates  模板jinja2</span><br><span class="line">tests  测试角色</span><br><span class="line">vars  变量值</span><br></pre></td></tr></table></figure><h2 id="从文件下载角色-考"><a href="#从文件下载角色-考" class="headerlink" title="从文件下载角色^考^"></a>从文件下载角色^考^</h2><ul><li><code>-r</code>指文件，<code>-p</code>指下载路径</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-galaxy install -r /home/greg/ansible/roles/requirements.yml -p /home/greg/ansible/roles</span><br></pre></td></tr></table></figure><ul><li><p>文件写法</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">src:</span> <span class="string">http://materials/haproxy.tar</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">balancer</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">src:</span> <span class="string">http://materials/phpinfo.tar</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">phpinfo</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="创建和使用角色"><a href="#创建和使用角色" class="headerlink" title="创建和使用角色"></a>创建和使用角色</h2><ul><li><p>查看当前角色</p><p><code>ansible-galaxy list</code>列出<code>ansible.cfg</code>中配置的角色目录下的角色</p></li><li><p>添加一个角色目录</p><ol><li><p>创建一个roles目录</p></li><li><p>修改<code>ansible.cfg</code>中的<code>roles_path:</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roles_path: = /etc/ansible/roles:/home/user/ansible/roles:/run/share/anaible/roles</span><br></pre></td></tr></table></figure><p><code>：</code>添加一个新目录与之前的目录同时被识别到，分别是默认目录，自定义目录，系统角色目录</p></li></ol></li><li><p>创建一个角色</p><ol><li><p>首先切换到相应的角色目录下</p></li><li><p><code>ansible-galaxy init role</code>生成一个角色树（目录）（包括不同的子目录）</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@foundation0 roles]<span class="comment"># tree user</span></span><br><span class="line">user</span><br><span class="line">├── defaults<span class="comment"># ————&gt; 默认变量（此处也可以定义）</span></span><br><span class="line">│   └── main.yml</span><br><span class="line">├── files<span class="comment"># ————&gt; 静态文件（要加载的一些资源，比如本地到远程复制的文件）</span></span><br><span class="line">├── handlers<span class="comment"># ————&gt; ce未用到的高级功能，被调用，只有某一状态发生改变时才执行</span></span><br><span class="line">│   └── main.yml</span><br><span class="line">├── meta<span class="comment"># ————&gt; 元数据信息（版本，作者信息等等）</span></span><br><span class="line">│   └── main.yml</span><br><span class="line">├── README.md<span class="comment"># ————&gt; 说明书</span></span><br><span class="line">├── tasks</span><br><span class="line">│   └── main.yml<span class="comment"># ————&gt; 全部放任务即可</span></span><br><span class="line">├── templates<span class="comment"># ————&gt; 模板，使用时直接用文件名即可</span></span><br><span class="line">├── tests<span class="comment"># ————&gt; 测试文件，一些测试的例子</span></span><br><span class="line">│   ├── inventory</span><br><span class="line">│   └── test.yml</span><br><span class="line">└── vars</span><br><span class="line">    └── main.yml<span class="comment"># ————&gt; 优先级更高的变量（一般在此处定义）</span></span><br></pre></td></tr></table></figure></li><li><p>使用角色，角色要通过yml文件调用</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">my</span> <span class="string">play</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">roles:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">apache</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>apache示例⬇</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd roles/</span></span><br><span class="line"><span class="comment"># ansible-galaxy init apache</span></span><br><span class="line"><span class="comment"># cd ..</span></span><br><span class="line"><span class="comment"># ansible-galaxy list</span></span><br><span class="line"><span class="comment"># vim roles/apache/tasks/main.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install</span> <span class="string">the</span> <span class="string">latest</span> <span class="string">version</span> <span class="string">of</span> <span class="string">Apache</span></span><br><span class="line">  <span class="attr">yum:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">httpd</span></span><br><span class="line">    <span class="attr">state:</span> <span class="string">latest</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Start</span> <span class="string">service</span> <span class="string">httpd,</span> <span class="string">if</span> <span class="string">not</span> <span class="string">started</span></span><br><span class="line">  <span class="attr">service:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">httpd</span></span><br><span class="line">    <span class="attr">state:</span> <span class="string">started</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">yes</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">firewalld:</span></span><br><span class="line">    <span class="attr">service:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">permanent:</span> <span class="literal">yes</span></span><br><span class="line">    <span class="attr">state:</span> <span class="string">enabled</span></span><br><span class="line">    <span class="attr">immediate:</span> <span class="literal">yes</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Template</span> <span class="string">a</span> <span class="string">file</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">src:</span> <span class="string">index.html.j2</span><span class="comment"># ————&gt; 注意此处直接引用即可</span></span><br><span class="line">    <span class="attr">dest:</span> <span class="string">/var/www/html/index.html</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ vim roles/apache/templates/index.html.j2</span><br><span class="line">Welcome to &#123;&#123; ansible_fqdn &#125;&#125; on &#123;&#123; ansible_default_ipv4.address &#125;&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>在apache角色示例中使用handlers</strong>^扩展内容^</p><p>需求：只有某一状态发生改变时才执行，否则不执行（比如restart，先验证可以避免不必要的系统中断）</p><p>逻辑：调用handlers执行</p><ul><li><p>tasks&#x2F;main.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ensure</span> <span class="string">the</span> <span class="string">default</span> <span class="string">apache</span> <span class="string">port</span> <span class="string">is</span> <span class="number">8080</span></span><br><span class="line">  <span class="attr">lineinfile:</span> </span><br><span class="line">  <span class="attr">path:</span> <span class="string">/etc/httpd/conf/httpd.conf</span></span><br><span class="line">  <span class="attr">regexp:</span> <span class="string">&#x27;^Listen&#x27;</span></span><br><span class="line">  <span class="attr">insertafter:</span> <span class="string">&#x27;^#Listen&#x27;</span></span><br><span class="line">  <span class="attr">line:</span> <span class="string">Listen</span> <span class="number">8080</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="string">restart</span> <span class="string">httpd</span><span class="comment"># ————————&gt; 通过名字关联</span></span><br></pre></td></tr></table></figure></li><li><p>handlers&#x2F;main.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">restart</span> <span class="string">httpd</span></span><br><span class="line">  <span class="attr">service:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">httpd</span></span><br></pre></td></tr></table></figure></li><li><p>执行playbook后发现，系统会自动判断状态是否更改，从而调用handlers，而且handlers中的任务放到最后执行。通常在重启任务时使用情况较多</p></li></ul></blockquote><h2 id="在角色前后执行任务"><a href="#在角色前后执行任务" class="headerlink" title="在角色前后执行任务"></a>在角色前后执行任务</h2><p><code>pre_tasks</code>前</p><p><code>post_tasks</code> 后</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">suibian</span></span><br><span class="line">  <span class="attr">pre_tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">pre_tasks</span></span><br><span class="line">  <span class="attr">debug:</span></span><br><span class="line">    <span class="attr">msg:</span> <span class="string">我是</span> <span class="string">pre_tasks</span></span><br><span class="line">  <span class="attr">roles:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">apache</span></span><br><span class="line">  <span class="attr">post_tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">post_tasks</span></span><br><span class="line">  <span class="attr">debug:</span></span><br><span class="line">  <span class="attr">msg:</span> <span class="string">我是</span> <span class="string">post_tasks</span></span><br></pre></td></tr></table></figure><ul><li>和普通任务还是有所区别，如果是普通task，哪怕在playbook中放在角色前面，执行的结果也是在角色中任务执行完成后执行的</li></ul><h2 id="复用角色-考"><a href="#复用角色-考" class="headerlink" title="复用角色^考^"></a>复用角色^考^</h2><ul><li>就是先引用了角色，再加上自定义的任务</li></ul><blockquote><p>apache示例</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">dbservers主机组上</span></span><br><span class="line"><span class="string">部署anpache服务，启动服务，防火墙放行</span></span><br><span class="line"><span class="string">创建组webdev，创建目录文件/webdev，文件所属用户组webdev，2775权限</span></span><br><span class="line"><span class="string">/webdev---&gt;/var/www/html/webdev</span></span><br><span class="line"><span class="string">/webdev/index.html===</span> <span class="string">“hello</span> <span class="string">world”</span></span><br><span class="line"></span><br><span class="line">[<span class="string">root@workstation</span> <span class="string">ansible</span>]<span class="comment"># cat web_content.yml </span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">dbservers</span></span><br><span class="line">  <span class="attr">roles:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">apache</span></span><br><span class="line">  </span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">group:</span><span class="comment"># ————&gt; 添加组</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">webdev</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">file:</span><span class="comment"># ————&gt; 创建目录</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/webdev</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">directory</span></span><br><span class="line">      <span class="attr">group:</span> <span class="string">webdev</span></span><br><span class="line">      <span class="attr">mode:</span> <span class="string">&#x27;2775&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">file:</span><span class="comment"># ————&gt; 制作软连接</span></span><br><span class="line">      <span class="attr">src:</span> <span class="string">/webdev</span></span><br><span class="line">      <span class="attr">dest:</span> <span class="string">/var/www/html/webdev</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">link</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">copy:</span></span><br><span class="line">      <span class="attr">content:</span> <span class="string">&quot;Hello world\n&quot;</span></span><br><span class="line">      <span class="attr">dest:</span> <span class="string">/webdev/index.html</span></span><br><span class="line">      <span class="attr">setype:</span> <span class="string">httpd_sys_content_t</span><span class="comment"># ————&gt; 同时修改安全上下文</span></span><br></pre></td></tr></table></figure><h2 id="系统角色-考"><a href="#系统角色-考" class="headerlink" title="系统角色^考^"></a>系统角色^考^</h2><ol><li><p>装包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum search roles</span><br><span class="line">yum -y install rhel-system-roles.noarch</span><br></pre></td></tr></table></figure></li><li><p>将系统角色目录<code>/run/share/anaible/roles</code>添加到配置文化<code>ansible.cfg</code>中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roles_path: = /etc/ansible/roles:/home/user/ansible/roles:/run/share/anaible/roles</span><br></pre></td></tr></table></figure></li><li><p>查找并使用示例文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rpm -ql rhel-system-roles.noarch|grep example</span><br><span class="line"><span class="built_in">cp</span> /run/share/doc/rhel-system-roles/timesync/example-timesync-playbook.yml timesync.yml</span><br><span class="line">vim timesync.yml</span><br></pre></td></tr></table></figure></li></ol><p>运行playbook</p><blockquote><p>时间服务器ntp示例</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># yum -y install rhel-system-roles.noarch</span><br><span class="line">$ rpm -ql rhel-system-roles.noarch</span><br><span class="line">$ cp /usr/share/doc/rhel-system-roles/timesync/example-timesync-playbook.yml /home/greg/ansible/timesync.yml</span><br><span class="line"># grep ^roles ansible.cfg </span><br><span class="line">roles_path    = /root/ansible/roles:/usr/share/ansible/roles/</span><br><span class="line"></span><br><span class="line">[greg@bastion ansible]$ vim timesync.yml</span><br><span class="line">---</span><br><span class="line">- hosts: all </span><br><span class="line">  vars:</span><br><span class="line">    timesync_ntp_servers:</span><br><span class="line">      - hostname: foundation0.ilt.example</span><br><span class="line">        iburst: yes </span><br><span class="line">  roles:</span><br><span class="line">    - rhel-system-roles.timesync</span><br><span class="line"></span><br><span class="line">测试结果</span><br><span class="line">$ ansible all -a &#x27;chronyc sources -v&#x27;</span><br></pre></td></tr></table></figure><h2 id="对selinux管理的模块"><a href="#对selinux管理的模块" class="headerlink" title="对selinux管理的模块"></a>对selinux管理的模块</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ansible-doc -l|grep se</span><br><span class="line">selinux</span><br><span class="line">seport</span><br></pre></td></tr></table></figure><h2 id="开发角色推荐做法"><a href="#开发角色推荐做法" class="headerlink" title="开发角色推荐做法"></a>开发角色推荐做法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1、github</span><br><span class="line">2、不要存放敏感信息</span><br><span class="line">3、详细的注释</span><br><span class="line">4、一个角色 一个功能</span><br><span class="line">5、经常重构角色</span><br><span class="line">6、ansible-galaxy init</span><br></pre></td></tr></table></figure><h1 id="第九章-故障排查"><a href="#第九章-故障排查" class="headerlink" title="第九章 故障排查"></a>第九章 故障排查</h1><h2 id="日志收集"><a href="#日志收集" class="headerlink" title="日志收集"></a>日志收集</h2><ul><li><p>修改配置文件ansible.cfg</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">log_path = var/log/ansible.log</span><br></pre></td></tr></table></figure><p>之后的日志信息就会保存到该目录了</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim ansible.cfg</span></span><br><span class="line"><span class="comment"># grep log ansible.cfg</span></span><br><span class="line"><span class="comment"># ls /var/log/ansible.log</span></span><br><span class="line"><span class="comment"># vim ~/.vimrc</span></span><br><span class="line"><span class="comment"># ansible web -m ping</span></span><br><span class="line"><span class="comment"># ls /var/log/ansible.log</span></span><br><span class="line"><span class="comment"># vim /var/log/ansible.log</span></span><br><span class="line"><span class="comment"># date</span></span><br><span class="line"><span class="comment"># vim /var/log/ansible.log</span></span><br><span class="line"><span class="comment"># ansible db -m ping</span></span><br><span class="line"><span class="comment"># vim /var/log/ansible.log</span></span><br><span class="line"><span class="comment"># vim example.yml</span></span><br><span class="line"><span class="comment"># cp example.yml debug.yml</span></span><br><span class="line"><span class="comment"># vim debug.yml</span></span><br><span class="line"><span class="comment"># ansible-playbook debug.yml</span></span><br><span class="line"><span class="comment"># vim /var/log/ansible.log</span></span><br></pre></td></tr></table></figure><h2 id="调试模块"><a href="#调试模块" class="headerlink" title="调试模块"></a>调试模块</h2><p>常用的debug</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">- name: play1</span><br><span class="line">  hosts: web</span><br><span class="line">  tasks:</span><br><span class="line">  - name: task1</span><br><span class="line">    shell: <span class="built_in">whoami</span></span><br><span class="line">    register: result</span><br><span class="line">  - name: task2</span><br><span class="line">    debug:</span><br><span class="line">      msg: <span class="string">&quot;Task1 result is &#123;&#123; result &#125;&#125;&quot;</span></span><br><span class="line">  - name: task3</span><br><span class="line">    debug:</span><br><span class="line">      var: result</span><br><span class="line">  - name: task4</span><br><span class="line">    debug: var=result</span><br><span class="line">  - name: task5</span><br><span class="line">    debug: msg=&#123;&#123; result &#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="语法检查"><a href="#语法检查" class="headerlink" title="语法检查"></a>语法检查</h2><p>执行playbook时加选项<code>--syntax-check</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ansible-playbook --syntax-check debug.yml</span></span><br></pre></td></tr></table></figure><h2 id="返回信息-提示信息-报错信息-警告信息-经验"><a href="#返回信息-提示信息-报错信息-警告信息-经验" class="headerlink" title="返回信息|提示信息|报错信息|警告信息|经验"></a>返回信息|提示信息|报错信息|警告信息|经验</h2><p>跑一遍看哪里报错排除哪里的问题</p><h2 id="空运行"><a href="#空运行" class="headerlink" title="空运行"></a>空运行</h2><p>假装跑了其实没跑<code>-D</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ansible-playbook -D debug.yml</span></span><br></pre></td></tr></table></figure><h2 id="排错思路"><a href="#排错思路" class="headerlink" title="排错思路"></a>排错思路</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1、配置文件 </span><br><span class="line">注释信息 常用选项</span><br><span class="line">2、清单文件 </span><br><span class="line">验证</span><br><span class="line">3、playbook play|tasks</span><br><span class="line">三板斧 - 空格 ：</span><br><span class="line">层级结构</span><br><span class="line">缩进--&gt;空格</span><br><span class="line">hosts：一定是在清单当中定义过</span><br><span class="line">4、角色排错</span><br><span class="line">- 角色路径 ansible-galaxy list</span><br><span class="line">- 创建角色 init</span><br><span class="line">- 编辑角色 tasks目录下 定义的是任务列表</span><br><span class="line">- 使用角色 调用</span><br><span class="line">roles:</span><br><span class="line">  - apache</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="第十章-linux任务自动化"><a href="#第十章-linux任务自动化" class="headerlink" title="第十章 linux任务自动化"></a>第十章 linux任务自动化</h1><h2 id="软件仓库配置-yum-repository-考"><a href="#软件仓库配置-yum-repository-考" class="headerlink" title="软件仓库配置 yum_repository^考^"></a>软件仓库配置 yum_repository^考^</h2><ul><li><p>考试要求用命令行模式去做,把参数依次写到<code>-a</code>后面即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible all -m yum_repository -a <span class="string">&quot;name=BASE description=&#x27;Red Hat Enterprise Linux 8.0 BaseOS (dvd)&#x27; file=随便 baseurl=http://content.example.com/rhel8.0/x86_64/dvd/BaseOS gpgcheck=no enabled=yes&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>playbook</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@workstation ansible]<span class="comment"># cat yum_repo.yml </span></span><br><span class="line">/etc/yum.repos.d/*.repo文件对比</span><br><span class="line">---</span><br><span class="line">- name: play1</span><br><span class="line">  hosts: db</span><br><span class="line">  tasks:</span><br><span class="line">  - name: Add multiple repositories into the same file (1/2)</span><br><span class="line">    yum_repository:</span><br><span class="line">      name: BASE （仓库ID）</span><br><span class="line">      description: Red Hat Enterprise Linux 8.0 BaseOS (dvd) （name）</span><br><span class="line">      file: basefile （文件名称，自动加.repo）</span><br><span class="line">      baseurl: http://content.example.com/rhel8.0/x86_64/dvd/BaseOS</span><br><span class="line">      gpgcheck: no</span><br><span class="line">      enabled: <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line">  - name: Add multiple repositories into the same file (2/2)</span><br><span class="line">    yum_repository:</span><br><span class="line">      name: APPS</span><br><span class="line">      description: Red Hat Enterprise Linux 8.0 AppStream (dvd)</span><br><span class="line">      file: appsfile</span><br><span class="line">      baseurl: http://content.example.com/rhel8.0/x86_64/dvd/AppStream</span><br><span class="line">      gpgcheck: no</span><br><span class="line">      enabled: <span class="built_in">yes</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="优化多任务"><a href="#优化多任务" class="headerlink" title="优化多任务"></a>优化多任务</h2><p>循环 、列表 一个任务完成</p><h2 id="user、group模块"><a href="#user、group模块" class="headerlink" title="user、group模块"></a>user、group模块</h2><ul><li><p>用户-&gt;指定用户组 组要存在</p></li><li><p>用户密码加密</p></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">root@workstation</span> <span class="string">ansible</span>]<span class="comment"># cat users.yaml </span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">play1</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">mypassword:</span> <span class="string">P@ssw0rd</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">groupadd</span> <span class="string">admin</span></span><br><span class="line">    <span class="attr">group:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">admin</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Add</span> <span class="string">the</span> <span class="string">user</span> <span class="string">&#x27;johnd&#x27;</span> <span class="string">with</span> <span class="string">a</span> <span class="string">specific</span> <span class="string">uid</span> <span class="string">and</span> <span class="string">a</span> <span class="string">primary</span> <span class="string">group</span> <span class="string">of</span> <span class="string">&#x27;admin&#x27;</span></span><br><span class="line">    <span class="attr">user:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">johnd</span></span><br><span class="line">      <span class="attr">comment:</span> <span class="string">John</span> <span class="string">Doe</span></span><br><span class="line">      <span class="attr">uid:</span> <span class="number">1040</span></span><br><span class="line">      <span class="attr">group:</span> <span class="string">admin</span></span><br><span class="line">  </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Add</span> <span class="string">the</span> <span class="string">user</span> <span class="string">&#x27;james&#x27;</span> <span class="string">with</span> <span class="string">a</span> <span class="string">bash</span> <span class="string">shell,</span> <span class="string">appending</span> <span class="string">the</span> <span class="string">group</span> <span class="string">&#x27;admins&#x27;</span> <span class="string">and</span> <span class="string">&#x27;developers&#x27;</span> <span class="string">to</span> <span class="string">the</span> <span class="string">user&#x27;s</span> <span class="string">groups</span></span><br><span class="line">    <span class="attr">user:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">james</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">/bin/bash</span></span><br><span class="line">      <span class="attr">groups:</span> <span class="string">admin,wheel,root</span></span><br><span class="line">      <span class="attr">append:</span> <span class="literal">yes</span></span><br><span class="line">  </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Remove</span> <span class="string">the</span> <span class="string">user</span> <span class="string">&#x27;johnd&#x27;</span></span><br><span class="line">    <span class="attr">user:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">johnd</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">absent</span></span><br><span class="line">      <span class="attr">remove:</span> <span class="literal">yes</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 添加私钥</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Create</span> <span class="string">a</span> <span class="number">2048</span><span class="string">-bit</span> <span class="string">SSH</span> <span class="string">key</span> <span class="string">for</span> <span class="string">user</span> <span class="string">jsmith</span> <span class="string">in</span> <span class="string">~jsmith/.ssh/id_rsa</span></span><br><span class="line">    <span class="attr">user:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">jsmith</span></span><br><span class="line">      <span class="attr">generate_ssh_key:</span> <span class="literal">yes</span></span><br><span class="line">      <span class="attr">ssh_key_bits:</span> <span class="number">2048</span></span><br><span class="line">      <span class="attr">ssh_key_file:</span> <span class="string">.ssh/id_rsa</span></span><br><span class="line">  </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Added</span> <span class="string">a</span> <span class="string">consultant</span> <span class="string">whose</span> <span class="string">account</span> <span class="string">you</span> <span class="string">want</span> <span class="string">to</span> <span class="string">expire</span></span><br><span class="line">    <span class="attr">user:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">james18</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">/bin/bash</span></span><br><span class="line">      <span class="attr">groups:</span> <span class="string">admin</span></span><br><span class="line">      <span class="attr">expires:</span> <span class="number">1422403387</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 重点：加密用户,</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Starting</span> <span class="string">at</span> <span class="string">Ansible</span> <span class="number">2.6</span><span class="string">,</span> <span class="string">modify</span> <span class="string">user,</span> <span class="string">remove</span> <span class="string">expiry</span> <span class="string">time</span></span><br><span class="line">    <span class="attr">user:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">james18</span></span><br><span class="line">      <span class="attr">expires:</span> <span class="number">-1</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; mypassword | password_hash(&#x27;sha512&#x27;, &#x27;mysecretsalt&#x27;) &#125;&#125;</span>&quot;</span></span><br><span class="line">      <span class="comment"># 没定义变量，且密码中有特殊字符的话需要加&#x27;&#x27;，盐可以不需要</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; ‘P@ssw0rd’ | password_hash(&#x27;sha512&#x27;) &#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><h2 id="计划任务at，cron"><a href="#计划任务at，cron" class="headerlink" title="计划任务at，cron"></a>计划任务at，cron</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@workstation ansible]<span class="comment"># cat jihua.yml </span></span><br><span class="line">---</span><br><span class="line">- name: play1</span><br><span class="line">  hosts: web</span><br><span class="line">  tasks:</span><br><span class="line">  - name: Schedule a <span class="built_in">command</span> to execute <span class="keyword">in</span> 20 minutes as root</span><br><span class="line">    at:</span><br><span class="line">      <span class="built_in">command</span>: <span class="built_in">ls</span> -d / &gt;/dev/null</span><br><span class="line">      count: 20</span><br><span class="line">      units: minutes</span><br><span class="line"></span><br><span class="line">  - name: Ensure a job that runs at 2 and 5 exists. Creates an entry like <span class="string">&quot;0 5,2 * * ls -alh &gt; /dev/null&quot;</span></span><br><span class="line">    cron:</span><br><span class="line">      name: <span class="string">&quot;check dirs&quot;</span></span><br><span class="line">      minute: <span class="string">&quot;0&quot;</span></span><br><span class="line">      hour: <span class="string">&quot;5,2&quot;</span></span><br><span class="line">      job: <span class="string">&quot;ls -alh &gt; /dev/null&quot;</span></span><br><span class="line"></span><br><span class="line">  - name: Ensure a job that runs at 2 and 5 exists. Creates an entry like <span class="string">&quot;0 5,2 * * ls -alh &gt; /dev/null&quot;</span></span><br><span class="line">    cron:</span><br><span class="line">      name: <span class="string">&quot;check dirs&quot;</span></span><br><span class="line">      minute: <span class="string">&quot;*/2&quot;</span></span><br><span class="line">      hour: <span class="string">&quot;5,2&quot;</span></span><br><span class="line">      job: <span class="string">&quot;ls -alh &gt; /dev/null&quot;</span></span><br><span class="line">      user: james18</span><br><span class="line">      day: 1-10</span><br></pre></td></tr></table></figure><h2 id="service和systemd很多功能一致"><a href="#service和systemd很多功能一致" class="headerlink" title="service和systemd很多功能一致"></a>service和systemd很多功能一致</h2><p>但是systemd有deamon_reload</p><h2 id="NFS"><a href="#NFS" class="headerlink" title="NFS"></a>NFS</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">servera serverb NFS共享目录 /share serverc挂载使用</span><br><span class="line">[root@workstation ansible]<span class="comment"># cat nfs.yml </span></span><br><span class="line">---</span><br><span class="line">- name: play1</span><br><span class="line">  hosts: web</span><br><span class="line"><span class="comment">#  vars:</span></span><br><span class="line"><span class="comment">#    ser_name:</span></span><br><span class="line"><span class="comment">#    - &#x27;rpcbind&#x27;</span></span><br><span class="line"><span class="comment">#    - &#x27;nfs-server&#x27;</span></span><br><span class="line"><span class="comment">#    s_name:</span></span><br><span class="line"><span class="comment">#    - &#x27;mountd&#x27;</span></span><br><span class="line"><span class="comment">#    - &#x27;rpc-bind&#x27;</span></span><br><span class="line"><span class="comment">#    - &#x27;nfs&#x27;</span></span><br><span class="line">  tasks:</span><br><span class="line">  - name: task1</span><br><span class="line">    dnf:</span><br><span class="line">      name: nfs-utils</span><br><span class="line">      state: present</span><br><span class="line">  - name: task2</span><br><span class="line">    shell: <span class="built_in">echo</span> <span class="string">&#x27;/share 172.25.250.0/24(rw,sync)&#x27;</span> &gt; /etc/exports</span><br><span class="line">  - name: task3</span><br><span class="line">    file:</span><br><span class="line">      path: /share</span><br><span class="line">      owner: root</span><br><span class="line">      group: root</span><br><span class="line">      state: directory</span><br><span class="line">      mode: <span class="string">&#x27;0777&#x27;</span></span><br><span class="line"><span class="comment">#  - name: task4</span></span><br><span class="line"><span class="comment">#    service:</span></span><br><span class="line"><span class="comment">#      name: &quot;&#123;&#123; item &#125;&#125;&quot;</span></span><br><span class="line"><span class="comment">#      state: started</span></span><br><span class="line"><span class="comment">#      enabled: yes</span></span><br><span class="line"><span class="comment">#    loop:</span></span><br><span class="line"><span class="comment">#      - &quot;&#123;&#123; ser_name &#125;&#125;&quot;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#  - firewalld:</span></span><br><span class="line"><span class="comment">#      service: &quot;&#123;&#123; item &#125;&#125;&quot;</span></span><br><span class="line"><span class="comment">#      permanent: yes</span></span><br><span class="line"><span class="comment">#      state: enabled</span></span><br><span class="line"><span class="comment">#      immediate: yes</span></span><br><span class="line"><span class="comment">#    loop:</span></span><br><span class="line"><span class="comment">#      - &quot;&#123;&#123; s_name &#125;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">  - name: task4</span><br><span class="line">    service:</span><br><span class="line">      name: rpcbind</span><br><span class="line">      state: started</span><br><span class="line">      enabled: <span class="built_in">yes</span></span><br><span class="line">  - name: task5</span><br><span class="line">    service:</span><br><span class="line">      name: nfs-server</span><br><span class="line">      state: started</span><br><span class="line">      enabled: <span class="built_in">yes</span></span><br><span class="line">  - name: task6</span><br><span class="line">    firewalld: </span><br><span class="line">      service: mountd</span><br><span class="line">      permanent: <span class="built_in">yes</span></span><br><span class="line">      state: enabled</span><br><span class="line">      immediate: <span class="built_in">yes</span></span><br><span class="line">  - name: task7</span><br><span class="line">    firewalld:</span><br><span class="line">      service: nfs</span><br><span class="line">      permanent: <span class="built_in">yes</span></span><br><span class="line">      state: enabled</span><br><span class="line">      immediate: <span class="built_in">yes</span></span><br><span class="line">  - name: task8</span><br><span class="line">    firewalld:</span><br><span class="line">      service: rpc-bind</span><br><span class="line">      permanent: <span class="built_in">yes</span></span><br><span class="line">      state: enabled</span><br><span class="line">      immediate: <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line">- name: play2</span><br><span class="line">  hosts: serverc</span><br><span class="line">  tasks:</span><br><span class="line">  - name:</span><br><span class="line">    shell: mount servera.lab.example.com:/share /mnt</span><br><span class="line">  - name:</span><br><span class="line">    shell: <span class="built_in">touch</span> /mnt/serverc</span><br><span class="line">    register: result</span><br><span class="line">  - name: </span><br><span class="line">    debug: </span><br><span class="line">      var: result</span><br></pre></td></tr></table></figure><h3 id="用yml实现servera-nfs共享，serverb-autofs自动挂载实验（自己写的）"><a href="#用yml实现servera-nfs共享，serverb-autofs自动挂载实验（自己写的）" class="headerlink" title="用yml实现servera nfs共享，serverb autofs自动挂载实验（自己写的）"></a>用yml实现servera nfs共享，serverb autofs自动挂载实验（自己写的）</h3><blockquote><p>自己写的，不保证完全正确</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Servera</span> <span class="string">for</span> <span class="string">NFS</span> <span class="string">server</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">servera.lab.example.com</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">nfs-utils</span></span><br><span class="line">      <span class="attr">yum:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nfs-utils</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">latest</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Enable</span> <span class="string">service</span></span><br><span class="line">      <span class="attr">service:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nfs-server.service</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">started</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">yes</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Make</span> <span class="string">share</span> <span class="string">dir</span></span><br><span class="line">      <span class="attr">file :</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/nfs_share</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">directory</span></span><br><span class="line">        <span class="attr">mode:</span> <span class="string">&#x27;0755&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Modify</span> <span class="string">share.exports</span></span><br><span class="line">      <span class="attr">copy:</span></span><br><span class="line">        <span class="attr">content:</span> <span class="string">&quot;/nfs_share  *(rw,no_root_squash)\n&quot;</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">/etc/exports.d/share.exports</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Reload</span> <span class="string">service</span></span><br><span class="line">      <span class="attr">service:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nfs-server.service</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">reloaded</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Local</span> <span class="string">test</span></span><br><span class="line">      <span class="attr">command:</span> <span class="string">showmount</span> <span class="string">-e</span> <span class="string">localhost</span></span><br><span class="line">      <span class="attr">register:</span> <span class="string">result</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Test</span> <span class="string">result</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; result.stdout &#125;&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Firewall</span> <span class="string">add</span> <span class="string">service</span></span><br><span class="line">      <span class="attr">firewalld:</span></span><br><span class="line">        <span class="attr">service:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; item &#125;&#125;</span>&quot;</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">enabled</span></span><br><span class="line">        <span class="attr">permanent:</span> <span class="literal">yes</span></span><br><span class="line">        <span class="attr">immediate:</span> <span class="literal">yes</span></span><br><span class="line">      <span class="attr">loop:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">rpc-bind</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">nfs</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">mountd</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Serverb</span> <span class="string">for</span> <span class="string">NFS</span> <span class="string">client</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">serverb.lab.example.com</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Remote</span> <span class="string">test</span></span><br><span class="line">      <span class="attr">command:</span> <span class="string">showmount</span> <span class="string">-e</span> <span class="string">servera.lab.example.com</span></span><br><span class="line">      <span class="attr">register:</span> <span class="string">result2</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Test</span> <span class="string">result</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; result2.stdout &#125;&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">autofs</span></span><br><span class="line">      <span class="attr">yum:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">autofs</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">latest</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Enable</span> <span class="string">service</span></span><br><span class="line">      <span class="attr">service:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">autofs.service</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">started</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">yes</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Overwrite</span> <span class="string">config</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">echo</span> <span class="string">&quot;/share /etc/auto.share&quot;</span> <span class="string">&gt;&gt;</span> <span class="string">/etc/auto.master</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Modify</span> <span class="string">auto.share</span></span><br><span class="line">      <span class="attr">copy:</span></span><br><span class="line">        <span class="attr">content:</span> <span class="string">&quot;nfs_share       -fstype=nfs,rw         servera.lab.example.com:/nfs_share&quot;</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">/etc/auto.share</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Restart</span> <span class="string">service</span></span><br><span class="line">      <span class="attr">service:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">autofs.service</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">restarted</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Test</span> <span class="string">NfS</span> <span class="string">Client</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">servera.lab.example.com</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Touch</span> <span class="string">test</span> <span class="string">file</span> <span class="string">and</span> <span class="string">input</span> <span class="string">some</span> <span class="string">words</span></span><br><span class="line">     <span class="comment"># file: </span></span><br><span class="line">     <span class="comment">#   path: /nfs_share/testFile</span></span><br><span class="line">     <span class="comment">#   state: touch</span></span><br><span class="line">      <span class="attr">copy:</span></span><br><span class="line">        <span class="attr">content:</span> <span class="string">&quot;You have already succeeded to autofs&quot;</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">/nfs_share/testFile</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Test</span> <span class="string">NFS</span> <span class="string">CLient</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">serverb.lab.example.com</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">View</span> <span class="string">the</span> <span class="string">file</span></span><br><span class="line">      <span class="attr">command:</span> <span class="string">cat</span> <span class="string">/share/nfs_share/testFile</span></span><br><span class="line">      <span class="attr">register:</span> <span class="string">result</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Show</span> <span class="string">result</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; result.stdout &#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="存储管理模块lvm"><a href="#存储管理模块lvm" class="headerlink" title="存储管理模块lvm"></a>存储管理模块lvm</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">[root@workstation ansible]<span class="comment"># cat parted.yml </span></span><br><span class="line">---</span><br><span class="line">- name: play1</span><br><span class="line">  hosts: db</span><br><span class="line">  tasks:</span><br><span class="line">  - name: Create a new primary partition with a size of 1GiB</span><br><span class="line">    parted:</span><br><span class="line">      device: /dev/vdb</span><br><span class="line">      number: 1</span><br><span class="line">      state: present</span><br><span class="line">      part_end: 1GiB</span><br><span class="line">  - name: Create a new primary partition <span class="keyword">for</span> LVM</span><br><span class="line">    parted:</span><br><span class="line">      device: /dev/vdb</span><br><span class="line">      number: 2</span><br><span class="line">      state: present</span><br><span class="line">      part_start: 1GiB</span><br><span class="line">      part_end: 2GiB</span><br><span class="line">  - name: Create a new primary partition <span class="keyword">for</span> LVM</span><br><span class="line">    parted:</span><br><span class="line">      device: /dev/vdb</span><br><span class="line">      number: 3</span><br><span class="line">      state: present</span><br><span class="line">      part_start: 2GiB</span><br><span class="line">      part_end: 3GiB</span><br><span class="line">  - name: Create or resize a volume group on top of /dev/sdb1 and /dev/sdc5.</span><br><span class="line">    lvg:</span><br><span class="line">      vg: myvg</span><br><span class="line">      pvs: /dev/vdb1,/dev/vdb2,/dev/vdb3</span><br><span class="line">  - name: Create a logical volume of 512m</span><br><span class="line">    lvol:</span><br><span class="line">      vg: myvg</span><br><span class="line">      lv: mylv</span><br><span class="line">      size: 512</span><br><span class="line">  - name: Create a ext2 filesystem on /dev/sdb1</span><br><span class="line">    filesystem:</span><br><span class="line">      fstype: xfs</span><br><span class="line">      dev: /dev/myvg/mylv</span><br><span class="line">  - name:</span><br><span class="line">    file:</span><br><span class="line">      path: /mnt/mylv</span><br><span class="line">      state: directory</span><br><span class="line">  - name: Mount DVD read-only</span><br><span class="line">    mount:</span><br><span class="line">      path: /mnt/mylv</span><br><span class="line">      src: /dev/myvg/mylv</span><br><span class="line">      fstype: xfs</span><br><span class="line">      opts: defaults</span><br><span class="line">      state: mounted</span><br></pre></td></tr></table></figure><h2 id="挂载mount"><a href="#挂载mount" class="headerlink" title="挂载mount"></a>挂载mount</h2><pre><code>  总结：  state：          present    将配置信息写入/etc/fstab,不挂载          mounted 将配置信息写入/etc/fstab,挂载          unmounted  不改变/etc/fstab信息,卸载          absent     删除/etc/fstab信息，并卸载</code></pre><h1 id="RHCE模拟考试环境部署"><a href="#RHCE模拟考试环境部署" class="headerlink" title="RHCE模拟考试环境部署"></a>RHCE模拟考试环境部署</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1、放光盘</span><br><span class="line">2、查看光盘挂载位置</span><br><span class="line">[kiosk@foundation0 ~]$ <span class="built_in">df</span> -TH|grep sr0</span><br><span class="line">3、安装光盘里面的RPM包</span><br><span class="line">[kiosk@foundation0 ~]$ <span class="built_in">ls</span> /run/media/kiosk/CDROM/ex294v8-3.6-210314.x86_64.rpm</span><br><span class="line">[kiosk@foundation0 ~]$ ssh root@localhost <span class="string">&#x27;yum -y install /run/media/kiosk/CDROM/ex294v8-3.6-210314.x86_64.rpm&#x27;</span></span><br><span class="line">4、查看输出日志</span><br><span class="line">$ <span class="built_in">tail</span> -f /tmp/ex294v8-setup.log</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> RHCE,linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RHCE学习笔记|RH134</title>
      <link href="/2021/08/18/RHCE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-RH134/"/>
      <url>/2021/08/18/RHCE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-RH134/</url>
      
        <content type="html"><![CDATA[<h1 id="RH134"><a href="#RH134" class="headerlink" title="RH134"></a>RH134</h1><blockquote><p>本部分笔记由老师原始的笔记修改整理而成，如果没有特别的格式能看出来是我自己添加修改的内容，出了问题请怪老师。</p><p>本笔记仅供参考，真正的笔记应该是自己的东西</p><hr><p>祝考试的都过，学习的都有进步。</p><p><strong>&#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; Copyright © 2021.8.18 LNSS. in Zhipan Li’s Class &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D;</strong></p></blockquote><h2 id="课程安排"><a href="#课程安排" class="headerlink" title="课程安排"></a>课程安排</h2><p><code>cat /etc/rht</code>查看当前课程环境</p><table><thead><tr><th align="left">第一天</th><th>第二天</th><th align="left">第三天</th><th>第四天</th><th>第五天</th></tr></thead><tbody><tr><td align="left">1、提高命令行生产率</td><td>3、调优系统性能</td><td align="left">7、管理逻辑卷</td><td>sed</td><td>13、容器管理</td></tr><tr><td align="left">2、计划将来的任务</td><td>4、使用ACL控制对文件的访问</td><td align="left">8、实施高级存储功能</td><td>10、控制启动过程</td><td>14、总复习</td></tr><tr><td align="left"></td><td>5、管理SELinux安全性</td><td align="left">9、访问网络附加存储NFS</td><td>11、管理网络安全</td><td>ansible</td></tr><tr><td align="left"></td><td>6、管理基本存储</td><td align="left"></td><td>12、安装RHEL 虚拟机</td><td></td></tr></tbody></table><h1 id="第一章-shell脚本"><a href="#第一章-shell脚本" class="headerlink" title="第一章 shell脚本"></a>第一章 shell脚本</h1><h2 id="shell功能"><a href="#shell功能" class="headerlink" title="shell功能"></a>shell功能</h2><p>计算机硬件&lt;–&gt;Linux内核&lt;–&gt;shell&lt;–&gt;应用层&lt;–&gt;用户</p><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><p><kbd>esc</kbd> .   | <kbd>alt</kbd> . 显示上一个参数，后者不常用</p><p><kbd>ctrl</kbd> r从history中查找</p><h2 id="命令连接符"><a href="#命令连接符" class="headerlink" title="命令连接符"></a>命令连接符</h2><ul><li><p>无逻辑关系</p><p><code>;</code>  单纯的命令之间的连接，一个命令的错误不会影响其他命令的执行</p></li><li><p>有逻辑关系</p><p><code>&amp;&amp;</code>与，前面执行成功（$?&#x3D;0），则执行后面，否则都不执行 </p><p><code>||</code>或，前面执行失败（$?≠0），则执行后面，否则不执行</p><p><strong>一般情况下，可以与<code>if else</code>同义替换</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 条件1成立，则执行command1</span></span><br><span class="line"><span class="keyword">if</span> [ something=<span class="literal">true</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">command1</span><br><span class="line"><span class="comment"># 条件2成立（条件1不成立），则执行command2</span></span><br><span class="line"><span class="keyword">elif</span> [ somethin=wrong ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">command2</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 条件成立，则执行command1</span></span><br><span class="line">[ something=<span class="literal">true</span> ] &amp;&amp; command1</span><br><span class="line"><span class="comment"># 条件不成立，则执行command2</span></span><br><span class="line">[ something=<span class="literal">true</span> ] || command2</span><br></pre></td></tr></table></figure><p><strong>缺点是：当判断条件个数多，以及有“其他”这种条件存在时，不方便</strong></p></li></ul><h2 id="什么是脚本"><a href="#什么是脚本" class="headerlink" title="什么是脚本"></a>什么是脚本</h2><p>**简单：**命令堆叠的文件</p><p><strong>复杂：</strong>加上控制语句 ，满足条件 action </p><p><strong>默认shell</strong><code>/bin/bash</code></p><h2 id="字符输出"><a href="#字符输出" class="headerlink" title="字符输出"></a>字符输出</h2><ul><li><p><strong>echo</strong></p><p><code>-n</code>输出结果后不换行（默认换行）</p><p><code>-e</code>支持特殊字符</p><p><strong>echo支持<code>&#39;&#39;</code>,<code>&quot;&quot;</code>,<code>\</code><strong>，</strong>区别如下：</strong></p><ul><li><p><code>&#39;&#39;</code>和<code>&quot;&quot;</code>都是用来界参数的边界（echo内容的范围，<strong>命令替换可以不包括在内^$(command)^</strong>）</p><p>需要用到界定参数的时候：<strong>参数包括一些特殊字符使之无法识别为一个整体</strong></p><ul><li><code>&#39;&#39;</code> 原样输出<code>&#39;&#39;</code>内的内容全部按照普通字符原样输出，不支持特殊字符</li><li><code>&quot;&quot;</code> 解释特殊字符的意义，只是界定范围</li></ul></li><li><p><code>\</code>转义字符，可以把特殊字符还原为普通字符，原样输出</p></li></ul><p>但是<code>&quot;&quot;</code>和<code>&#39;&#39;</code>在<code>ssh user@host &quot;command&quot;</code>|<code>ssh user@host &#39;command&#39;</code>中是没有区别的，<strong>特例</strong></p></li><li><p><strong>printf</strong></p><p><code>printf &#39;%s，%d&#39; string int</code>printf的固定格式，不同参数对应不同数据类型，默认不换行</p></li><li><p>一些特殊字符</p><p>使用<code>echo -e &quot;&quot;</code>执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">\a：输出警告声音</span><br><span class="line">\n：标准换行，换行并将光标移至下一行的行首</span><br><span class="line">\t：插入tab（制表符）符号作为分隔符</span><br><span class="line">\\：插入\符号</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">\e[nm *** \e[0m：用来指定***输出时的颜色格式</span><br><span class="line">文字颜色（30-37）：</span><br><span class="line">echo -e &quot;\e[30m 黑色字 \e[0m&quot;</span><br><span class="line">echo -e &quot;\e[31m 红色字 \e[0m&quot; </span><br><span class="line">echo -e &quot;\e[32m 绿色字 \e[0m&quot;</span><br><span class="line">echo -e &quot;\e[33m 黄色字 \e[0m&quot;</span><br><span class="line">echo -e &quot;\e[34m 蓝色字 \e[0m&quot; </span><br><span class="line">echo -e &quot;\e[35m 紫色字 \e[0m&quot; </span><br><span class="line">echo -e &quot;\e[36m 天蓝字 \e[0m&quot; </span><br><span class="line">echo -e &quot;\e[37m 白色字 \e[0m&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">\e[nm *** \e[0m：用来指定***输出时的颜色格式</span><br><span class="line">字背景颜色（40-47）：</span><br><span class="line">echo -e &quot;\e[40;37m 黑底白字 \e[0m&quot;</span><br><span class="line">echo -e &quot;\e[41;37m 红底白字 \e[0m&quot; </span><br><span class="line">echo -e &quot;\e[42;37m 绿底白字 \e[0m&quot; </span><br><span class="line">echo -e &quot;\e[43;37m 黄底白字 \e[0m&quot; </span><br><span class="line">echo -e &quot;\e[44;37m 蓝底白字 \e[0m&quot; </span><br><span class="line">echo -e &quot;\e[45;37m 紫底白字 \e[0m&quot; </span><br><span class="line">echo -e &quot;\e[46;37m 天蓝底白字 \e[0m&quot; </span><br><span class="line">echo -e &quot;\e[47;30m 白底黑字 \e[0m&quot;</span><br></pre></td></tr></table></figure></li></ul><h2 id="命令替换-command"><a href="#命令替换-command" class="headerlink" title="命令替换$(command)"></a>命令替换$(command)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 示例</span></span><br><span class="line"><span class="built_in">touch</span> $(<span class="built_in">date</span> +%Y-%m-%d).txt</span><br></pre></td></tr></table></figure><p><code>$()</code>命令替换</p><p><code>$&#123;&#125;</code>界定变量边界，一般用于：变量名有特殊字符，不能被识别为一个变量</p><p><code>$[]</code>计算括号内的计算结果（自己试出来的）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@servera ~]<span class="comment"># echo $[1+2]</span></span><br><span class="line">3</span><br></pre></td></tr></table></figure><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><p>概念如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># Shell Script，Shell脚本与Windows/Dos下的批处理相似，也就是用各类命令预先放入到一个文件中，方便一次性执行的一个程序文件，主要是方便管理员进行设置或者管理用的。但是它比Windows下的批处理更强大，比用其他编程程序编辑的程序效率更高，毕竟它使用了Linux/Unix下的命令。</span></span><br><span class="line"><span class="section"># 换一种说法也就是，shell script是利用shell的功能所写的一个程序，这个程序是使用纯文本文件，将一些shell的语法与指令写在里面，然后用正规表示法，管道命令以及数据流重定向等功能，加上我们的流程控制以达到我们所想要的处理目的。</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 创建脚本时用.sh后缀，会被系统识别到，前几行注释高亮显示</span></span><br><span class="line">vim command.sh</span><br><span class="line"><span class="comment"># 2. 指定解释器</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">content</span><br><span class="line"><span class="comment"># 3. 赋权</span></span><br><span class="line"><span class="built_in">chmod</span> +x command.sh</span><br></pre></td></tr></table></figure><h2 id="执行命令的方法"><a href="#执行命令的方法" class="headerlink" title="执行命令的方法"></a>执行命令的方法</h2><ol><li><p>绝对路径</p></li><li><p>相对路径</p></li><li><p>bash command-name，sh command-name</p></li><li><p>source 命令路径</p></li><li><p>通过定义环境变量，可以达到***<u>使用命令名字在任意位置直接执行</u>***的目的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 目前系统当中的可搜寻二进制路径</span></span><br><span class="line">[root@servera ~]<span class="comment"># echo $PATH</span></span><br><span class="line">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin</span><br></pre></td></tr></table></figure><p>5.1在环境变量下配置脚本文件，比如放到<code>/root/bin</code>下，可以实现任意位置<code>command-name</code>直接执行</p><p>5.2修改环境变量，在<code>/etc/profile</code>中加入一行<code>PATH=$PATH:目标目录</code>，<code>source /etc/profile</code>重载。同样可以实现在任意位置<code>command-name</code>直接执行</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo -e &quot;Uname:\t&quot; $(whoami)</span></span><br><span class="line"><span class="comment"># vim firsh.sh</span></span><br><span class="line"><span class="comment"># chmod +x firsh.sh</span></span><br><span class="line"><span class="comment"># ./firsh.sh</span></span><br><span class="line"><span class="comment"># vim firsh.sh</span></span><br><span class="line"><span class="comment"># ./firsh.sh</span></span><br><span class="line"><span class="comment"># cat firsh.sh</span></span><br><span class="line"><span class="comment"># echo hello aaa</span></span><br><span class="line"><span class="comment"># echo 1 2 3</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># ./firsh.sh</span></span><br><span class="line"><span class="comment"># echo $PATH   #目前系统当中的可搜寻二进制路径</span></span><br><span class="line"><span class="comment"># pwd</span></span><br><span class="line"><span class="comment"># first.sh</span></span><br><span class="line"><span class="comment"># mkdir bin</span></span><br><span class="line"><span class="comment"># mv firsh.sh bin/   # /root/bin </span></span><br><span class="line"><span class="comment"># firsh.sh</span></span><br><span class="line"><span class="comment"># cd /tmp/</span></span><br><span class="line"><span class="comment"># firsh.sh</span></span><br><span class="line"><span class="comment"># cd</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># mkdir scripts           </span></span><br><span class="line"><span class="comment"># mv bin/firsh.sh scripts/   # 自己来创建二进制路径</span></span><br><span class="line"><span class="comment"># first.sh</span></span><br><span class="line"><span class="comment"># cd scripts/</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># mv firsh.sh firsh</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># vim /etc/profile             #自己的目录添加到二进制可搜寻路径当中</span></span><br><span class="line">root@servera ~]<span class="comment"># tail -n 2 /etc/profile</span></span><br><span class="line">PATH=<span class="variable">$PATH</span>:/root/scripts</span><br><span class="line"><span class="built_in">export</span> PATH</span><br><span class="line"><span class="comment"># first</span></span><br><span class="line"><span class="comment"># source /etc/profile           #手动重新加载文件  默认只在登陆时加载</span></span><br><span class="line"><span class="comment"># firsh</span></span><br><span class="line"><span class="comment"># cd /etc/sysconfig/</span></span><br><span class="line"><span class="comment"># firsh</span></span><br></pre></td></tr></table></figure><h2 id="特殊变量"><a href="#特殊变量" class="headerlink" title="特殊变量"></a>特殊变量</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@servera scripts]<span class="comment"># cat teshu.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;$0: &#x27;</span> <span class="variable">$0</span> 文件名称</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;$1: &#x27;</span> <span class="variable">$1</span> 第n个变量</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;$2: &#x27;</span> <span class="variable">$2</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;$3: &#x27;</span> <span class="variable">$3</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;$#: &#x27;</span> <span class="variable">$#</span> 参数个数</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;$$: &#x27;</span> $$ shell PID</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;$@: &#x27;</span> <span class="variable">$@</span>      参数拆开输出，比如<span class="keyword">for</span>循环时会一行一个依次输出</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;$*: &#x27;</span> $*参数作为整体输出 ，<span class="keyword">for</span>循环时会把所有参数一次性输出</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;$?: &#x27;</span> $?      上一条命令的返回值</span><br></pre></td></tr></table></figure><ul><li><p>区分<code>$@</code>和<code>$*</code></p><p><code>@</code>条理清晰，<code>*</code>混为一谈</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@servera scripts]# cat qubie.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">for i in &quot;$@&quot;</span><br><span class="line">do</span><br><span class="line">echo &#x27;$@&#x27; $i</span><br><span class="line">done</span><br><span class="line">echo ##################################</span><br><span class="line">for i in &quot;$*&quot;</span><br><span class="line">do</span><br><span class="line">echo &#x27;$*&#x27; $i</span><br><span class="line">done</span><br></pre></td></tr></table></figure></li><li><p>通过打印空参数以及多个参数，可以看出：</p><ul><li>使用$@作为参数，<code>所有参数会被拆分</code>，每个参数会依次被使用一次，如果没有参数则不会开始循环</li><li>使用$*作为参数，<code>所有参数都被看做一个整体（包括空）</code>，所有参数会被整体使用，而且空参数也会被执行</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@servera ~]# ./qubie.sh </span><br><span class="line">$*</span><br><span class="line">[root@servera ~]# ./qubie.sh 1 2 3 4 5</span><br><span class="line">$@ 1</span><br><span class="line">$@ 2</span><br><span class="line">$@ 3</span><br><span class="line">$@ 4</span><br><span class="line">$@ 5</span><br><span class="line"></span><br><span class="line">$* 1 2 3 4 5</span><br></pre></td></tr></table></figure></li></ul><h2 id="输出系统相关信息-示例"><a href="#输出系统相关信息-示例" class="headerlink" title="输出系统相关信息(示例)"></a>输出系统相关信息(示例)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@servera scripts]<span class="comment"># cat os_current.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;User:\t <span class="subst">$(whoami)</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;Host:\t <span class="subst">$(hostname)</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;Ipv4:\t <span class="subst">$(ip a s enp1s0|awk &#x27;/inet / &#123;print $2&#125;&#x27;)</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;Ipv4:\t <span class="subst">$(ip a s enp1s0|awk &#x27;/inet / &#123;print $2&#125;&#x27;|cut -d / -f 1)</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;Memo:\t <span class="subst">$(free -h|awk &#x27;/Mem/ &#123;print $2&#125;&#x27;)</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;Disk:\t <span class="subst">$( df -ht xfs|awk &#x27;/dev/ &#123;print $4&#125;&#x27;)</span>&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@servera bin]<span class="comment"># cat information </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 用户名</span></span><br><span class="line">US=$(<span class="built_in">whoami</span>)</span><br><span class="line"><span class="comment"># 主机名</span></span><br><span class="line">HS=$(hostname)</span><br><span class="line"><span class="comment"># 当前路径</span></span><br><span class="line">WD=$(<span class="built_in">pwd</span>)</span><br><span class="line"><span class="comment"># 平均负载</span></span><br><span class="line">LA=$(<span class="built_in">uptime</span>)</span><br><span class="line"><span class="comment"># 磁盘分区</span></span><br><span class="line">DI=$(lsblk)</span><br><span class="line"><span class="comment"># IP地址</span></span><br><span class="line">IP=$(ifconfig enp1s0 | awk <span class="string">&#x27;/inet / &#123;print $2&#125;&#x27;</span>)</span><br><span class="line"><span class="comment"># 总内存（Mem行的第二个单词） -h 人话</span></span><br><span class="line">Mem_total=$(free -h|awk <span class="string">&#x27;/Mem/ &#123;print $2&#125;&#x27;</span>)</span><br><span class="line"><span class="comment"># 可用内存（Men行的第四个单词）</span></span><br><span class="line">Mem_free=$(free -h|awk <span class="string">&#x27;/Mem/ &#123;print $4&#125;&#x27;</span>)</span><br><span class="line"><span class="comment"># 可用磁盘（vda1行的第五个单词）</span></span><br><span class="line">Vda_disk_free=$(<span class="built_in">df</span> -TH|awk <span class="string">&#x27;/vda1/ &#123;print $5&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\e[31m Current loginusr is:\t <span class="variable">$US</span> \e[0m&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\e[34m Current hostname is:\t <span class="variable">$HS</span> \e[0m&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\e[32m Current workdir  is:\t <span class="variable">$WD</span> \e[0m&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\e[33m Current load-ave is:\t <span class="variable">$LA</span> \e[0m&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\e[35m Current disk par is:\t <span class="variable">$DI</span> \e[0m</span></span><br><span class="line"><span class="string">echo -e &quot;</span>\e[36m Current ipaddres is:\t <span class="variable">$IP</span> \e[0m<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo -e &quot;</span>\e[31m Current mem_tota is:\t <span class="variable">$&#123;Mem_total&#125;</span> \e[0m<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo -e &quot;</span>\e[31m Current mem_free is:\t <span class="variable">$&#123;Mem_free&#125;</span> \e[0m<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo -e &quot;</span>\e[36m Current vdafree  is:\t <span class="variable">$&#123;Vda_disk_free&#125;</span> \e[0m<span class="string">&quot;</span></span><br></pre></td></tr></table></figure><h2 id="交互式脚本"><a href="#交互式脚本" class="headerlink" title="交互式脚本"></a>交互式脚本</h2><p><code>read -p</code>读取输入，-p为提示内容，读取到键盘的输入可以在后面继续使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@servera bin]<span class="comment"># cat infs </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># -p 提示符，显示内容，read等待读取输入 </span></span><br><span class="line"><span class="comment"># 输入内容作为自定义变量的值（infs），该值随用户输入内容的不同而变化</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&#x27;Please input your information US|HS|WD|IP: &#x27;</span> infs</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$infs</span></span><br><span class="line">US=$(<span class="built_in">whoami</span>)</span><br><span class="line">HS=$(hostname)</span><br><span class="line">WD=$(<span class="built_in">pwd</span>)</span><br><span class="line">IP=$(ifconfig enp1s0 | awk <span class="string">&#x27;/inet / &#123;print $2&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$infs</span> <span class="keyword">in</span></span><br><span class="line">US)</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\e[31m Current loginusr is:\t <span class="variable">$US</span> \e[0m&quot;</span></span><br><span class="line">;;</span><br><span class="line">HS)</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\e[34m Current hostname is:\t <span class="variable">$HS</span> \e[0m&quot;</span></span><br><span class="line">;;</span><br><span class="line">WD)</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\e[32m Current workdir  is:\t <span class="variable">$WD</span> \e[0m&quot;</span></span><br><span class="line">;;</span><br><span class="line">IP)</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\e[36m Current ipaddres is:\t <span class="variable">$IP</span> \e[0m&quot;</span></span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;choice only: US|HS|WD|IP......&#x27;</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><h2 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h2><ul><li><p><code>test 选项 文件</code>，无显示结果，<code>echo $?</code>判断返回结果</p></li><li><p><code>[ 选项 文件 ]</code>同test功能一致，另一种写法</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">格式：<span class="built_in">test</span> 选项 参数 然后借助$?来验证判断结果</span><br><span class="line">   或[ 选项 参数 ] （中括号用于条件判断时中间的两边留空白）</span><br><span class="line">   </span><br><span class="line">-e：判断文件是否存在</span><br><span class="line">-s：判断文件是否存在，并判断是否为非空</span><br><span class="line">-f：判断文件是否存在，并判断是否是普通文件</span><br><span class="line">-d：判断文件是否存在，并判断是否是目录文件</span><br><span class="line">-b：判断文件是否存在，并判断是否是块设备文件</span><br><span class="line">-L：判断文件是否存在，并判断是否是软链接文件</span><br><span class="line"></span><br><span class="line">-eq：判断是否相等</span><br><span class="line">-ne：判断是否不等</span><br><span class="line">-gt：判断是否大于</span><br><span class="line">-lt：判断是否小于</span><br><span class="line">-ge：判断是否大于等于</span><br><span class="line">-le：判断是否小于等于</span><br><span class="line"></span><br><span class="line">-z：判断字符串是否为空</span><br><span class="line">-n：判断字符串是否为非空</span><br><span class="line">==：判断两个字符串是否相同</span><br><span class="line">!=：判断两个字符串是否不同</span><br><span class="line"></span><br><span class="line">数字判断符号</span><br><span class="line">[root@servera scripts]<span class="comment"># [ 10 -eq 11 ]</span></span><br><span class="line">[root@servera scripts]<span class="comment"># echo $?</span></span><br><span class="line">1</span><br><span class="line">[root@servera scripts]<span class="comment"># [ 10 -eq 10 ]</span></span><br><span class="line">[root@servera scripts]<span class="comment"># echo $?</span></span><br><span class="line">0</span><br><span class="line">[root@servera scripts]<span class="comment"># [ 10 -gt 9 ]</span></span><br><span class="line">[root@servera scripts]<span class="comment"># echo $?</span></span><br><span class="line">0</span><br><span class="line">[root@servera scripts]<span class="comment"># [ 10 -gt 11 ]</span></span><br><span class="line">[root@servera scripts]<span class="comment"># echo $?</span></span><br><span class="line">1</span><br><span class="line">[root@servera scripts]<span class="comment"># [ 10 -lt 11 ]</span></span><br><span class="line">[root@servera scripts]<span class="comment"># echo $?</span></span><br><span class="line">0</span><br><span class="line">[root@servera scripts]<span class="comment"># [ 10 -le 11 ]</span></span><br><span class="line">[root@servera scripts]<span class="comment"># echo $?</span></span><br><span class="line">0</span><br><span class="line">[root@servera scripts]<span class="comment"># [ 12 -ge 11 ]</span></span><br><span class="line">[root@servera scripts]<span class="comment"># echo $?</span></span><br><span class="line">0</span><br><span class="line">[root@servera scripts]<span class="comment"># [ 10 -ne 11 ]</span></span><br><span class="line">[root@servera scripts]<span class="comment"># echo $?</span></span><br><span class="line">0</span><br><span class="line">字符串判断</span><br><span class="line"> <span class="built_in">echo</span> $?</span><br><span class="line"><span class="comment"># name=zhangsan</span></span><br><span class="line"><span class="comment"># echo $name</span></span><br><span class="line"><span class="comment"># test -z $name</span></span><br><span class="line"><span class="comment"># echo $?</span></span><br><span class="line"><span class="comment"># name=&#x27;zhangsan&#x27;</span></span><br><span class="line"><span class="comment"># echo $&#123;name&#125;</span></span><br><span class="line"><span class="comment"># [ -z $&#123;name&#125; ]</span></span><br><span class="line"><span class="comment"># echo $?</span></span><br><span class="line"><span class="comment"># [ -n $&#123;name&#125; ]</span></span><br><span class="line"><span class="comment"># echo $?</span></span><br><span class="line"><span class="comment"># test $&#123;name&#125; == lisi</span></span><br><span class="line"><span class="comment"># echo $?</span></span><br><span class="line"><span class="comment"># test $&#123;name&#125; == zhangsan</span></span><br><span class="line"><span class="comment"># echo $?</span></span><br><span class="line"><span class="comment"># [ $&#123;name&#125; != lisi ]</span></span><br><span class="line"><span class="comment"># echo $?</span></span><br><span class="line"><span class="comment"># [ $&#123;name&#125; != zhangsan ]</span></span><br><span class="line"><span class="comment"># echo $?</span></span><br></pre></td></tr></table></figure><h2 id="多条件判断"><a href="#多条件判断" class="headerlink" title="多条件判断"></a>多条件判断</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@servera scripts]<span class="comment"># [ $&#123;name&#125; == lisi -a 10 -eq 11  ]</span></span><br><span class="line">[root@servera scripts]<span class="comment"># echo $?</span></span><br><span class="line">1</span><br><span class="line">[root@servera scripts]<span class="comment"># [ $&#123;name&#125; == lisi -a 10 -eq 10  ]   # and</span></span><br><span class="line">[root@servera scripts]<span class="comment"># echo $?</span></span><br><span class="line">1</span><br><span class="line">[root@servera scripts]<span class="comment"># [ $&#123;name&#125; == zhangsan -a 10 -eq 10  ]</span></span><br><span class="line">[root@servera scripts]<span class="comment"># echo $?</span></span><br><span class="line">0</span><br><span class="line">[root@servera scripts]<span class="comment"># [ $&#123;name&#125; == lisi -o 10 -eq 10  ]   #or</span></span><br><span class="line">[root@servera scripts]<span class="comment"># echo $?</span></span><br><span class="line">0</span><br></pre></td></tr></table></figure><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><h2 id="流程控制语句"><a href="#流程控制语句" class="headerlink" title="流程控制语句"></a>流程控制语句</h2><h3 id="for"><a href="#for" class="headerlink" title="for"></a>for</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">语法一：</span><br><span class="line">for变量  in  值1  值2  值3 ……</span><br><span class="line">do</span><br><span class="line">程序</span><br><span class="line">done</span><br><span class="line">语法二：</span><br><span class="line">for  ((初始值；循环控制条件；变量变化))</span><br><span class="line">do</span><br><span class="line">程序</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p><strong>每隔两秒执行一条命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[kiosk@foundation0 ~]$ <span class="built_in">cat</span> result.sh </span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> bastion servera serverb</span><br><span class="line"><span class="keyword">do</span><span class="built_in">echo</span> -e <span class="string">&quot;Hostname:\t <span class="variable">$i</span>&quot;</span>          </span><br><span class="line"><span class="comment">#\t 就是制表符</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;#####################################################&#x27;</span></span><br><span class="line">ssh root@<span class="variable">$i</span> <span class="string">&#x27;whoami&#x27;</span></span><br><span class="line">ssh root@<span class="variable">$i</span> <span class="string">&#x27;date&#x27;</span></span><br><span class="line">ssh root@<span class="variable">$i</span> <span class="string">&#x27;uptime&#x27;</span></span><br><span class="line">ssh root@<span class="variable">$i</span> <span class="string">&#x27;hostname&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;#####################################################&#x27;</span></span><br><span class="line"><span class="built_in">sleep</span> 2 <span class="comment">#休眠</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="while"><a href="#while" class="headerlink" title="while"></a>while</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">格式一：</span><br><span class="line">while  [ 条件判断式 ]</span><br><span class="line">do程序</span><br><span class="line">done</span><br><span class="line">格式二：</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">程序</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="if-else"><a href="#if-else" class="headerlink" title="if else"></a>if else</h3><p>有时候使用会报错，可以加两个[]试试，格式为<code>if [[ condition ]]</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">if [ condition ]</span><br><span class="line">then</span><br><span class="line">command1</span><br><span class="line">elif [ condation ]</span><br><span class="line">then</span><br><span class="line">command2</span><br><span class="line">else</span><br><span class="line">command3</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h3 id="case"><a href="#case" class="headerlink" title="case"></a>case</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@servera bin]<span class="comment"># cat infs </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&#x27;Please input your information US|HS|WD|IP: &#x27;</span> infs</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$infs</span></span><br><span class="line">US=$(<span class="built_in">whoami</span>)</span><br><span class="line">HS=$(hostname)</span><br><span class="line">WD=$(<span class="built_in">pwd</span>)</span><br><span class="line">IP=$(ifconfig enp1s0 | awk <span class="string">&#x27;/inet / &#123;print $2&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$infs</span> <span class="keyword">in</span></span><br><span class="line">US)</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\e[31m Current loginusr is:\t <span class="variable">$US</span> \e[0m&quot;</span></span><br><span class="line">;;</span><br><span class="line">HS)</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\e[34m Current hostname is:\t <span class="variable">$HS</span> \e[0m&quot;</span></span><br><span class="line">;;</span><br><span class="line">WD)</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\e[32m Current workdir  is:\t <span class="variable">$WD</span> \e[0m&quot;</span></span><br><span class="line">;;</span><br><span class="line">IP)</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\e[36m Current ipaddres is:\t <span class="variable">$IP</span> \e[0m&quot;</span></span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;choice only: US|HS|WD|IP......&#x27;</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><h2 id="猜字游戏"><a href="#猜字游戏" class="headerlink" title="猜字游戏"></a>猜字游戏</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@servera scripts]<span class="comment"># cat guess_v1.sh guess_v2.sh guess_v3.sh guess_v4.sh guess_v5.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">guess=80 <span class="comment">#自定义数字</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&#x27;Please input your num: &#x27;</span> num</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$num</span> -eq <span class="variable">$guess</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> YOU WIN</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> YOU LOSE</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">guess=$[ $RANDOM / 100 ] #生成随机数</span><br><span class="line">read -p &#x27;Please input your num: &#x27; num</span><br><span class="line">if [ $num -eq $guess ]</span><br><span class="line">then</span><br><span class="line">echo YOU WIN</span><br><span class="line">else</span><br><span class="line">echo YOU LOSE</span><br><span class="line">echo $guess</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">guess=$[ $RANDOM / 100 ]</span><br><span class="line">read -p &#x27;Please input your num: &#x27; num</span><br><span class="line">if [ $num -gt $guess ]</span><br><span class="line">then</span><br><span class="line">echo &quot;The num $num is too large......&quot;</span><br><span class="line">echo YOU LOSE</span><br><span class="line">elif [ $num -lt $guess ]</span><br><span class="line">then</span><br><span class="line">echo &quot;The num is too small&quot;</span><br><span class="line">echo YOU LOSE</span><br><span class="line">else</span><br><span class="line">echo YOU WIN</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">guess=$[ $RANDOM / 100 ]</span><br><span class="line">while true  #一直猜，但是猜对了，还是会继续猜</span><br><span class="line">do</span><br><span class="line">read -p &#x27;Please input your num: &#x27; num</span><br><span class="line">if [ $num -gt $guess ]</span><br><span class="line">then</span><br><span class="line">echo &quot;The num $num is too large......&quot;</span><br><span class="line">echo YOU LOSE</span><br><span class="line">elif [ $num -lt $guess ]</span><br><span class="line">then</span><br><span class="line">echo &quot;The num is too small&quot;</span><br><span class="line">echo YOU LOSE</span><br><span class="line">else</span><br><span class="line">echo YOU WIN</span><br><span class="line">fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">升级版</span><br><span class="line">#!/bin/bash</span><br><span class="line">guess=$[ $RANDOM / 100 ]</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">read -p &#x27;Please input your num: &#x27; num</span><br><span class="line">if [ $num -gt $guess ]</span><br><span class="line">then</span><br><span class="line">echo &quot;The num $num is too large......&quot;</span><br><span class="line">echo YOU LOSE</span><br><span class="line">elif [ $num -lt $guess ]</span><br><span class="line">then</span><br><span class="line">echo &quot;The num is too small&quot;</span><br><span class="line">echo YOU LOSE</span><br><span class="line">else</span><br><span class="line">echo YOU WIN</span><br><span class="line">break   #猜对了，就会跳出所有的循环</span><br><span class="line">fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h2 id="课后练习"><a href="#课后练习" class="headerlink" title="课后练习"></a>课后练习</h2><ol><li><p><strong>提示输入一个用户名字,判断该用户是否存在?存在显示其信息(uid gid 家目录 shell),不存在添加该帐号，并赋予密码</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@servera scripts]<span class="comment"># cat panduanusers.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&#x27;Please input your username: &#x27;</span> Uname</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">id</span> <span class="variable">$&#123;Uname&#125;</span> &amp;&gt; /dev/null                        <span class="comment">#id输入的用户，返回值为0就then</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;Uname&#125;</span> is exist...&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Now start print <span class="variable">$&#123;Uname&#125;</span> information...&quot;</span></span><br><span class="line">grep ^<span class="variable">$&#123;Uname&#125;</span> /etc/passwd|<span class="built_in">cut</span> -d <span class="string">&quot;:&quot;</span> -f 3,4,6,7</span><br><span class="line"><span class="keyword">else</span>                                               <span class="comment">#id输入的用户，返回值非0就执行下面的一堆命令</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;Uname&#125;</span> is not exist...&quot;</span></span><br><span class="line">useradd <span class="variable">$&#123;Uname&#125;</span> </span><br><span class="line"><span class="built_in">echo</span> redhat|passwd --stdin <span class="variable">$&#123;Uname&#125;</span></span><br><span class="line">grep ^<span class="variable">$&#123;Uname&#125;</span> /etc/passwd|<span class="built_in">cut</span> -d <span class="string">&quot;:&quot;</span> -f 3,4,6,7</span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><strong>提示输入文件路径及文件名,判断该文件是否存在，且是普通文件,存在显示其详细信息,不存在创建该文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@servera scripts]<span class="comment"># cat panduanfile.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&#x27;Please input your filename: &#x27;</span> FN</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="variable">$FN</span> ]        <span class="comment">#同上，先去判断这个文件存在，且是个普通文件</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;FN&#125;</span> is exist...&quot;</span></span><br><span class="line"><span class="built_in">ls</span> -l <span class="variable">$FN</span></span><br><span class="line"><span class="keyword">else</span>                 <span class="comment">#条件不满足，执行的语句</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;FN&#125;</span> is not exist...&quot;</span></span><br><span class="line"><span class="built_in">touch</span> <span class="variable">$FN</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></li><li><p><strong>要求两种方法实现</strong>。</p><p>在 servera 上创建一个名为“&#x2F;root&#x2F;foo.sh”的脚本，让其提供下列特性：<br>□ 当运行“&#x2F;root&#x2F;foo.sh redhat”，输出为“fedora”<br>□ 当运行“&#x2F;root&#x2F;foo.sh fedora”，输出为“redhat”<br>□ 当没有任何参数或者参数不是“redhat”或者“fedora”时，其错误输出产生以下的信息：“&#x2F;root&#x2F;foo.sh<br>redhat|fedora”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@servera bin]<span class="comment"># vim /root/foo.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$1</span> == redhat ]]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> fedora</span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$1</span> == fedora ]]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> redhat</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">redhat)</span><br><span class="line"><span class="built_in">echo</span> fedora</span><br><span class="line">;;</span><br><span class="line">fedora)</span><br><span class="line"><span class="built_in">echo</span> redhat</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">ehco <span class="string">&quot;/root/foo/sh redhat|fedora&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure></li><li><p><strong>servera 上创建一个脚本，名为“&#x2F;root&#x2F;batchusers”，此脚本能实现为系统 servera 创建本地用户，并且这些用户的用户名来自一个包含用户名列表的文件。同时满足下列要求：</strong><br>□ 此脚本要求提供一个参数，此参数就是包含用户名列表的文件<br>□ 如果没有提供参数，此脚本应该给出下面的提示信息“Usage: &#x2F;root&#x2F;batchusers userfile”然后退出并返回相应的值<br>□ 如果提供一个不存在的文件名，此脚本应该给出下面的提示信息“Input file not found”然后退出并返回相应的值<br>□ 创建的用户登录 shell 为“&#x2F;bin&#x2F;false”<br>□ 此脚本需要为用户设置密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -eq 0 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&#x27;Usage: batcherusers.sh userfile&#x27;</span></span><br><span class="line">        <span class="built_in">exit</span> 100</span><br><span class="line"><span class="keyword">elif</span> [ ! -f <span class="variable">$1</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&#x27;Input file not found&#x27;</span></span><br><span class="line">        <span class="built_in">exit</span> 200</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&#x27;Now start add users......&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> $(<span class="built_in">cat</span> <span class="variable">$1</span>)  <span class="comment">#  $() 这个是命令替换</span></span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">                useradd -s /bin/false <span class="variable">$i</span></span><br><span class="line">                <span class="built_in">echo</span> redhat|passwd --stdin <span class="variable">$i</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="函数function"><a href="#函数function" class="headerlink" title="函数function"></a>函数function</h2><ul><li><p>作用：将一个已经写好的脚本封装好，当前不执行，可以按需在不同情况下执行，也可以多次引用</p></li><li><p>特点：先定义后引用，不引用不执行</p><blockquote><p>是因为shell的读取顺序是由上到下，必须在前面定义好函数才可以在下面执执行</p></blockquote></li><li><p>构建：将已经写好的脚本文件依照如下方式定义即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> 函数名（）&#123;</span><br><span class="line">脚本内容</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用：在定义过函数后，直接使用函数名可执行函数内的脚本</p></li><li><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@servera scripts]<span class="comment"># cat batchusers_v1.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">useradd</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -eq 0 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;Usage: batcherusers.sh userfile&#x27;</span></span><br><span class="line"><span class="built_in">exit</span> 100</span><br><span class="line"><span class="keyword">elif</span> [ ! -f <span class="variable">$1</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;Input file not found&#x27;</span></span><br><span class="line"><span class="built_in">exit</span> 200</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;Now start add users......&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;di san bu&#x27;</span> </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> zhangsan lisi wangwu</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">useradd -s /bin/false <span class="variable">$i</span></span><br><span class="line"><span class="built_in">echo</span> redhat|passwd --stdin <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;######################&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$1</span></span><br><span class="line">useradd <span class="variable">$1</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;######################&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$1</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@servera bin]<span class="comment"># cat guess_v5.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">guess_number</span></span>()&#123;</span><br><span class="line">clear</span><br><span class="line">num=$[ RANDOM / 100 ]</span><br><span class="line"><span class="comment">#count=0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&#x27;Please input your number: &#x27;</span> number</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$number</span></span><br><span class="line"><span class="built_in">let</span> count+=1</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$number</span> -lt <span class="variable">$num</span> ]</span><br><span class="line"><span class="keyword">then</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;your guess number too small&#x27;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$number</span> -gt <span class="variable">$num</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;your guess number too big&#x27;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> YOU WIN</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;Guess number is: &#x27;</span> <span class="variable">$count</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line">guess_number</span><br></pre></td></tr></table></figure></li></ul><h2 id="grep-awk-sed三剑客-扩展-（待完善）"><a href="#grep-awk-sed三剑客-扩展-（待完善）" class="headerlink" title="grep|awk|sed三剑客^扩展^（待完善）"></a>grep|awk|sed三剑客^扩展^（待完善）</h2><h3 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h3><p><code>-q</code>静默模式，不显示过滤结果</p><blockquote><p> 只需要执行后的返回值，有过滤结果为0，没有过滤结果为其他，一般用于脚本中的判断</p></blockquote><p><code>-w</code>精确匹配单词</p><p><code>-n</code>添加行号</p><p><code>-v</code>取反</p><p><code>-v ^$</code>过滤空行</p><p><code>-i</code>忽略大小写</p><p><code>-A 数字</code>前n行</p><p><code>-B 数字</code>后n行</p><p><code>-C 数字</code>前后各n行</p><p><code>-e</code>多条件</p><p><code>-E</code>支持正则表达式,等同于<code>egrep</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cp /etc/passwd .</span></span><br><span class="line"><span class="comment"># grep root passwd</span></span><br><span class="line"><span class="comment"># grep ^root passwd</span></span><br><span class="line"><span class="comment"># grep nologin$ passwd</span></span><br><span class="line"><span class="comment"># -w 精确匹配单词</span></span><br><span class="line"><span class="comment"># grep -w passwd</span></span><br><span class="line"><span class="comment"># grep -n passwd</span></span><br><span class="line"><span class="comment"># grep -n root passwd</span></span><br><span class="line"><span class="comment"># cat /etc/selinux/config</span></span><br><span class="line"><span class="comment"># grep ^$ /etc/selinux/config  #过滤出空行</span></span><br><span class="line"><span class="comment"># grep -n ^$ /etc/selinux/config #加行号</span></span><br><span class="line"><span class="comment"># -v 取反</span></span><br><span class="line"><span class="comment"># grep -n -v ^$ /etc/selinux/config #不要空行，并加上行号</span></span><br><span class="line"><span class="comment"># vim passwd</span></span><br><span class="line"><span class="comment"># -i 忽略大小写ignore</span></span><br><span class="line"><span class="comment"># grep -i root passwd </span></span><br><span class="line"><span class="comment"># grep -i mail passwd</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># grep -A 3  mail passwd #关键字后三行after</span></span><br><span class="line"><span class="comment"># grep -B 3  mail passwd #关键字前三行before</span></span><br><span class="line"><span class="comment"># grep -C 3  mail passwd #关键字上下三行</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -e 多条件</span></span><br><span class="line"><span class="comment"># grep -e root -e 0 passwd</span></span><br><span class="line"><span class="comment"># egrep -e root -e 0 passwd</span></span><br><span class="line"><span class="comment"># 支持正则表达式</span></span><br><span class="line"><span class="comment"># grep -E &#x27;root|0&#x27; passwd</span></span><br><span class="line"><span class="comment"># man grep</span></span><br></pre></td></tr></table></figure><h3 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h3><h3 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h3><p>三剑客之一</p><p>grep awk（一门语言）| python |判断、循环、变量，，，，文本数据 报表 处理</p><p>sed 流编辑器 vi 交互式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir test</span></span><br><span class="line"><span class="comment"># cd test/</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># cp /etc/passwd .</span></span><br><span class="line"><span class="comment"># cp /etc/selinux/config .</span></span><br><span class="line"><span class="comment"># sed &#x27;1p&#x27; passwd</span></span><br><span class="line"><span class="comment"># sed -n &#x27;1p&#x27; passwd</span></span><br><span class="line"><span class="comment"># grep SEL config</span></span><br><span class="line"><span class="comment"># grep -i seli config</span></span><br><span class="line"><span class="comment"># sed &#x27;s/SELINUX=enforcing/SELINUX=disabled/&#x27; config</span></span><br><span class="line"><span class="comment"># grep -i seli config</span></span><br><span class="line"><span class="comment"># sed -i &#x27;s/SELINUX=enforcing/SELINUX=disabled/&#x27; config</span></span><br><span class="line"><span class="comment"># grep -i seli config</span></span><br><span class="line"><span class="comment"># grep -i seli config</span></span><br><span class="line"><span class="comment"># sed -i &#x27;/^SELINUXTYPE=/d&#x27; config</span></span><br><span class="line"><span class="comment"># grep -i seli config</span></span><br><span class="line"><span class="comment"># sed -i &#x27;/^SELINUX=/a EASTHOME&#x27; config</span></span><br><span class="line"><span class="comment"># grep -i seli config</span></span><br><span class="line"><span class="comment"># vim config</span></span><br><span class="line"><span class="comment"># grep -A 1 -i seli config</span></span><br><span class="line"><span class="comment"># sed -i &#x27;/^EAST/&#x27; config</span></span><br><span class="line"><span class="comment"># grep -A 1 -i seli config</span></span><br><span class="line"><span class="comment"># sed -i &#x27;/^SELINUX=/i EASTHOME&#x27; config</span></span><br><span class="line"><span class="comment"># grep -C 1 -i seli config</span></span><br><span class="line"><span class="comment"># sed -i &#x27;/^SELINUX=/c EASTHOME&#x27; config</span></span><br><span class="line"><span class="comment"># grep -C 1 -i seli config</span></span><br></pre></td></tr></table></figure><h2 id="shell支持的正则表达式-扩展"><a href="#shell支持的正则表达式-扩展" class="headerlink" title="shell支持的正则表达式^扩展^"></a>shell支持的正则表达式^扩展^</h2><p>未完成</p><h2 id="shell中如何区分字符串，数字等不同数据类型-扩展"><a href="#shell中如何区分字符串，数字等不同数据类型-扩展" class="headerlink" title="shell中如何区分字符串，数字等不同数据类型^扩展^"></a>shell中如何区分字符串，数字等不同数据类型^扩展^</h2><p>未完成</p><h1 id="第二章-计划任务"><a href="#第二章-计划任务" class="headerlink" title="第二章 计划任务"></a>第二章 计划任务</h1><h2 id="at临时"><a href="#at临时" class="headerlink" title="at临时"></a>at<del>临时</del></h2><p><strong>添加一个计划的过程：</strong></p><p>​<code>at 选项 时间</code>  <kbd>Enter</kbd></p><p>​进入交互式界面：</p><p>​<code>at&gt; 输入命令</code>  <kbd>Enter</kbd></p><p>​<kbd>ctrl</kbd> <code>d</code>完成</p><table><thead><tr><th><strong>选项</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td>-m</td><td>当指定的任务被完成后，将给用户发送邮件，即使没有标准输出</td></tr><tr><td>-I</td><td>atq的别名,查询当前待执行计划</td></tr><tr><td>-d</td><td>atrm的别名，删除</td></tr><tr><td>-v</td><td>显示任务将被执行的时间</td></tr><tr><td>-c</td><td>打印任务的内容到标准输出（通过任务编号显示指定的任务，从标准输入读取到的任务会在文件的倒数第二行）</td></tr><tr><td>-V</td><td>显示版本信息</td></tr><tr><td>-q &lt;队列&gt;</td><td>使用指定的队列</td></tr><tr><td>-f &lt;文件&gt;</td><td>从指定文件读入任务而不是从标准输入读入</td></tr><tr><td>-t &lt;时间参数&gt;</td><td>以时间参数的形式提交要运行的任务,<code>最常用，精确设置</code></td></tr><tr><td>–help</td><td>帮助文件</td></tr></tbody></table><p>服务：<code>atd.service</code></p><p>使用前需启用</p><p>有变动需重载（启)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -qa|grep at</span></span><br><span class="line"><span class="comment"># rpm -qa|grep ^at</span></span><br><span class="line"><span class="comment"># rpm -q at</span></span><br><span class="line"><span class="comment"># rpm -ql at|grep service</span></span><br><span class="line"><span class="comment"># systemctl status atd.service</span></span><br><span class="line"><span class="comment"># systemctl is-enabled atd.service</span></span><br><span class="line"><span class="comment"># atq</span></span><br><span class="line"><span class="comment"># at -l</span></span><br><span class="line"><span class="comment"># at --help</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定三天后下午五点执行计划</span></span><br><span class="line"><span class="comment"># at 5pm+3 days</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定明天18点执行计划</span></span><br><span class="line"><span class="comment"># at 18:00 tomorrow</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前计划</span></span><br><span class="line"><span class="comment"># atq</span></span><br><span class="line"><span class="comment"># at -l</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看编号为1的计划的内容</span></span><br><span class="line"><span class="comment"># at -c 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定2021年08月01日12时00分执行计划</span></span><br><span class="line"><span class="comment"># at -t &#x27;202108011200&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定从现在开始过5分钟后执行任务（不会精确到秒，只能读到分，所以其实不足5分）</span></span><br><span class="line"><span class="comment"># at now +5min</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除编号为5的计划</span></span><br><span class="line"><span class="comment"># at -d 5</span></span><br><span class="line"><span class="comment"># atrm 5</span></span><br></pre></td></tr></table></figure><h2 id="crontab-考-周期"><a href="#crontab-考-周期" class="headerlink" title="crontab^考^周期"></a>crontab^考^<del>周期</del></h2><ul><li><p><strong>配置文件</strong><code>/etc/crontab</code>，使用工具时一般不在写计划内容时指定用户(<code>-u</code>)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> *       *       *       *       *      user-namecommand</span><br><span class="line"> 分    时      日    月      周   用户名   任务内容</span><br><span class="line">0-59    0-23    1-31    1-12    0-7</span><br></pre></td></tr></table></figure><p><strong>每一位上使用相同的语法规则：</strong></p><p><code>*</code>不指定，则为所有</p><p><code>,</code>间隔，不连续的多个时间点</p><p><code>-</code>范围，从连续的一段时间内</p><p><code>/</code>频率，每过n执行一次</p></li><li><p><strong>crontab工具</strong></p><p><code>-e</code>编辑（如果为空则创建）计划任务<strong>格式内容为五个时间和一个命令</strong><br><code>-u</code>指定用户  crontab -u student -e<strong>为用户student创建（编辑）计划</strong><br><code>-r</code>删除不加参数默认只删自己的计划，而不是全部<br><code>-l</code>列出不指定用户默认只列出当前用户的计划任务</p></li><li><p>服务<code>crond.service</code>，排错的一部分，确认服务是否启用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status <span class="built_in">enable</span> --now crond.service </span><br></pre></td></tr></table></figure><blockquote><p>记得启服务</p></blockquote></li><li><p>用户作业配置文件的存放目录<code>/var/spool/cron</code><del>比较特殊</del></p><p><strong>每个有待执行计划的用户都在该目录下有对应的一个配置文件</strong></p><p><code>crontab -l</code> 查看的内容与该目录下的文件一致，</p><blockquote><p> 在这个目录里，手动编辑配置文件，<code>crontab -l</code>也能查到，证明可以通过在<code>/var/spool/cron</code>下添加<strong>以不同用户名命名</strong>的配置文件来达到使用<code>crontab</code>工具一样的效果</p></blockquote></li><li><p>**<u>系统作业</u>**配置文件的存放目录<code>/etc/cron.*/</code>，一般不手动更改</p><blockquote><p>即使在此目录下添加用户自定义的配置文件，也不会生效</p></blockquote></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 示例：</span></span><br><span class="line"><span class="bullet"> 1.</span> 在特定时间执行计划任务，如每天凌晨1点执行</span><br><span class="line">  0 1 <span class="emphasis">* *</span> <span class="emphasis">* /path/to/script.sh</span></span><br><span class="line"><span class="emphasis">   </span></span><br><span class="line"><span class="emphasis">  2. 每天运行两次计划任务，如设置每天早上10点和晚上10点执行定时任务</span></span><br><span class="line"><span class="emphasis">  0 10,22 *</span> <span class="emphasis">* *</span> /path/to/script.sh</span><br><span class="line">   </span><br><span class="line"><span class="bullet">  3.</span> 在某天的某个时刻执行计划任务，如每个周日的凌晨1点执行备份任务</span><br><span class="line">  0 1 <span class="emphasis">* *</span> sun /path/to/script.sh</span><br><span class="line">  或者</span><br><span class="line">  0 1 <span class="emphasis">* *</span> 0 /path/to/script.sh</span><br><span class="line">  或者</span><br><span class="line">  0 1 <span class="emphasis">* *</span> 7 /path/to/script.sh</span><br><span class="line">  </span><br><span class="line"><span class="bullet">  4.</span> 每分钟执行</span><br><span class="line"><span class="bullet">  *</span> <span class="emphasis">* *</span> <span class="emphasis">* *</span> /path/to/script.sh</span><br><span class="line">  </span><br><span class="line"><span class="bullet">  5.</span> 每5分钟执行</span><br><span class="line">  <span class="emphasis">*/5 *</span> <span class="emphasis">* *</span> <span class="emphasis">* /path/to/script.sh</span></span><br><span class="line"><span class="emphasis">  </span></span><br><span class="line"><span class="emphasis">  6. 每1小时执行</span></span><br><span class="line"><span class="emphasis">  0 *</span> <span class="emphasis">* *</span> <span class="emphasis">* /path/to/script.sh</span></span><br><span class="line"><span class="emphasis">  或者</span></span><br><span class="line"><span class="emphasis">  @hourly /path/to/script.sh</span></span><br><span class="line"><span class="emphasis">  </span></span><br><span class="line"><span class="emphasis">  7. 每2小时执行</span></span><br><span class="line"><span class="emphasis">  0 *</span>/2 <span class="emphasis">* *</span> <span class="emphasis">* /path/to/script.sh</span></span><br><span class="line"><span class="emphasis">   </span></span><br><span class="line"><span class="emphasis">  8. 每天执行一次计划任务，如每天0点执行（天计划）</span></span><br><span class="line"><span class="emphasis">  0 0 *</span> <span class="emphasis">* *</span> /path/to/script.sh</span><br><span class="line">  或者</span><br><span class="line">  @daily /path/to/script.sh</span><br><span class="line">  </span><br><span class="line"><span class="bullet">  9.</span> 每几天执行任务，如每2天0点执行一次</span><br><span class="line">  0 0 <span class="emphasis">*/2 *</span> <span class="emphasis">* /path/to/script.sh</span></span><br><span class="line"><span class="emphasis">   </span></span><br><span class="line"><span class="emphasis">  10. 每周何时执行，如每周二和每周四13点执行</span></span><br><span class="line"><span class="emphasis">  0 13 *</span> <span class="emphasis">* tue,thu /path/to/script.sh</span></span><br><span class="line"><span class="emphasis">  或者</span></span><br><span class="line"><span class="emphasis">  0 13 *</span> <span class="emphasis">* 2，4 /path/to/script.sh</span></span><br><span class="line"><span class="emphasis">  11. 每周执行一次，如每周日0点执行（周计划）</span></span><br><span class="line"><span class="emphasis">  @weekly /path/to/script.sh</span></span><br><span class="line"><span class="emphasis">  </span></span><br><span class="line"><span class="emphasis">  12. 每个月何时执行，如每个月15号早上11点执行计划任务</span></span><br><span class="line"><span class="emphasis">  0 11 15 *</span> <span class="emphasis">* /path/to/script.sh</span></span><br><span class="line"><span class="emphasis">   </span></span><br><span class="line"><span class="emphasis">  13. 每个月执行一次，如每个月1号中午12点执行</span></span><br><span class="line"><span class="emphasis">  @monthly /path/to/script.sh</span></span><br><span class="line"><span class="emphasis">   </span></span><br><span class="line"><span class="emphasis">  14. 选择具体月份执行任务</span></span><br><span class="line"><span class="emphasis">  0 0 *</span> jan,apr,jun <span class="emphasis">* /path/to/script.sh</span></span><br><span class="line"><span class="emphasis">  或</span></span><br><span class="line"><span class="emphasis">  0 0 *</span> 1，4，6 <span class="emphasis">* /path/to/script.sh</span></span><br><span class="line"><span class="emphasis">  15. 每次重启系统之后执行任务</span></span><br><span class="line"><span class="emphasis">  @reboot /path/to/script.sh</span></span><br><span class="line"><span class="emphasis">   </span></span><br><span class="line"><span class="emphasis">  16. 在计划任务中发送电子邮件</span></span><br><span class="line"><span class="emphasis">  MAILTO=&quot;username&quot;</span></span><br><span class="line"><span class="emphasis">  1 1 *</span> <span class="emphasis">* *</span> /path/to/script.sh</span><br><span class="line">   </span><br><span class="line"><span class="bullet">  17.</span> 使用其他shell来执行计划任务</span><br><span class="line">  SHELL=/bin/bash</span><br><span class="line">  1 1 <span class="emphasis">* *</span> <span class="emphasis">* /path/to/script.sh</span></span><br><span class="line"><span class="emphasis">   </span></span><br><span class="line"><span class="emphasis">  18. 在计划任务中使用环境变量（没见过）</span></span><br><span class="line"><span class="emphasis">  PATH=/sbin:/bin:/usr/sbin:/usr/bin </span></span><br><span class="line"><span class="emphasis">  1 1 *</span> <span class="emphasis">* *</span> /path/to/script.sh</span><br><span class="line">  </span><br><span class="line"><span class="bullet">  19.</span> 可以在计划任务中自定义目录，如脚本里面的根目录为HOME目录，那么可以设置HOME目录为根目录</span><br><span class="line">  HOME=/</span><br><span class="line">  1 1 <span class="emphasis">* *</span> <span class="emphasis">* /path/to/script.sh</span></span><br><span class="line"><span class="emphasis">   </span></span><br><span class="line"><span class="emphasis">  20. 每秒执行一次计划任务</span></span><br><span class="line"><span class="emphasis">  cron的时间不支持秒级，不可以按秒来设置计划任务</span></span><br></pre></td></tr></table></figure><h2 id="临时文件管理-不考-非重"><a href="#临时文件管理-不考-非重" class="headerlink" title="临时文件管理^不考,非重^"></a>临时文件管理^不考,非重^</h2><p><strong>工具</strong><code>systemd-tmpfiles</code></p><p><strong>手册</strong><code>man 5 tmpfiles.d</code></p><p><strong>服务</strong><code>systemd-tmpfiles-setup.service</code>，该服务默认disabled，且无法enable</p><p><strong>配置文件：决定了不同存放位置下，临时文件的权限，属主属组，过期时间</strong></p><ul><li><p>优先：</p><p><code>/etc/tmpfiles.d/*.conf</code></p></li><li><p>管理员自定义临时位置</p><p><code>/run/tmpfiles.d/*.conf</code>看不懂</p><p><code>/usr/lib/tmpfiles.d/*.conf</code> 该目录下定义了许多临时文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@servera ~]# ls /usr/lib/tmpfiles.d/</span><br><span class="line">cloud-init.conf         libstoragemgmt.conf  selinux-policy.conf</span><br><span class="line">cockpit-tempfiles.conf  lvm2.conf            setroubleshoot.conf</span><br><span class="line">cryptsetup.conf         man-db.conf          subscription-manager.conf</span><br><span class="line">dbus.conf               mdadm.conf           sudo.conf</span><br><span class="line">dnf.conf                openssh.conf         systemd.conf</span><br><span class="line">etc.conf                pam.conf             systemd-nologin.conf</span><br><span class="line">home.conf               portables.conf       tmp.conf</span><br><span class="line">journal-nocow.conf      rpcbind.conf         tuned.conf</span><br><span class="line">legacy.conf             rpm.conf             var.conf</span><br><span class="line">libselinux.conf         samba.conf           x11.conf</span><br></pre></td></tr></table></figure></li><li><p>示例：**&#x2F;usr&#x2F;lib&#x2F;tmpfiles.d&#x2F;tmp.conf** 中</p><p>标注了<code>/tmp</code>下的文件：权限为 1777 root root 10d（10天后被删除）</p><p><code>/var/tmp</code>中的权限为 1777 root root 30d（30天后被删除）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Clear tmp directories separately, to make them easier to override</span></span><br><span class="line">q /tmp 1777 root root 10d</span><br><span class="line">q /var/tmp 1777 root root 30d</span><br></pre></td></tr></table></figure></li><li><p>通过修改配置文件<code>/usr/lib/tmpfiles.d/*.conf</code>，自定义临时文件属性</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 清理临时文件</span></span><br><span class="line"><span class="section"># 创建一个存放临时文件的目录，并且设置相应权限/run/momentary 0700 root root</span></span><br><span class="line"><span class="section"># vim /etc/tmpfiles.d/momentary.conf</span></span><br><span class="line">d /run/momentary 0700 root root 30s</span><br><span class="line"><span class="section"># 创建存放临时文件目录</span></span><br><span class="line"><span class="section"># systemd-tmpfiles --create /etc/tmpfiles.d/momentary.conf </span></span><br><span class="line"><span class="section"># ll /run/momentary/ -d n</span></span><br><span class="line">drwx------. 2 root root 40 Mar  8 15:08 /run/momentary/</span><br><span class="line"><span class="section"># 在目录中创建一个文件叫做mom.txt，此文件模拟临时文件</span></span><br><span class="line"><span class="section"># touch /run/momentary/mom.txt</span></span><br><span class="line"><span class="section"># sleep 30</span></span><br><span class="line"><span class="section"># ll /run/momentary/mom.txt </span></span><br><span class="line">-rw-r--r--. 1 root root 0 Mar  8 15:08 /run/momentary/mom.txt</span><br><span class="line"><span class="section"># 输入清除临时文件命令，清除所有的临时文件</span></span><br><span class="line"><span class="section"># systemd-tmpfiles --clean /etc/tmpfiles.d/momentary.conf </span></span><br><span class="line"><span class="section"># ll /run/momentary/mom.txt </span></span><br></pre></td></tr></table></figure></li></ul><h2 id="自动清理临时文件的脚本并做成计划任务"><a href="#自动清理临时文件的脚本并做成计划任务" class="headerlink" title="自动清理临时文件的脚本并做成计划任务"></a>自动清理临时文件的脚本并做成计划任务</h2><p><code>-exec command &#123;&#125; \;</code>和<code>xargs command</code>都可以接在命令后直接用</p><blockquote><p><code>xargs command</code>不需要写把前面的输出结果作为参数</p></blockquote><p>每天0点 删除30天以前的文件</p><blockquote><p>若有需求，死记定位多少天以前的文件用<code>mtime</code>查找</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@servera ~] vim cleandata.sh </span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 找/tmp下，modifytime在30天以前的普通文件，删掉</span></span><br><span class="line">find /tmp/ -mtime +30 -<span class="built_in">type</span> f -name <span class="string">&#x27;*&#x27;</span> -<span class="built_in">exec</span> <span class="built_in">rm</span> -rf &#123;&#125; \;</span><br><span class="line">或者</span><br><span class="line">find /tmp/ -mtime +30 -<span class="built_in">type</span> f -name <span class="string">&#x27;*&#x27;</span> | xargs <span class="built_in">rm</span> -rf</span><br><span class="line"></span><br><span class="line">[root@servera ~] <span class="built_in">chmod</span> u+x cleandata.sh</span><br><span class="line"></span><br><span class="line">[root@servera ~] crontab -u root -l</span><br><span class="line">00 ***/root/cleandata.sh &amp;&gt; /dev/null</span><br></pre></td></tr></table></figure><h1 id="第三章-调优系统性-考-傻瓜式"><a href="#第三章-调优系统性-考-傻瓜式" class="headerlink" title="第三章 调优系统性^考^傻瓜式"></a>第三章 调优系统性^考^<del>傻瓜式</del></h1><h2 id="方案（手册提示）"><a href="#方案（手册提示）" class="headerlink" title="方案（手册提示）"></a>方案（手册提示）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Avaiable profiles:</span><br><span class="line">- balanced                    - General non-specialized tuned profile</span><br><span class="line">- desktop                     - Optimize for the desktop use-case</span><br><span class="line">- latency-performance         - Optimize for deterministic performance at the cost of increased power consumption</span><br><span class="line">- network-latency             - Optimize for deterministic performance at the cost of increased power consumption, focused on low latency network performance</span><br><span class="line">- network-throughput          - Optimize for streaming network throughput, generally only necessary on older CPUs or 40G+ networks</span><br><span class="line">- powersave                   - Optimize for low power consumption</span><br><span class="line">- throughput-performance      - Broadly applicable tuning that provides excellent performance   across a variety of common server workloads</span><br><span class="line">- virtual-guest               - Optimize for running inside a virtual guest</span><br><span class="line">- virtual-host                - Optimize for running KVM guests</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">throughput-performance (侧重于吞吐量)</span><br><span class="line">latency-performance (侧重于低延迟)</span><br><span class="line">network-throughput (侧重于网络吞吐量)</span><br><span class="line">network-latency (侧重于更低的网络延迟)</span><br><span class="line">virtual-host (侧重于优化虚拟主机)宿主机使用</span><br><span class="line">virtual-guest (侧重于优化虚拟客户机)客户机使用</span><br></pre></td></tr></table></figure><h2 id="工具调优tuned-adm"><a href="#工具调优tuned-adm" class="headerlink" title="工具调优tuned-adm"></a>工具调优<code>tuned-adm</code></h2><p><strong>服务</strong><code>tuned.service</code></p><p><code>tuned-adm</code></p><p>​<code>active</code>查看当前生效的方案</p><p>​<code>list</code> 查看可选项</p><p>​<code>off</code>关闭</p><p>​<code>profile</code> 加载（修改为）</p><p>​<code>recommend</code>推荐</p><p>​<code>verify</code>验证调整完成后是否与效果一致</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum list|grep tuned</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm -q tuned.noarch</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl status tuned.service</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl is-enabled tuned.service</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tuned-adm active</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tuned-adm list</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tuned</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tuned-adm recommend</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tuned-adm profile virtual-guest</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tuned-adm active</span></span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y tuned</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl status tuned</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl <span class="built_in">enable</span> --now tuned</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl is-enabled tuned</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tuned-adm list</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tuned-adm recommend   查看系统推荐的</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tuned-adm profile virtual-guest 修改优化方案为virtual-guest</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tuned-adm off 关闭优化</span></span><br></pre></td></tr></table></figure><h2 id="通过web图形界面调优（cockpit）"><a href="#通过web图形界面调优（cockpit）" class="headerlink" title="通过web图形界面调优（cockpit）"></a>通过web图形界面调优（cockpit）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dnf search cockpit</span></span><br><span class="line"><span class="comment"># dnf -y install cockpit</span></span><br><span class="line"><span class="comment"># systemctl list-unit-files | grep cock</span></span><br><span class="line"><span class="comment"># 启用</span></span><br><span class="line"><span class="comment"># systemctl enable cockpit.socket</span></span><br><span class="line"><span class="comment"># 查找cockpit监听的端口号为9090</span></span><br><span class="line"><span class="comment"># ss -antup|grep cock</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 防火墙放行并重载</span></span><br><span class="line">firewall-cmd --permanent --add-port=9090/tcp</span><br><span class="line">firewall-cmd --reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在浏览器里访问localhost:9090</span></span><br><span class="line"><span class="comment"># 使用该机器的root登录</span></span><br></pre></td></tr></table></figure><h2 id="进程优先级管理理解即可"><a href="#进程优先级管理理解即可" class="headerlink" title="进程优先级管理理解即可"></a>进程优先级管理<del>理解即可</del></h2><p>参考124 进程管理</p><ul><li><p>修改nice值</p><p><code>top</code>中<kbd>r</kbd>，</p><p><code>renice -n 数 pid</code> 在命令行中修改</p><p><code>nice -n 数 command</code>启动命令时指定优先级</p></li></ul><h1 id="第四章-ACL访问控制列表"><a href="#第四章-ACL访问控制列表" class="headerlink" title="第四章 ACL访问控制列表"></a>第四章 ACL访问控制列表</h1><h2 id="ACL权限-考"><a href="#ACL权限-考" class="headerlink" title="ACL权限^考^"></a>ACL权限^考^</h2><ul><li><strong>目的是为文件定义单个u,g的权限</strong></li></ul><p><code>getfacl</code>  <code>file</code>  查看file的ACL权限</p><p>​<code>-R</code><code>dir</code> 级联查看(查看子文件)</p><hr><p>​<code>-Rm</code>  <code>内容</code>  <code>dir</code>对目录级联修改（对每个子文件操作,可以get也可以set）</p><p><code>setfacl</code> <code>-m</code> <code>u:user:perm</code>  <code>file</code>修改特殊 用户</p><p>​<code>g:group:perm</code>  组</p><p>​<code>m::perm</code> <code>file</code>修改mask值</p><hr><p>​<code>-x</code><code>u:user</code>   <code>file</code>删除单个 用户</p><p>​<code>g:group</code>   组</p><p>​<code>-b</code>  <code>file</code>删除全部ACL权限</p><ul><li><p><code>-R</code>（级联）和<code>目录/*</code>的区别：<code>目录/*</code>只能对一层子目录有效，<code>-R</code>可以对所有子目录生效</p></li><li><p>修改用户或组的权限时，如果不指定用户（<code>u::perm</code>）或组（<code>g::perm</code>），则相当于修改文件的属主（u）和属组（g）</p></li><li><p>mask的作用是限制所有用户或组的权限，任何用户或组的权限最终的实际的权限是通过与mask进行与运算得到的结果，即权限最大不会超过mask值</p><ul><li>mask默认为rwx（即不影响u和g的权限），如果不刻意指定，他会包含已经出现的所有权限（最大权限）。比如所有出现的权限只有r和w没有x，则mask也默认为rw，若已经在不同位置分别出现了rwx，则mask默认为rwx。在指定了mask值后，该条件不成立</li><li>人为修改mask，通过与运算计算实际权限的范围只包括指定的用户或组，不会修改ugo的权限，此mask非彼mask</li><li>与运算的方式：都有则有，都没则没，混合也没（总结为，mask和特殊用户|组都有的权限才会生效）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mask权限</span><br><span class="line">A    B     and </span><br><span class="line">r    rr</span><br><span class="line">r    -      -</span><br><span class="line">-    r      -</span><br><span class="line">-    -      -</span><br></pre></td></tr></table></figure></li><li><p>通过以下命令可以实现类似于chmod的功能（即不指定内容则默认为拥有者|组）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 修改u</span><br><span class="line">setfacl -m u::r myfile</span><br><span class="line"># 修改g</span><br><span class="line">setfacl -m g::rwx myfile</span><br><span class="line"># 修改o</span><br><span class="line">setfacl -m o::x myfile</span><br><span class="line"># 修改mask</span><br><span class="line">setfacl -m m::rwx myfile</span><br></pre></td></tr></table></figure></li><li><p>man手册中的示例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">EXAMPLES</span><br><span class="line">       Granting an additional user read access</span><br><span class="line">              setfacl -m u:lisa:r file</span><br><span class="line">       Revoking  write  access  from all groups and all named users (using the effective</span><br><span class="line">       rights mask)</span><br><span class="line">              setfacl -m m::rx file</span><br><span class="line"></span><br><span class="line">       Removing a named group entry from a file&#x27;s ACL</span><br><span class="line">              setfacl -x g:staff file</span><br><span class="line"></span><br><span class="line">       Copying the ACL of one file to another</span><br><span class="line">              getfacl file1 | setfacl --set-file=- file2</span><br><span class="line"></span><br><span class="line">       Copying the access ACL into the Default ACL</span><br><span class="line">              getfacl --access dir | setfacl -d -M- dir</span><br></pre></td></tr></table></figure></li><li><p><strong>设置ACL默认权限^CA考点，与我CE何干^</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">ACL ENTRIES</span><br><span class="line">       The setfacl utility recognizes the following ACL entry formats  (blanks  inserted</span><br><span class="line">       for clarity):</span><br><span class="line"></span><br><span class="line">       [d[efault]:] [u[ser]:]uid [:perms]</span><br><span class="line">              Permissions  of  a  named  user.  Permissions  of the file owner if uid is</span><br><span class="line">              empty.</span><br><span class="line"></span><br><span class="line">       [d[efault]:] g[roup]:gid [:perms]</span><br><span class="line">              Permissions of a named group. Permissions of the owning group  if  gid  is</span><br><span class="line">              empty.</span><br><span class="line"></span><br><span class="line">       [d[efault]:] m[ask][:] [:perms]</span><br><span class="line">              Effective rights mask</span><br><span class="line"></span><br><span class="line">       [d[efault]:] o[ther][:] [:perms]</span><br><span class="line">              Permissions of others.</span><br></pre></td></tr></table></figure></li></ul><h2 id="备份与恢复"><a href="#备份与恢复" class="headerlink" title="备份与恢复"></a>备份与恢复</h2><ul><li><p>备份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getfacl -R 目录/ &gt; /备份文件名</span><br></pre></td></tr></table></figure></li><li><p>恢复</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setfacl --restore /acl.backup</span><br></pre></td></tr></table></figure></li><li><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rm -rf ./*</span></span><br><span class="line"><span class="comment"># mkdir acldir</span></span><br><span class="line"><span class="comment"># touch acldir/file&#123;1..5&#125;</span></span><br><span class="line"><span class="comment"># getfacl acldir/file&#123;1..5&#125;</span></span><br><span class="line"><span class="comment"># setfacl -Rm u:harry:rwx acldir/</span></span><br><span class="line"><span class="comment"># getfacl acldir/file&#123;1..5&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将一个目录下的所有都重定向到其他</span></span><br><span class="line"><span class="comment"># getfacl -R acldir/ &gt; /acl.backup</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cat /acl.backup</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># setfacl -Rb acldir/</span></span><br><span class="line"><span class="comment"># getfacl -R acldir/</span></span><br><span class="line"><span class="comment"># setfacl --restore /acl.backup  </span></span><br><span class="line"><span class="comment"># 不能补全 你就手写</span></span><br><span class="line"><span class="comment"># getfacl -R acldir/</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="第五章-selinux管理-必须考"><a href="#第五章-selinux管理-必须考" class="headerlink" title="第五章 selinux管理^必须考^"></a>第五章 selinux<strong>管理^必须考^</strong></h1><p><strong>防火墙–&gt;文件系统权限–&gt;服务–&gt;seLinux</strong></p><table><thead><tr><th align="center">ID</th><th></th><th></th><th>SELinux</th><th></th></tr></thead><tbody><tr><td align="center">1</td><td>Filesystem</td><td>chmod, chown, setfacl</td><td>semanage fcontext … restorecon … chcon … touch &#x2F;.autorelabel</td><td>安全上下文</td></tr><tr><td align="center">2</td><td>Service</td><td>vim &#x2F;etc&#x2F;*.conf</td><td>setsebool -P …</td><td>布尔值</td></tr><tr><td align="center">3</td><td>Firewall</td><td>firewall-cmd …</td><td>semanage port …</td><td>端口</td></tr><tr><td align="center">4</td><td>SELinux</td><td>vim &#x2F;etc&#x2F;selinux&#x2F;config</td><td></td><td></td></tr></tbody></table><h2 id="模式与策略"><a href="#模式与策略" class="headerlink" title="模式与策略"></a>模式与策略</h2><ul><li><p>三种模式</p><p>​<code>enforcing</code> 强制，每个受限的进程都必然受限：记录+阻止</p><p>​<code>permissive</code>  宽容，每个受限的进程违规操作不会被禁止，但会被记录于审计日志</p><p>​<code>disabled</code>禁用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">enforceing与permissive相互间的切换不需要重启，其余状态间切换需要重启，因为selinux是整合到内核中的</span><br></pre></td></tr></table></figure></li><li><p>三种策略</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">targeted - Targeted processes are protected,</span><br><span class="line">minimum - Modification of targeted policy. Only selected processes are protected. </span><br><span class="line">mls - Multi Level Security protection.</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">selinux的策略改变后需要重启</span><br></pre></td></tr></table></figure></li></ul><h3 id="切换模式"><a href="#切换模式" class="headerlink" title="切换模式"></a>切换模式</h3><ul><li><p>命令行临时操作</p><p><code>setenforce</code>设置模式</p><p><code>getenforce</code>查看</p><p> 重启后回到原来的模式</p></li><li><p>配置文件永久修改<code>/etc/selinux/config</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This file controls the state of SELinux on the system.</span></span><br><span class="line"><span class="comment"># SELINUX= can take one of these three values:</span></span><br><span class="line"><span class="comment">#     enforcing - SELinux security policy is enforced.</span></span><br><span class="line"><span class="comment">#     permissive - SELinux prints warnings instead of enforcing.</span></span><br><span class="line"><span class="comment">#     disabled - No SELinux policy is loaded.</span></span><br><span class="line"><span class="comment">#SELINUX=enforcing</span></span><br><span class="line">SELINUX=Permissive          <span class="comment">#&lt;---手动修改</span></span><br><span class="line"><span class="comment"># SELINUXTYPE= can take one of these three values:</span></span><br><span class="line"><span class="comment">#     targeted - Targeted processes are protected,</span></span><br><span class="line"><span class="comment">#     minimum - Modification of targeted policy. Only selected processes are protected. </span></span><br><span class="line"><span class="comment">#     mls - Multi Level Security protection.</span></span><br><span class="line">SELINUXTYPE=targeted</span><br></pre></td></tr></table></figure><p>重启后生效</p></li></ul><h2 id="继承特性"><a href="#继承特性" class="headerlink" title="继承特性"></a>继承特性</h2><ul><li><p>一般情况下，目录下的文件会继承目录的安全上下文，有一些特殊情况存在<strong>移动文件导致安全上下文改变而出错</strong>，如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp 替换为目标目录安全上下文</span><br><span class="line">cp -a 保留之前安全上下文</span><br><span class="line">mv 也会保留之前安全上下文</span><br></pre></td></tr></table></figure></li><li><p>查看安全上下文<code>-Z</code></p><p><code>ls -lZ</code> 查看文件的安全上下文</p><p><code>ps -auxZ</code>查看进程的安全上下文</p></li></ul><h2 id="安全上下文"><a href="#安全上下文" class="headerlink" title="安全上下文"></a>安全上下文</h2><p>每个文件、进程和端口都具有特别的安全 标签，称为SELinux的安全上下文</p><p><img src="https://pic1.zhimg.com/80/v2-bb095bfd7450ecbcc799323ef62f66cc_1440w.jpg" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">身份识别（ Identify ）</span><br><span class="line">常见类型</span><br><span class="line">root ：root账户</span><br><span class="line">system_u：系统程序</span><br><span class="line">user_u：使用者账号身份</span><br><span class="line">角色（ role ）</span><br><span class="line">常见类型</span><br><span class="line">object_r：文件或目录等文件资源</span><br><span class="line">system_r：与程序有关</span><br><span class="line">user_r、sysadm_r 与用户有关</span><br></pre></td></tr></table></figure><h3 id="修改安全上下文"><a href="#修改安全上下文" class="headerlink" title="修改安全上下文"></a>修改安全上下文</h3><h4 id="smanage"><a href="#smanage" class="headerlink" title="smanage"></a>smanage</h4><p><code>semanage fcontext --help</code></p><p>  <code>-a, --add</code>              Add a record of the fcontext object type<br>  <code>-d, --delete</code>          Delete a record of the fcontext object type<br>  <code>-m, --modify</code>          Modify a record of the fcontext object type<br>  <code>-l, --list</code>            List records of the fcontext object type</p><p><code>semanage fcontext -a -t type &quot;目录(/.*)?&quot;</code>定义目录的安全上下文标签，通配符(&#x2F;.*)?可以统一设置</p><h4 id="chcon"><a href="#chcon" class="headerlink" title="chcon"></a>chcon</h4><p><code>chcon -t type file|dir</code>对目录和文件都有效</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chcon &lt;选项&gt; &lt;文件或目录 1&gt; [&lt;文件或目录 2&gt;...]</span><br></pre></td></tr></table></figure><p><img src="https://pic4.zhimg.com/80/v2-b24b0c01400339b9a0fa7f23f61c9cb7_1440w.jpg" alt="img"></p><h4 id="restorecon"><a href="#restorecon" class="headerlink" title="restorecon"></a>restorecon</h4><p>把文件或目录的安全上下文恢复到默认值</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">restorecon [选项] &lt;文件或目录 1&gt; [&lt;文件或目录 2&gt;...]</span><br></pre></td></tr></table></figure><p><img src="https://pic2.zhimg.com/80/v2-a479da951cd960c8c0beefe819db4181_1440w.png" alt="img"></p><h3 id="apache服务示例"><a href="#apache服务示例" class="headerlink" title="apache服务示例"></a>apache服务示例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install httpd</span></span><br><span class="line"><span class="comment"># echo $(hostname) &gt; /var/www/html/index.html</span></span><br><span class="line"><span class="comment"># systemctl enable --now httpd</span></span><br><span class="line"><span class="comment"># 本地调通</span></span><br><span class="line"><span class="comment"># curl localhost</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 防火墙放行服务和端口</span></span><br><span class="line"><span class="comment"># firewall-cmd --permanent --add-service=http</span></span><br><span class="line"><span class="comment"># firewall-cmd --list-services</span></span><br><span class="line"><span class="comment"># firewall-cmd --list-ports</span></span><br><span class="line"><span class="comment"># 重启防火墙</span></span><br><span class="line"><span class="comment"># firewall-cmd --reload</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cd /var/www/html/</span></span><br><span class="line"><span class="comment"># ls -ldZ .</span></span><br><span class="line"><span class="comment"># ls -lZ index.html</span></span><br><span class="line"><span class="comment"># getenforce</span></span><br><span class="line"><span class="comment"># chcon -t default_t index.html</span></span><br><span class="line"><span class="comment"># ls -lZ index.html</span></span><br><span class="line"><span class="comment"># curl localhost</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># ls -ldZ .</span></span><br><span class="line"><span class="comment"># chcon -t httpd_sys_content_t index.html</span></span><br><span class="line"><span class="comment"># ls -ldZ .</span></span><br><span class="line"><span class="comment"># curl localhost</span></span><br><span class="line"><span class="comment"># semanage fcontext -l</span></span><br><span class="line"><span class="comment"># semanage fcontext -l|more</span></span><br><span class="line"><span class="comment"># semanage fcontext -l|grep www</span></span><br><span class="line"><span class="comment"># semanage fcontext -l|grep /var/www</span></span><br><span class="line"><span class="comment"># semanage fcontext -l|grep /var/www|head -n 3</span></span><br><span class="line"><span class="comment"># semanage fcontext -l|grep /var/www|head -n 1</span></span><br><span class="line"><span class="comment"># semanage fcontext -l|grep /var/www\(/# yum list|grep selinux</span></span><br><span class="line"><span class="comment"># yum -y install selinux-policy-doc.noarch</span></span><br><span class="line"><span class="comment"># mandb</span></span><br><span class="line"><span class="comment"># man -k selinux</span></span><br><span class="line"><span class="comment"># man -k selinux|more</span></span><br><span class="line"><span class="comment"># man -k selinux|grep http                               </span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /var/www/html/</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># ls -lZ</span></span><br><span class="line"><span class="comment"># echo file1 &gt; file1</span></span><br><span class="line"><span class="comment"># echo file2 &gt; file2</span></span><br><span class="line"><span class="comment"># echo file3 &gt; file3</span></span><br><span class="line"><span class="comment"># ls -lZ</span></span><br><span class="line"><span class="comment"># chcon -t default_t file1</span></span><br><span class="line"><span class="comment"># chcon -t default_t file2</span></span><br><span class="line"><span class="comment"># chcon -t default_t file3</span></span><br><span class="line"><span class="comment"># man semanage fcontext|grep \#</span></span><br><span class="line"><span class="comment"># semanage fcontext -a -t httpd_sys_content_t &quot;/var/www/html(/.*)?&quot;</span></span><br><span class="line"><span class="comment"># ls -lZ</span></span><br><span class="line"><span class="comment"># restorecon -R -v /var/www/html/</span></span><br><span class="line"><span class="comment"># ls -lZ</span></span><br></pre></td></tr></table></figure><h2 id="布尔值"><a href="#布尔值" class="headerlink" title="布尔值"></a>布尔值</h2><p><strong>控制selinux策略行为的开关，可以启用或禁用规则</strong></p><ul><li><p>查看</p><p><code>getsebool -a</code>当前状态</p><p><code>semanage boolean -l</code>更多信息：当前状态，默认状态，描述信息</p></li></ul><hr><ul><li><p>修改</p><p><code>setsebool XX on|off</code>临时改变</p><p>​<code>-P XX on|off</code>永久改变</p></li></ul><h3 id="访问家目录网页（通过http）示例"><a href="#访问家目录网页（通过http）示例" class="headerlink" title="访问家目录网页（通过http）示例"></a>访问家目录网页（通过http）示例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">用户可以通过web访问servera的studnet用户家目录中的网页</span><br><span class="line">1、安装apache</span><br><span class="line"><span class="comment"># 略</span></span><br><span class="line">2、开启apache访问普通用户家目录的功能 </span><br><span class="line">[root@servera /]<span class="comment"># vim /etc/httpd/conf.d/userdir.conf</span></span><br><span class="line"><span class="comment">#UserDir disabled加上注释</span></span><br><span class="line">UserDir public_html注释取消</span><br><span class="line"><span class="comment"># 重启服务生效配置文件，如果不能重启开启bool值相应功能后才可重启服务</span></span><br><span class="line">[root@servera /]<span class="comment"># systemctl restart httpd   </span></span><br><span class="line"></span><br><span class="line">3、创建普通用户发布目录和权限</span><br><span class="line">[root@servera ~]<span class="comment"># su - student</span></span><br><span class="line">[student@servera ~]$ <span class="built_in">pwd</span></span><br><span class="line">/home/student</span><br><span class="line"><span class="comment"># 创建共享的目录</span></span><br><span class="line">[student@servera ~]$ <span class="built_in">mkdir</span> public_html</span><br><span class="line">[student@servera ~]$ <span class="built_in">cd</span> public_html/</span><br><span class="line">[student@servera public_html]$ <span class="built_in">echo</span> webserver_userdir &gt; index.html</span><br><span class="line">[root@servera ~]<span class="comment"># ll -d /home/student/</span></span><br><span class="line">drwx------. 3 student student 102 Aug  2 09:24 /home/student/</span><br><span class="line"><span class="comment"># 给普通用户以student家目录的执行权限（/home/student）</span></span><br><span class="line">[root@servera ~]<span class="comment"># chmod 711 /home/student/</span></span><br><span class="line">[root@servera ~]<span class="comment"># setenforce 0临时关闭selinux</span></span><br><span class="line"><span class="comment"># 如果防火墙放行了http，浏览器访问测试,可以访问</span></span><br><span class="line">servera/~student/index.html</span><br><span class="line"><span class="comment"># 无法通过以下方式访问，格式不同意义也不同</span></span><br><span class="line">servera/home/student/public_html/index.html</span><br><span class="line"><span class="comment"># 打开selinux，浏览器访问测试，不可以访问</span></span><br><span class="line">[root@servera ~]<span class="comment"># setenforce 1</span></span><br><span class="line"></span><br><span class="line">4、打开布尔值</span><br><span class="line"><span class="comment"># 查找对应的布尔值</span></span><br><span class="line">[root@servera ~]<span class="comment"># getsebool -a|grep httpd|grep home</span></span><br><span class="line">httpd_enable_homedirs --&gt; off</span><br><span class="line">[root@servera home]<span class="comment"># setsebool -P httpd_enable_homedirs on</span></span><br><span class="line">5、打开防火墙</span><br><span class="line">[root@servera home]<span class="comment"># firewall-cmd --permanent --add-service=http</span></span><br><span class="line">success</span><br><span class="line">[root@servera home]<span class="comment"># firewall-cmd --reload</span></span><br><span class="line">success</span><br><span class="line">[root@servera home]<span class="comment"># firewall-cmd --list-all</span></span><br><span class="line"><span class="comment"># 继续测试，测试成功</span></span><br><span class="line">6、http：//172.25.250.10/~student/index.html</span><br></pre></td></tr></table></figure><h2 id="samba-share-t示例（课上完整内容全跟踪）"><a href="#samba-share-t示例（课上完整内容全跟踪）" class="headerlink" title="samba_share_t示例（课上完整内容全跟踪）"></a>samba_share_t示例（课上完整内容全跟踪）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 装包</span></span><br><span class="line">[root@servera home]<span class="comment"># yum list|grep samba</span></span><br><span class="line">[root@servera home]<span class="comment"># yum -y install samba-client.x86_64 samba.x86_64 samba-common.noarch</span></span><br><span class="line"><span class="comment"># 查找配置文件</span></span><br><span class="line">[root@servera home]<span class="comment"># rpm -qc samba-common</span></span><br><span class="line">/etc/logrotate.d/samba</span><br><span class="line">/etc/samba/lmhosts</span><br><span class="line">/etc/samba/smb.conf</span><br><span class="line">/etc/sysconfig/samba</span><br><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">[root@servera home]<span class="comment"># vim /etc/samba/smb.conf</span></span><br><span class="line">[share]</span><br><span class="line">        path = /root/share</span><br><span class="line">        write list = tom</span><br><span class="line">        valid <span class="built_in">users</span> = tom</span><br><span class="line"><span class="comment"># 创建共享目录及用户</span></span><br><span class="line">[root@servera home]<span class="comment"># mkdir /root/share</span></span><br><span class="line">[root@servera home]<span class="comment"># useradd tom</span></span><br><span class="line"><span class="comment"># 把系统中的tom用户变成samba中的tom用户，并赋予密码</span></span><br><span class="line">[root@servera home]<span class="comment"># (echo redhat;echo redhat) | smbpasswd -a tom</span></span><br><span class="line">New SMB password:</span><br><span class="line">Retype new SMB password:</span><br><span class="line">Added user tom.</span><br><span class="line"><span class="comment"># 列出samba用户</span></span><br><span class="line">[root@servera home]<span class="comment"># pdbedit -L</span></span><br><span class="line">tom:1002:</span><br><span class="line"><span class="comment"># 查找并启动服务</span></span><br><span class="line">[root@servera home]<span class="comment">#  rpm -ql samba | grep service</span></span><br><span class="line">/usr/lib/systemd/system/nmb.service</span><br><span class="line">/usr/lib/systemd/system/smb.service</span><br><span class="line">[root@servera home]<span class="comment"># systemctl enable --now smb.service</span></span><br><span class="line"><span class="comment"># 关于samba的一些操作，没整明白，大概意思为用他的命令行工具查看信息，-L免交互</span></span><br><span class="line">[root@servera home]<span class="comment"># smbclient -L //localhost -U tom%redhat</span></span><br><span class="line"><span class="comment"># 创建一些文件以供之后使用</span></span><br><span class="line">[root@servera home]<span class="comment"># cd /root/share/</span></span><br><span class="line">[root@servera home]<span class="comment"># touch file&#123;1..9&#125;</span></span><br><span class="line"><span class="comment"># 下载selinux帮助文档，查找有关samba的手册并查看</span></span><br><span class="line">[root@servera share]<span class="comment"># yum -y install selinux-policy-doc.noarch</span></span><br><span class="line">[root@servera share]<span class="comment"># mandb</span></span><br><span class="line">[root@servera share]<span class="comment"># man -k samba</span></span><br><span class="line">[root@servera share]<span class="comment"># man samba_selinux</span></span><br><span class="line"><span class="comment"># 搜索到默认标签为samba_share_t</span></span><br><span class="line"><span class="comment"># 查看当前文件</span></span><br><span class="line">[root@servera share]<span class="comment"># ls -lZd .</span></span><br><span class="line">drwxr-xr-x. 2 root root unconfined_u:object_r:admin_home_t:s0 6 Aug  6 10:03 .</span><br><span class="line"><span class="comment"># 修改安全上下文标签</span></span><br><span class="line">[root@servera share]<span class="comment"># semanage fcontext -a -t samba_share_t &quot;/root/share(/.*)?&quot;</span></span><br><span class="line">[root@servera share]<span class="comment"># restorecon -R -v /root/share/</span></span><br><span class="line"><span class="comment"># 重启服务</span></span><br><span class="line">[root@servera share]<span class="comment"># systemctl restart smb.service</span></span><br><span class="line"><span class="comment"># 执行如下命令报错，提示没有权限</span></span><br><span class="line">[root@servera home]<span class="comment"># smbclient //localhost -U tom%redhat</span></span><br><span class="line"><span class="comment"># 发现由于/root/share嵌套目录，/root目录权限的问题，由于修改整个/root目录selinux标签牵扯太多，故更换共享目录</span></span><br><span class="line"><span class="comment"># 修改配置文件并迁移/root/sahre到/share，重启服务</span></span><br><span class="line">[root@servera share]<span class="comment"># mkdir /share</span></span><br><span class="line">[root@servera share]<span class="comment"># vim /etc/samba/smb.conf</span></span><br><span class="line">[root@servera ~]<span class="comment"># mv share/ /share</span></span><br><span class="line">[root@servera share]<span class="comment"># systemctl restart smb.service </span></span><br><span class="line"><span class="comment"># 再次执行命令并验证，验证成功</span></span><br><span class="line">[root@servera share]<span class="comment"># smbclient //localhost/share -U tom%redhat</span></span><br><span class="line">Try <span class="string">&quot;help&quot;</span> to get a list of possible commands.</span><br><span class="line">smb: \&gt; <span class="built_in">ls</span></span><br><span class="line">  .                                   D        0  Fri Aug  6 10:51:48 2021</span><br><span class="line">  ..                                  D        0  Fri Aug  6 10:59:22 2021</span><br><span class="line">  file1                               N        0  Fri Aug  6 10:51:48 2021</span><br><span class="line">  file2                               N        0  Fri Aug  6 10:51:48 2021</span><br><span class="line">  file3                               N        0  Fri Aug  6 10:51:48 2021</span><br><span class="line">  file4                               N        0  Fri Aug  6 10:51:48 2021</span><br><span class="line">  file5                               N        0  Fri Aug  6 10:51:48 2021</span><br><span class="line">  file6                               N        0  Fri Aug  6 10:51:48 2021</span><br><span class="line">  file7                               N        0  Fri Aug  6 10:51:48 2021</span><br><span class="line">  file8                               N        0  Fri Aug  6 10:51:48 2021</span><br><span class="line">  file9                               N        0  Fri Aug  6 10:51:48 2021</span><br><span class="line"></span><br><span class="line">10370048 blocks of size 1024. 8642908 blocks available</span><br><span class="line">smb: \&gt; <span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h2 id="端口管理"><a href="#端口管理" class="headerlink" title="端口管理"></a>端口管理</h2><ol><li><p>1 看日志</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /var/log/messages</span><br></pre></td></tr></table></figure></li><li><p>2 查手册</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">也可以man semanage port,不加-不能tab补全</span><br><span class="line">man semanage-port</span><br><span class="line"><span class="comment"># 查示例文件</span></span><br><span class="line">/EXAMPLE</span><br></pre></td></tr></table></figure></li><li><p>查标签</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">semanage port -l | grep 服务名</span><br></pre></td></tr></table></figure></li><li><p>改标签</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">semanage port -a -t PORT_TYPE -p tcp或upd 端口号</span><br></pre></td></tr></table></figure></li><li><p>完成</p></li></ol><h3 id="非标端口访问web示例"><a href="#非标端口访问web示例" class="headerlink" title="非标端口访问web示例"></a>非标端口访问web示例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">希望用户可以通过8090 端口访问apache服务中的默认索引页</span><br><span class="line">1、列出目前放行的服务，如果没有http，再添加</span><br><span class="line">[root@servera ~]<span class="comment"># firewall-cmd --list-services </span></span><br><span class="line">cockpit dhcpv6-client http ssh</span><br><span class="line">[root@servera html]<span class="comment"># firewall-cmd --permanent --add-service=http</span></span><br><span class="line">[root@servera html]<span class="comment"># firewall-cmd --permanent --add-port=8090/tcp</span></span><br><span class="line">[root@servera html]<span class="comment"># firewall-cmd --reload</span></span><br><span class="line">success</span><br><span class="line"></span><br><span class="line">2、修改apache配置文件，添加默认监听端口8090</span><br><span class="line">[root@servera html]<span class="comment"># vim /etc/httpd/conf/httpd.conf </span></span><br><span class="line">Listen 8090</span><br><span class="line"><span class="comment"># 重启服务，报错，无法启动</span></span><br><span class="line">[root@servera html]<span class="comment"># systemctl restart httpd </span></span><br><span class="line">3、给listen端口添加默认标签</span><br><span class="line">[root@servera html]<span class="comment"># man semanage-port</span></span><br><span class="line">[root@servera html]<span class="comment"># semanage port -l | grep http</span></span><br><span class="line">[root@servera html]<span class="comment"># semanage port -a -t http_port_t -p tcp 8090</span></span><br><span class="line">4、浏览器访问,成功</span><br><span class="line">http://172.25.250.10:8090</span><br></pre></td></tr></table></figure><h1 id="第六章-基本存储管理"><a href="#第六章-基本存储管理" class="headerlink" title="第六章 基本存储管理"></a>第六章 基本存储管理</h1><h2 id="分区表部分内容-了解即可"><a href="#分区表部分内容-了解即可" class="headerlink" title="分区表部分内容^了解即可^"></a>分区表部分内容^了解即可^</h2><h3 id="MBR"><a href="#MBR" class="headerlink" title="MBR"></a>MBR</h3><p>主引导记录（MBR，Master Boot Record）是装有<a href="https://baike.baidu.com/item/Linux%E7%B3%BB%E7%BB%9F/1732935">Linux系统</a>的硬盘的第一个扇区，即C&#x2F;H&#x2F;S地址的0柱面0磁头1扇区，也叫做MBR扇区。</p><table><thead><tr><th>偏移地址</th><th>字节数</th><th>内容</th></tr></thead><tbody><tr><td>00</td><td>446</td><td>启动代码</td></tr><tr><td>446</td><td>16</td><td>第1分区表项</td></tr><tr><td>462</td><td>16</td><td>第2分区表项</td></tr><tr><td>478</td><td>16</td><td>第3分区表项</td></tr><tr><td>494</td><td>16</td><td>第4分区表项</td></tr><tr><td>510</td><td>2</td><td>签名（0x55，0xAA）</td></tr></tbody></table><table><thead><tr><th align="center">0</th><th align="center">mbr</th><th align="center">dpt（disk partion table）</th><th align="center">结束标志</th></tr></thead><tbody><tr><td align="center">512 Byte</td><td align="center">446</td><td align="center">64</td><td align="center">2</td></tr><tr><td align="center"></td><td align="center"></td><td align="center">Primary&lt;&#x3D;4 主分区</td><td align="center">0X55</td></tr><tr><td align="center"></td><td align="center"></td><td align="center">Extend&lt;&#x3D;1 扩展分区</td><td align="center">0xAA</td></tr><tr><td align="center"></td><td align="center"></td><td align="center">Logical&lt;&#x3D;14 逻辑分区</td><td align="center"></td></tr></tbody></table><h3 id="GPT"><a href="#GPT" class="headerlink" title="GPT"></a>GPT</h3><p>全局唯一标识分区表（GUID Partition Table，缩写：GPT）是指全局唯一标示磁盘分区表格式。它是可扩展固件接口（EFI）标准（被Intel用于替代个人计算机的BIOS）的一部分，被用于替代BIOS系统中的以32bits来存储逻辑块地址和大小信息的主引导记录（MBR）分区表。 </p><h3 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h3><table><thead><tr><th align="center">ID</th><th></th><th>Count</th><th>Size</th><th></th><th></th></tr></thead><tbody><tr><td align="center">1</td><td>mbr | msdos</td><td>15</td><td>2TB</td><td>3P+1E(nL)</td><td>4P</td></tr><tr><td align="center">2</td><td>gpt</td><td>128</td><td>8ZB</td><td>P</td><td></td></tr></tbody></table><h2 id="常用查看命令"><a href="#常用查看命令" class="headerlink" title="常用查看命令"></a>常用查看命令</h2><p><code>df</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">disk free，常用`df -Th`显示目前在 Linux 系统上的文件系统磁盘使用情况统计。</span><br></pre></td></tr></table></figure><p><code>lsblk</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">用于列出所有可用块设备的信息，而且还能显示他们之间的依赖关系，但是它不会列出RAM盘的信息。块设备有硬盘，闪存盘，cd-ROM等等。lsblk命令包含在util-linux-ng包中，现在该包改名为util-linux。这个包带了几个其它工具，如dmesg。</span><br><span class="line"></span><br><span class="line">lsblk --f 可以额外查看当前分区的文件系统。</span><br></pre></td></tr></table></figure><p><code>blkid</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blkid命令对查询设备上所采用文件系统类型进行查询。blkid主要用来对系统的块设备（包括交换分区）所使用的文件系统类型、LABEL、UUID等信息进行查询。</span><br></pre></td></tr></table></figure><p><code>du</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">disk usage,用于显示目录或文件的大小。du会显示指定的目录或文件所占用的磁盘空间。</span><br></pre></td></tr></table></figure><p><code>dd</code></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dd是一个Unix和类Unix系统上的命令，主要功能为转换和复制文件。</span><br><span class="line">常用`dd if=/dev/zero of=myfile bs=1M count=100</span><br><span class="line">if输入文件，of输出文件</span><br></pre></td></tr></table></figure><p><code>free -h</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">查看磁盘使用情况，还可以看swap</span><br></pre></td></tr></table></figure><h2 id="分区流程-考"><a href="#分区流程-考" class="headerlink" title="分区流程^考^"></a>分区流程^考^</h2><h3 id="分区工具"><a href="#分区工具" class="headerlink" title="分区工具"></a>分区工具</h3><h4 id="fdisk"><a href="#fdisk" class="headerlink" title="fdisk"></a><code>fdisk</code></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">一个创建和维护分区表的程序，它兼容DOS类型的分区表，BSD或SUN类型的磁盘列表。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">d   delete a partition</span><br><span class="line">F   list free unpartitioned space</span><br><span class="line">l   list known partition types</span><br><span class="line">n   add a new partition</span><br><span class="line">p   print the partition table</span><br><span class="line">t   change a partition type</span><br><span class="line">v   verify the partition table</span><br><span class="line">i   print information about a partition</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@serverb ~]# fdisk -l</span><br><span class="line">Disk /dev/vda: 10 GiB, 10737418240 bytes, 20971520 sectors磁盘大小、扇区数量</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes扇区大小</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes扇区大小</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disklabel type: dos分区类型|MBR</span><br><span class="line">Disk identifier: 0x16a1e057</span><br></pre></td></tr></table></figure><h5 id="交互式"><a href="#交互式" class="headerlink" title="交互式"></a>交互式</h5><ul><li><code>fdisk /dev/vda</code><kbd>enter</kbd>开始交互式分区，默认使用MBR分区表（不指定的情况下）<ul><li><code>p</code>查看当前分区的详细信息</li><li><code>m</code>查看帮助</li><li><code>n</code> 创建分区（开始分区）<ul><li><code>p</code>（主分区，默认）<code>e</code>（扩展分区）</li><li>开始扇区默认为1，直接回车</li><li>使用<code>+数字 单位</code>设置（使用了设置大小后的）终止扇区（通过设置大小的方法而不是直接设置终点）</li></ul></li><li><code>q</code> 退出（会丢失数据）<code>w</code>保存退出</li></ul></li></ul><h5 id="免交互"><a href="#免交互" class="headerlink" title="免交互"></a>免交互</h5><ul><li><p><code>echo -e &quot;n\n\n\n\n+500M\nw\n&quot; | fdisk /dev/vdb</code>一路回车带闪电</p></li><li><p><code>for i in &#123;1..4&#125;;do echo -e &quot;n\n\n\n\n+500M\nw\n&quot; | fdisk /dev/vdb;done</code> 一次性分四个</p></li><li><blockquote><p><code>for i in &#123;1..4&#125;;do echo -e &quot;d\n$i\nw\n&quot;|fdisk /dev/vdb;done</code>一次性删四个</p></blockquote></li></ul><blockquote><ol><li><p>第四个分区默认为e（扩展分区，可以手动调成主分区），默认会给他剩余的所有磁盘空间（在选择分区大小时不能指定，而且在免交互循环写法时最后一个分区会因为指定分区大小而报错，显示无法使用+,问题不大，会按照剩余最大空间给到最后一个分区）</p></li><li><p>之后的所有的逻辑分区实际上都占用第四个分区的空间，此时分出来的第四个分区（扩展分区）大小显示为1k，而且不能被挂载（只表示逻辑上占位，无法被使用）</p></li></ol></blockquote><h4 id="parted"><a href="#parted" class="headerlink" title="parted"></a><code>parted</code></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parted命令是由GNU组织开发的一款功能强大的磁盘分区和分区大小调整工具，与fdisk不同，它支持调整分区的大小。作为一种设计用于Linux的工具，它没有构建成处理与fdisk关联的多种分区类型，但是，它可以处理最常见的分区格式，包括：ext2、ext3、fat16、fat32、NTFS、ReiserFS、JFS、XFS、UFS、HFS以及Linux交换分区。</span><br></pre></td></tr></table></figure><h5 id="交互式-1"><a href="#交互式-1" class="headerlink" title="交互式"></a>交互式</h5><ul><li><p>无默认的分区表，所以新的磁盘需要首先设置分区表</p></li><li><p><code>parted /dev/vdb</code><kbd>enter</kbd>开始交互式分区</p><p><code>help</code><kbd>enter</kbd>  查看帮助信息</p></li><li><p>相比于<code>fdisk</code>的写完后需要手动保存生效，<code>parted</code>每完成<strong>执行成功的一步</strong>就会立即生效</p><ol><li><p><code>mklable</code>修改分区表</p><p>​<code>msdos</code> 为MBR分区</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mklabel label-type</span><br><span class="line">                     Create a new disklabel (partition table) of label-type.  label-type</span><br><span class="line">                     should be one of  <span class="string">&quot;aix&quot;</span>,  <span class="string">&quot;amiga&quot;</span>,  <span class="string">&quot;bsd&quot;</span>,  <span class="string">&quot;dvh&quot;</span>,  <span class="string">&quot;gpt&quot;</span>,  <span class="string">&quot;loop&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;mac&quot;</span>, <span class="string">&quot;msdos&quot;</span>, <span class="string">&quot;pc98&quot;</span>, or <span class="string">&quot;sun&quot;</span>.</span><br></pre></td></tr></table></figure><ol start="2"><li><p><code>mkpart</code>设置创建的分区是主分区还是扩展分区（不允许<kbd>enter</kbd>默认设置，只能手动选择）</p><p>​<code>p|e</code>主分区或扩展分区</p></li><li><p>提示<code>file system type? [ext2]?</code>可以<kbd>enter</kbd>使用默认<code>[ext2]</code></p></li><li><p>提示<code>start?</code>无法<kbd>enter</kbd>使用默认，手动设置一个起始值，如100M</p></li><li><p>提示<code>end?</code> 同样无法<kbd>enter</kbd>使用默认，手动设置结束值，比如200M</p></li><li><p>完成</p></li></ol></li></ul><h5 id="免交互-1"><a href="#免交互-1" class="headerlink" title="免交互"></a>免交互</h5><ul><li><p>单选项有错误信息会进入交互式界面，不会即时生效（不包括语法错误）</p><blockquote><p><strong>示例：在已经分区的位置上再次分区会提示错误信息并出现交互界面</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@servera ~]# parted /dev/vdb mkpart p xfs 200M 400M</span><br><span class="line">Information: You may need to update /etc/fstab.</span><br><span class="line"></span><br><span class="line">[root@servera ~]# lsblk                                                   </span><br><span class="line">NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">vda    252:0    0   10G  0 disk </span><br><span class="line">├─vda1 252:1    0    1M  0 part </span><br><span class="line">├─vda2 252:2    0  100M  0 part /boot/efi</span><br><span class="line">└─vda3 252:3    0  9.9G  0 part /</span><br><span class="line">vdb    252:16   0    5G  0 disk </span><br><span class="line">├─vdb1 252:17   0   96M  0 part </span><br><span class="line">└─vdb2 252:18   0  190M  0 part </span><br><span class="line">vdc    252:32   0    5G  0 disk </span><br><span class="line">vdd    252:48   0    5G  0 disk </span><br><span class="line">[root@servera ~]# parted /dev/vdb mkpart p xfs 300M 500M</span><br><span class="line">Warning: You requested a partition from 300MB to 500MB (sectors 585937..976562).</span><br><span class="line">The closest location we can manage is 400MB to 500MB (sectors 780288..976562).</span><br><span class="line">Is this still acceptable to you?</span><br><span class="line">Yes/No? ^C</span><br></pre></td></tr></table></figure></blockquote></li><li><p>对新的磁盘进行分区首先要指定分区表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@servera ~]<span class="comment"># parted /dev/vdb mkpart p xfs 100M 200M</span></span><br><span class="line">Error: /dev/vdb: unrecognised disk label</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@servera ~]<span class="comment"># parted /dev/vdb mklabel msdos mkpart p xfs 100M 200M</span></span><br><span class="line">Information: You may need to update /etc/fstab.</span><br></pre></td></tr></table></figure></li><li><p>对指定过分区表的直接指定<strong>分区类型（p|e）、文件系统、起始与结束位置</strong>即可</p><p><code>parted /dev/vdb mkpart p xfs 100M 200M</code></p></li></ul><p>扩展内容（从笔记里直接复制来的）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># toggle 转换</span></span><br><span class="line">切换mbr及gpt分区方案方法：</span><br><span class="line"><span class="comment"># parted /dev/vdb mklabel msdos 制作分区表</span></span><br><span class="line"><span class="comment"># parted /dev/vdb print  打印分区信息</span></span><br><span class="line"><span class="comment"># parted /dev/vdb print devices</span></span><br><span class="line"><span class="comment"># parted /dev/vdb print list打印所有磁盘详细信息</span></span><br><span class="line"><span class="comment"># parted /dev/vdb mklabel gpt</span></span><br><span class="line"><span class="comment"># parted /dev/vdb mkpart part1 100M 200M    GPT类型 </span></span><br><span class="line"><span class="comment"># parted /dev/vdb mkpart p 100M 200M        MBR类型   不同的分区表mkpart后面参数不一样</span></span><br><span class="line"><span class="comment"># lsblk</span></span><br><span class="line"><span class="comment"># parted /dev/vdc print</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># parted /dev/vdb rm 1删除第一个分区</span></span><br><span class="line"><span class="comment"># lsblk</span></span><br><span class="line"><span class="comment"># parted /dev/vdc print</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># parted不再支持分区调整大小功能</span></span><br><span class="line">(parted) resize</span><br><span class="line">Error: The resize <span class="built_in">command</span> has been removed <span class="keyword">in</span> parted 3.0</span><br><span class="line">                                                                                  (parted) version </span><br><span class="line">3.2</span><br><span class="line">                                                                                  </span><br><span class="line">MBR方式</span><br><span class="line">[root@servera /]<span class="comment"># parted /dev/vdc </span></span><br><span class="line">(parted) mklabel                                                          </span><br><span class="line">New disk label <span class="built_in">type</span>? msdos                                                </span><br><span class="line">Number  Start  End  Size  Type  File system  Flags</span><br><span class="line">(parted) mkpart                                                           </span><br><span class="line">Partition <span class="built_in">type</span>?  primary/extended? p                                      </span><br><span class="line">File system <span class="built_in">type</span>?  [ext2]? ext4</span><br><span class="line">Start? 2048s                                                              </span><br><span class="line">End? 1000MB                                                               </span><br><span class="line">(parted) p                                                                </span><br><span class="line">Model: Virtio Block Device (virtblk)</span><br><span class="line">Disk /dev/vdc: 5369MB</span><br><span class="line">Sector size (logical/physical): 512B/512B</span><br><span class="line">Partition Table: msdos</span><br><span class="line">Disk Flags: </span><br><span class="line">Number  Start   End     Size   Type     File system  Flags</span><br><span class="line"> 1      1049kB  1000MB  999MB  primary  ext4         lba</span><br><span class="line">(parted) quit                                                             </span><br><span class="line">Information: You may need to update /etc/fstab.</span><br><span class="line">[root@servera ~]<span class="comment"># udevadm  settle </span></span><br><span class="line"><span class="comment"># udevadm是一个udev的管理工具，可以用来监视和控制udev运行时的行为，请求内核事件，管理事件队列，以及提供简单的调试机制，settle 查看udev事件队列，如果所有的events已处理则退出。</span></span><br><span class="line">命令：</span><br><span class="line">[root@servera /]<span class="comment"># parted /dev/vdc mkpart p ext4 1000MB 2000MB MBR</span></span><br><span class="line"></span><br><span class="line">gpt方式：</span><br><span class="line">[root@servera /]<span class="comment"># parted /dev/vdd</span></span><br><span class="line">(parted) mklabel gpt   </span><br><span class="line">(parted) mkpart                                                           </span><br><span class="line">Partition name?  []? part1</span><br><span class="line">File system <span class="built_in">type</span>?  [ext2]? xfs                                            </span><br><span class="line">Start? 2048s                                                              </span><br><span class="line">End? 1000MB                                                               </span><br><span class="line">(parted) p                                                                </span><br><span class="line">Model: Virtio Block Device (virtblk)</span><br><span class="line">Disk /dev/vdd: 5369MB</span><br><span class="line">Sector size (logical/physical): 512B/512B</span><br><span class="line">Partition Table: gpt</span><br><span class="line">Disk Flags: </span><br><span class="line"></span><br><span class="line">Number  Start   End     Size   File system  Name   Flags</span><br><span class="line"> 1      1049kB  1000MB  999MB  xfs          part1</span><br><span class="line"></span><br><span class="line">(parted) quit     </span><br><span class="line">[root@servera ~]<span class="comment"># udevadm  settle </span></span><br><span class="line">命令：</span><br><span class="line">[root@servera /]<span class="comment"># parted /dev/vdd mkpart part2 xfs 1000MB 2000MB</span></span><br><span class="line"><span class="comment"># parted /dev/vdb mkpart part2 xfs 1000M 2000M 虽然给了文件系统，但是不好使，功能不全</span></span><br><span class="line"><span class="comment"># lsblk</span></span><br><span class="line"><span class="comment"># lsblk --fs /dev/vdb1</span></span><br><span class="line"><span class="comment"># mkfs.xfs /dev/vdb1使用mkfs是没有问题的</span></span><br><span class="line"><span class="comment"># lsblk -fs /dev/vdb1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@servera /]<span class="comment"># parted /dev/vdc p|print 功能等同</span></span><br><span class="line">Model: Virtio Block Device (virtblk)</span><br><span class="line">Disk /dev/vdc: 5369MB</span><br><span class="line">Sector size (logical/physical): 512B/512B</span><br><span class="line">Partition Table: msdos</span><br><span class="line">Disk Flags: </span><br><span class="line"></span><br><span class="line">Number  Start   End     Size   Type     File system  Flags</span><br><span class="line"> 1      1049kB  1000MB  999MB  primary  ext4</span><br><span class="line"> 2      1000MB  2000MB  999MB  primary  xfs</span><br></pre></td></tr></table></figure><h3 id="格式化（制作文件系统）"><a href="#格式化（制作文件系统）" class="headerlink" title="格式化（制作文件系统）"></a>格式化（制作文件系统）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs（英文全拼：make file system）命令用于在特定的分区上建立 linux 文件系统。</span><br></pre></td></tr></table></figure><ul><li><p><code>mkfs.分区类型 区</code>给分区|磁盘制作文件系统,常见的选择有xfs，ext3，ext4等</p><p><code>mkfs -t 分区类型 区</code></p></li><li><p><code>lsblk --f</code>打印文件系统信息</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">格式化：</span><br><span class="line">[root@servera /]# mkfs -t ext4 /dev/vdc1 </span><br><span class="line">[root@servera /]# mkfs.xfs /dev/vdc2</span><br><span class="line">[root@servera /]# lsblk --fs /dev/vdc</span><br></pre></td></tr></table></figure><h3 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h3><h4 id="临时挂载"><a href="#临时挂载" class="headerlink" title="临时挂载"></a>临时挂载</h4><ul><li><p><code>mount 分区|磁盘 目录</code>挂载</p></li><li><p><code>df-Th</code>查看挂载情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">mount  临时</span><br><span class="line">[root@servera /]<span class="comment"># mkdir /mnt/dir1</span></span><br><span class="line">[root@servera /]<span class="comment"># mkdir /mnt/dir2</span></span><br><span class="line">[root@servera /]<span class="comment"># mount /dev/vdc1 /mnt/dir1</span></span><br><span class="line">[root@servera /]<span class="comment"># mount /dev/vdc2 /mnt/dir2</span></span><br><span class="line"><span class="comment"># mount|grep vdb1</span></span><br><span class="line"><span class="comment"># df -Th</span></span><br><span class="line"></span><br><span class="line">[root@servera /]<span class="comment"># umount /mnt/dir2</span></span><br><span class="line"><span class="comment"># mount|grep vdb1</span></span><br><span class="line"><span class="comment"># df -Th</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># blkid</span></span><br><span class="line">root@serverb ~]<span class="comment"># blkid /dev/vdb2</span></span><br><span class="line">/dev/vdb2: UUID=<span class="string">&quot;f131c11b-0aaf-4f1f-8b4c-39787333b203&quot;</span> TYPE=<span class="string">&quot;xfs&quot;</span> </span><br><span class="line">使用UUID方式挂载</span><br><span class="line"><span class="comment"># mount UUID=&quot;f131c11b-0aaf-4f1f-8b4c-39787333b203&quot; /mnt/disk2</span></span><br><span class="line">使用卷标方式挂载</span><br><span class="line"><span class="comment"># mount PARTLABEL=&quot;part2&quot; /mnt</span></span><br><span class="line">使用设备名称挂载</span><br><span class="line"><span class="comment"># mount /dev/vdb1 /mnt</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="持久化挂载-重要且考"><a href="#持久化挂载-重要且考" class="headerlink" title="持久化挂载^重要且考^"></a>持久化挂载^重要且考^</h4><ul><li><p>修改配置文件<code>/etc/fstab</code></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">UUID=884f47c9-a69d-4c5b-915d-6b7c9c74c923 /  xfs    defaults        0   0</span><br><span class="line"></span><br><span class="line">(设备ID、设备名称、设备卷标)(挂载点)(文件系统)(权限)(内核日志检测机制：0不检测)(磁盘检测机制：0不检测)</span><br></pre></td></tr></table></figure><blockquote><p><code>man fstab</code>查看每个位置的详细信息</p></blockquote></li><li><p><code>mount -a</code>，<strong>将配置文件中的内容当命令执行一遍，此时如果有错误，会影响到系统启动^很重要^</strong></p><blockquote><p>将 &#x2F;etc&#x2F;fstab 中定义的所有档案系统挂上。只要格式正确，<code>mount -a</code>不会报错，但是逻辑有误，比如本来应该是_netdev，结果使用了defaults，也不会报错，但是会造成<strong>系统无法启动</strong>的严重问题。</p><p>所以一定要慎重修改<code>/etc/fstab</code>文件</p></blockquote></li><li><p>挂载完成后重启检测（稍有不慎万劫难复）</p></li></ul><h3 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h3><ul><li><p>常用</p><p><code>umount 挂在点或磁盘分区</code></p><p>​<code>-l</code>强制卸载</p><table><thead><tr><th>命令</th><th>功能</th></tr></thead><tbody><tr><td><code>umount /newdict</code></td><td>卸载挂载点&#x2F;newdict目录下的磁盘分区。</td></tr><tr><td><code>umount /dev/sdb5</code></td><td>卸载设备文件名&#x2F;dev&#x2F;sdb5磁盘分区。</td></tr><tr><td><code>umount -l /newdict/</code></td><td>快速卸载newdict目录下的磁盘分区。-l选项会在卸载前检查占用该挂载文件的程序并迅速kill掉，以达到快速卸载的目的。</td></tr><tr><td><code>umount -f /newdict/</code></td><td>强制卸载newdict目录下的磁盘分区。可以在类似网络文件系统NFS无法读取到的情况下使用。</td></tr><tr><td><code>umount -n /newdict/</code></td><td>不更新&#x2F;etc&#x2F;fstab的情况下卸载。</td></tr></tbody></table></li></ul><h2 id="交换分区swap-考"><a href="#交换分区swap-考" class="headerlink" title="交换分区swap^考^"></a>交换分区swap^考^</h2><ul><li><p>意义是在磁盘上分出一部分空间作为内存空间使用（扩展内存,不需要寻址)</p></li><li><p>临时分区</p><p><code>mkswap /dev/vdb4</code>制作swap分区</p><p><code>swapon /dev/vdb4</code> (<code>-a</code>）启用（单用-a表示全部）swap分区</p><p><code>swapoff /dev/vdb4</code> 停用</p><p><code>free -h</code> 查看</p></li><li><p>持久分区</p><p>修改配置文件<code>/etc/fstab</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/dev/vdb4 swap swap defaults 0 0</span><br></pre></td></tr></table></figure><p><code>mount -a</code>挂载</p><p><code>reboot</code> 重启生效</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建分区</span></span><br><span class="line">[root@servera ~]<span class="comment"># parted /dev/vdd mkpart p xfs 2000MB 3000MB</span></span><br><span class="line"><span class="comment"># 查看信息 </span></span><br><span class="line">[root@servera ~]<span class="comment"># parted /dev/vdd p</span></span><br><span class="line">Model: Virtio Block Device (virtblk)</span><br><span class="line">Disk /dev/vdd: 5369MB</span><br><span class="line">Sector size (logical/physical): 512B/512B</span><br><span class="line">Partition Table: gpt</span><br><span class="line">Disk Flags: </span><br><span class="line"></span><br><span class="line">Number  Start   End     Size    File system  Name    Flags</span><br><span class="line"> 1      1049kB  1000MB  999MB                part1</span><br><span class="line"> 2      1000MB  2000MB  999MB                part2</span><br><span class="line"> 3      2000MB  3000MB  1000MB               backup</span><br><span class="line"><span class="comment"># 创建swap</span></span><br><span class="line">[root@servera ~]<span class="comment"># mkswap /dev/vdd3</span></span><br><span class="line"><span class="comment"># 启用swap</span></span><br><span class="line">[root@servera ~]<span class="comment"># swapon /dev/vdd3</span></span><br><span class="line"><span class="comment"># 以m为单位查看磁盘使用情况</span></span><br><span class="line">[root@servera ~]<span class="comment"># free -m</span></span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1829         173        1464          24         190        1488</span><br><span class="line">Swap:           953           0         953</span><br><span class="line"><span class="comment"># 停用swap</span></span><br><span class="line">[root@servera ~]<span class="comment"># swapoff /dev/vdd3</span></span><br><span class="line">[root@servera ~]<span class="comment"># free -m</span></span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1829         172        1465          24         190        1488</span><br><span class="line">Swap:             0           0           0</span><br><span class="line"><span class="comment"># 开机自动加载swap</span></span><br><span class="line">[root@servera ~]<span class="comment"># vim /etc/fstab </span></span><br><span class="line">/dev/vdd3 swap swap defaults 0 0</span><br><span class="line"><span class="comment"># 启用所有swap</span></span><br><span class="line">[root@servera ~]<span class="comment"># swapon -a</span></span><br><span class="line">[root@servera ~]<span class="comment"># free -m</span></span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1829         173        1464          24         190        1488</span><br><span class="line">Swap:           953           0         953</span><br><span class="line"><span class="comment">#reboot重启验证</span></span><br><span class="line"><span class="comment"># vim /etc/fstab</span></span><br></pre></td></tr></table></figure><h1 id="第七章-逻辑卷管理-重点"><a href="#第七章-逻辑卷管理-重点" class="headerlink" title="第七章 逻辑卷管理^重点^"></a>第七章 逻辑卷管理^重点^</h1><blockquote><p>7.28下午视频丢失，因此该部分笔记内容有不可控性</p></blockquote><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><table><thead><tr><th>术语</th><th></th><th>解释</th></tr></thead><tbody><tr><td>物理存储介质</td><td>The physical media</td><td>LVM存储介质，可以是硬盘分区、整个硬盘、raid阵列或SAN硬盘。设备必须初始化为LVM物理卷，才能与LVM结合使用</td></tr><tr><td>物理卷PV</td><td>physical volume</td><td>物理卷就是LVM的基本存储逻辑块，但和基本的物理存储介质比较却包含与LVM相关的管理参数，创建物理卷可以用硬盘分区，也可以用硬盘本身</td></tr><tr><td>卷组VG</td><td>Volume Group</td><td>LVM卷组类似于非LVM系统中的物理硬盘，一个卷组VG由一个或多个物理卷PV组成。可以在卷组VG上建立逻辑卷LV</td></tr><tr><td>逻辑卷LV</td><td>logical volume</td><td>类似于非LVM系统中的硬盘分区，逻辑卷LV建立在卷组VG之上。在逻辑卷LV之上建立文件系统</td></tr><tr><td>物理块PE</td><td>physical Extent</td><td>物理卷PV中可以分配的最小存储单元，PE的大小可以指定，默认为4MB</td></tr><tr><td>逻辑块LE</td><td>Logical Extent</td><td>逻辑卷LV中可以分配的最小存储单元，在同一卷组VG中LE的大小和PE是相同的，并且一一相对</td></tr></tbody></table><h2 id="LVM的管理命令"><a href="#LVM的管理命令" class="headerlink" title="LVM的管理命令"></a>LVM的管理命令</h2><table><thead><tr><th>功能</th><th>物理卷管理</th><th>卷组管理</th><th>逻辑卷管理</th></tr></thead><tbody><tr><td>Create 建立</td><td>pvcreate</td><td>vgcreate</td><td>lvcreate</td></tr><tr><td>Display 显示</td><td>pvdisplay</td><td>vgdisplay</td><td>lvdisplay</td></tr><tr><td>Remove  删 除</td><td>pvremove</td><td>vgremove</td><td>lvremove</td></tr><tr><td>Extend 扩展</td><td></td><td>vgextend</td><td>lvextend</td></tr></tbody></table><h2 id="创建过程"><a href="#创建过程" class="headerlink" title="创建过程"></a>创建过程</h2><ol><li><p>将分区或整个磁盘创建为lv可识别的物理卷pv</p><p><code>pvcreate pv_name part1 part2 part3</code></p><blockquote><ul><li><p>part可以是分区，也可以是整块磁盘</p></li><li><p>经过验证，逻辑分区无法被创建为物理卷，且有分区的磁盘不能被整体创建为物理卷</p></li><li><p><code>pvs</code>，<code>pvdisplay</code>可以查看当前已创建的物理卷</p></li></ul></blockquote></li><li><p>让物理卷变成lvm可用的卷，创建卷组vg</p><p><code>vgcreate vg_name part1 part part3</code></p><blockquote><ul><li>只可以在创建了物理卷的分区|磁盘上创建卷组</li><li><code>vgs</code>，<code>vgdisplay</code>查看当前已创建的卷组</li></ul></blockquote></li><li><p>修改PE块的大小（extends），并创建卷组</p><p><code>vgcreate -s 大小 vg_name  part1 part2 part3</code></p><blockquote><ul><li>指定PE块的大小，作为逻辑卷的最小单位</li></ul></blockquote></li><li><p>在指定卷组上创建逻辑卷lv</p><p><code>lvcreate -n lv_name -L size vg_name</code>结果是PE块大小的整数倍</p><p>​<code>-l 数量</code>直接用PE块的数量表示总大小</p><blockquote><ul><li>不得大于卷组的总大小</li><li><code>lvs</code>，<code>lvdisplay</code>查看当前已创建的逻辑卷</li></ul></blockquote></li><li><p>制作文件系统（格式化）</p><p><code>mkfs.文件系统</code> <code>/dev/mapper/卷组名-逻辑卷名</code> </p><p><code>mkfs -t 文件系统</code><code>/dev/卷组名/逻辑卷名 </code></p><blockquote><p>以上前后的选择自由组合使用，功能一样（逻辑卷的表示方法有两种）</p></blockquote></li><li><p>创建挂载点（<code>mkdir</code>）并挂载（<code>mount</code>，<code>/etc/fstab</code>）</p><p>临时或永久挂载，不赘述</p><blockquote><p>以下内容摘自笔记</p></blockquote></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">分区|磁盘-&gt;查看-&gt;PV(物理卷)-&gt;VG(卷组)-&gt;LV(逻辑卷)-&gt;格式化（制作文件系统）-&gt;创建挂载点-&gt;挂载（关联）-&gt; 临时挂载 永久挂载-&gt;验证 </span><br><span class="line">`一`</span><br><span class="line"><span class="comment"># lsblk</span></span><br><span class="line"><span class="comment"># fdisk /dev/vdb</span></span><br><span class="line"><span class="comment"># lsblk</span></span><br><span class="line"><span class="comment"># pvcreate /dev/vdb1 /dev/vdb2 /dev/vdb3</span></span><br><span class="line"><span class="comment"># pvs# pvdisplay</span></span><br><span class="line"><span class="comment"># pvdisplay /dev/vdb1</span></span><br><span class="line"><span class="comment"># vgcreate myvg /dev/vdb1 /dev/vdb2 /dev/vdb3</span></span><br><span class="line"><span class="comment"># vgs# vgdisplay</span></span><br><span class="line"><span class="comment"># lvcreate -L 200M -n mylv myvg</span></span><br><span class="line"><span class="comment"># lvs</span></span><br><span class="line"><span class="comment"># lvdisplay</span></span><br><span class="line"><span class="comment"># lvs</span></span><br><span class="line"><span class="comment"># ls /dev/mapper/myvg-mylv</span></span><br><span class="line"><span class="comment"># ls /dev/myvg/mylv</span></span><br><span class="line"><span class="comment"># mkfs -t xfs /dev/myvg/mylv</span></span><br><span class="line"><span class="comment"># mkdir /mylv</span></span><br><span class="line"><span class="comment"># df -TH</span></span><br><span class="line"><span class="comment"># df -TH | grep mylv</span></span><br><span class="line"><span class="comment"># mount /dev/myvg/mylv /mylv/# df -TH | grep mylv# echo &#x27;/dev/mapper/myvg-mylv /mylv xfs defaults 0 0&#x27; &gt;&gt; /etc/fstab</span></span><br><span class="line"><span class="comment"># umount /mylv</span></span><br><span class="line"><span class="comment"># mount -a</span></span><br><span class="line"><span class="comment"># df -TH | grep mylv</span></span><br><span class="line"><span class="comment"># lsblk</span></span><br><span class="line"><span class="comment"># vgs</span></span><br><span class="line"><span class="comment"># lvcreate -L 200M -n mylv1 myvg</span></span><br><span class="line"><span class="comment"># lvs</span></span><br><span class="line"><span class="comment"># lsblk</span></span><br><span class="line"><span class="comment"># vgs</span></span><br><span class="line"><span class="comment"># lvcreate -L 50M -n mylv2 myvg</span></span><br><span class="line"><span class="comment"># lsblk</span></span><br><span class="line"><span class="comment"># cd /mylv/</span></span><br><span class="line"><span class="comment"># lsA</span></span><br><span class="line"><span class="comment"># dd if=/dev/zero of=myfile bs=4M count=40</span></span><br><span class="line"><span class="comment"># ls -lh .</span></span><br><span class="line"><span class="comment"># df -Th</span></span><br><span class="line"><span class="comment"># dd if=/dev/zero of=file bs=4M count=10</span></span><br><span class="line"><span class="comment"># ls -lh .</span></span><br><span class="line"><span class="comment"># df -TH</span></span><br><span class="line"><span class="comment"># rm -rf ./*</span></span><br><span class="line">`二` </span><br><span class="line">lsblk</span><br><span class="line"><span class="comment"># parted /dev/vdb mklabel msdos</span></span><br><span class="line"><span class="comment"># parted /dev/vdb mkpart p 100M 400M</span></span><br><span class="line"><span class="comment"># lsblk</span></span><br><span class="line"><span class="comment"># parted /dev/vdb mkpart p 400M 700M   单位换成MiB </span></span><br><span class="line"><span class="comment"># parted /dev/vdb mkpart p  700M 1000M</span></span><br><span class="line"><span class="comment"># lsblk</span></span><br><span class="line"><span class="comment"># pvcreate /dev/vdb&#123;1..3&#125;</span></span><br><span class="line"><span class="comment"># pvs</span></span><br><span class="line"><span class="comment"># vgcreate -s 8M myvg /dev/vdb&#123;1..3&#125;</span></span><br><span class="line"><span class="comment"># vgs# vgdisplay</span></span><br><span class="line"><span class="comment"># lvcreate -L 100M -n mylv1 myvg</span></span><br><span class="line"><span class="comment"># lvs</span></span><br><span class="line"><span class="comment"># lvcreate -l 38 -n mylv myvg</span></span><br><span class="line"><span class="comment"># lvs</span></span><br><span class="line"><span class="comment"># mkdir /mylv</span></span><br><span class="line"><span class="comment"># mkdir /mylv1</span></span><br><span class="line"><span class="comment"># mkfs.xfs /dev/mapper/myvg-mylv</span></span><br><span class="line"><span class="comment"># mkfs.xfs /dev/mapper/myvg-mylv1</span></span><br><span class="line"><span class="comment"># mount /dev/mapper/myvg-mylv /mylv</span></span><br><span class="line"><span class="comment"># mount /dev/myvg/mylv1 /mylv1</span></span><br><span class="line"><span class="comment"># df -TH</span></span><br><span class="line"><span class="comment"># vim /etc/fstab</span></span><br><span class="line">/dev/mapper/myvg-mylv/mylvxfsdefaults00</span><br><span class="line">/dev/mapper/myvg-mylv1/mylv1xfsdefaults00</span><br><span class="line"><span class="comment"># mount -a</span></span><br><span class="line"><span class="comment"># echo $?</span></span><br></pre></td></tr></table></figure><h2 id="删除过程"><a href="#删除过程" class="headerlink" title="删除过程"></a>删除过程</h2><blockquote><p> 逻辑顺序和创建完全相反，以下内容摘自笔记</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># umount /mylv</span></span><br><span class="line"><span class="comment"># umount -l /mylv</span></span><br><span class="line"><span class="comment"># df -TH</span></span><br><span class="line"><span class="comment"># lvremove /dev/myvg/mylv</span></span><br><span class="line"><span class="comment"># lvremove --force /dev/myvg/mylv</span></span><br><span class="line"><span class="comment"># pwd</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># cd</span></span><br><span class="line"><span class="comment"># lvremove --force /dev/myvg/mylv</span></span><br><span class="line"><span class="comment"># lvs</span></span><br><span class="line"><span class="comment"># lvremove /dev/myvg/mylv1</span></span><br><span class="line"><span class="comment"># lvremove /dev/myvg/mylv2</span></span><br><span class="line"><span class="comment"># lvremove --force /dev/myvg/mylv2</span></span><br><span class="line"><span class="comment"># lvs</span></span><br><span class="line"><span class="comment"># vgs</span></span><br><span class="line"><span class="comment"># vgremove myvg</span></span><br><span class="line"><span class="comment"># vgs</span></span><br><span class="line"><span class="comment"># pvremove /dev/vdb&#123;1,2,3&#125;</span></span><br><span class="line"><span class="comment"># pvs</span></span><br><span class="line"><span class="comment"># lsblk</span></span><br><span class="line"><span class="comment"># parted /dev/vdb rm 3</span></span><br><span class="line"><span class="comment"># parted /dev/vdb rm 2</span></span><br><span class="line"><span class="comment"># parted /dev/vdb rm 1</span></span><br><span class="line"><span class="comment"># lsblk</span></span><br></pre></td></tr></table></figure><h2 id="扩容-考点"><a href="#扩容-考点" class="headerlink" title="扩容^考点^"></a>扩容^考点^</h2><blockquote><p>由于课堂录制视频的丢失，以下内容纯为个人理解</p></blockquote><h3 id="扩展和缩减卷组"><a href="#扩展和缩减卷组" class="headerlink" title="扩展和缩减卷组"></a>扩展和缩减卷组</h3><h4 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h4><ol><li><p>添加额外物理卷为卷组增加更多空间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">多分一个区</span><br><span class="line">pvcreate 该分区</span><br></pre></td></tr></table></figure></li><li><p>卷组中添加此物理卷</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgextend 名字 刚分的区</span><br></pre></td></tr></table></figure></li></ol><h4 id="缩减"><a href="#缩减" class="headerlink" title="缩减"></a>缩减</h4><ol><li><p>删除未使用的物理卷，首先需要数据迁移（可以在逻辑卷使用时迁移）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pvmove 分区（物理卷）</span><br></pre></td></tr></table></figure></li><li><p>从卷组中删除物理卷</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgreduce 名字 分区（物理卷）</span><br></pre></td></tr></table></figure></li></ol><h3 id="扩展逻辑卷容量及其文件系统"><a href="#扩展逻辑卷容量及其文件系统" class="headerlink" title="扩展逻辑卷容量及其文件系统"></a>扩展逻辑卷容量及其文件系统</h3><ol><li><p>确保卷组够用，不够先扩卷组</p></li><li><p>扩展逻辑卷容量</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lvextend <span class="code">`-L +数量M或精准数量M`</span>或<span class="code">`-l pe块`</span> 逻辑卷特殊表示两种方式（/dev/mapper/vg-lv或/dev/vg/lv）</span><br></pre></td></tr></table></figure></li><li><p>扩展文件系统</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">如果是xfs文件系统使用：</span><br><span class="line">[root@servera /]# xfs_growfs /mnt/lvm (挂载点)</span><br><span class="line">[root@servera /]# df -h</span><br><span class="line"></span><br><span class="line">如果是ext4文件系统使用：</span><br><span class="line">[root@servera /]# resize2fs /dev/myvg/mylv （lv设备名）</span><br></pre></td></tr></table></figure></li><li><p>同时扩展容量及文件系统<code>-r</code>(偏方，实验环境可以使用)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lvextend -r -L(或-l随便用) 指定扩容大小 逻辑卷名</span><br></pre></td></tr></table></figure></li><li><p>缩小lv:ext文件系统可以缩小，xfs不支持</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1、卸载逻辑卷</span><br><span class="line">2、磁盘检测</span><br><span class="line">   e2fsck -f 逻辑卷</span><br><span class="line">3、缩小文件系统</span><br><span class="line">   resize2fs 逻辑卷 缩后大小</span><br><span class="line">4、缩小逻辑卷</span><br><span class="line">   lvresize -L 1G 逻辑卷名</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>以下内容摘自笔记，未经整理，不予评价</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">扩展流程：</span><br><span class="line">1、扩展lv大小 -L +100M 容量   , -l +40  PE数量</span><br><span class="line">2、将其生效：ext 文件系统 ”resize2fs 设备名“ ，xfs 文件系统   “xfs_growfs 挂载点”</span><br><span class="line"></span><br><span class="line">需求，目前vg=2G，lv=1G，想把lv扩展到2.5G</span><br><span class="line">添加PV </span><br><span class="line">已经添加了/dev/vdb5,如果没添加可以使用：</span><br><span class="line">[root@servera /]# pvcreate /dev/vdb5</span><br><span class="line">扩展vg</span><br><span class="line">先创建pv /dev/vdb5</span><br><span class="line">[root@servera /]# man vgextend </span><br><span class="line">[root@servera /]# vgextend myvg /dev/vdb5</span><br><span class="line">  Volume group &quot;myvg&quot; successfully extended</span><br><span class="line">[root@servera /]# vgdisplay </span><br><span class="line"></span><br><span class="line">扩展lv</span><br><span class="line">[root@servera /]# lvextend -L +1500M /dev/myvg/mylv 或者lvextend -L 2500M /dev/myvg/mylv</span><br><span class="line">[root@servera /]# df -h</span><br><span class="line"></span><br><span class="line">如果是xfs文件系统使用：</span><br><span class="line">[root@servera /]# xfs_growfs /mnt/lvm (挂载点)</span><br><span class="line">[root@servera /]# df -h</span><br><span class="line"></span><br><span class="line">如果是ext4文件系统使用：</span><br><span class="line">[root@servera /]# resize2fs /dev/myvg/mylv （lv设备名）</span><br><span class="line"></span><br><span class="line">$缩小lv:ext文件系统可以缩小，xfs不支持</span><br><span class="line">1、卸载</span><br><span class="line">2、resize2fs 定义缩小后的大小</span><br><span class="line">3、磁盘检测</span><br><span class="line">4、lvresize -L 1G 逻辑卷名</span><br><span class="line"></span><br><span class="line"># umount /dev/myvg/mylv</span><br><span class="line"># resize2fs /dev/myvg/mylv 1G相当于文件系统缩小</span><br><span class="line"># e2fsck -f /dev/myvg/mylv磁盘检测</span><br><span class="line"># resize2fs /dev/myvg/mylv 1G</span><br><span class="line"># lvdisplay </span><br><span class="line"># lvresize -L 1G /dev/myvg/mylvLVM缩小</span><br><span class="line"># lvdisplay</span><br></pre></td></tr></table></figure><h1 id="第八章-实施高级存储功能-有重点"><a href="#第八章-实施高级存储功能-有重点" class="headerlink" title="第八章 实施高级存储功能^有重点^"></a>第八章 实施高级存储功能^有重点^</h1><h2 id="stratis-轻点"><a href="#stratis-轻点" class="headerlink" title="stratis^轻点^"></a>stratis^轻点^</h2><blockquote><p>透明管理，不需要接触底层，精简配置（要多少给多少空间，只限制最大空间）</p></blockquote><blockquote><p> 有关存储的一大块概念，搁置</p><p> 分布式</p><p> 池</p></blockquote><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><ol><li><p>装包起服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">后端接口</span></span><br><span class="line">yum install -y stratis-cli</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">前端服务</span></span><br><span class="line">yum install -y stratisd</span><br><span class="line">systemctl enable --now stratisd.service</span><br></pre></td></tr></table></figure></li><li><p>池操作（联系逻辑卷）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建池</span></span><br><span class="line">stratis pool create 池名 设备（可以有多个）</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">每个池都会在/stratis下创建子目录</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看池</span></span><br><span class="line">stratis pool list</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看指定池的块设备</span></span><br><span class="line">stratis blockdev list 池</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">往池中添加设备</span></span><br><span class="line">stratis pool add-data 池名 设备</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加缓存（一般不用，硬盘够快才当缓存）</span></span><br><span class="line">stratis pool add-cache 池名 设备</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建文件系统（有点像给池分了区，从池中取出一部分使用，被当作挂载点）</span></span><br><span class="line">stratis filesystem create 池名 自定义文件系统名</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建出来的文件系统（就是个叫法）其实是个软连接，连接到一个xfs格式的块设备</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建快照</span></span><br><span class="line">stratis fs(或者filesystem) snapshot 池名 文件系统名 快照名</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">制作一个一模一样的文件系统（xfs格式的块设备）出来</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看详细信息</span></span><br><span class="line">blkid /stratis/池名/文件系统名</span><br><span class="line">或</span><br><span class="line">lsblk --output=UUID /stratis/池名/文件系统名</span><br></pre></td></tr></table></figure></li><li><p>挂载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">永久挂载，尽量使用uuid挂载</span></span><br><span class="line">vim /etc/fstab</span><br><span class="line">uuid 挂载点 xfs _netdev 0 0</span><br><span class="line">或者（别处看的，未经实验证明过。上面那条为上课老师讲的版本）</span><br><span class="line">uuid 挂载点 xfs defaults,x-systemd.requires=stratisd.service 0 0</span><br><span class="line"></span><br><span class="line">mount -a</span><br></pre></td></tr></table></figure><blockquote><p>目的都是都是需要在stratisd.service启动后再挂载，<code>否则系统无法启动！</code></p></blockquote></li><li><p>卸载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除/etc/fstab中的内容</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除文件系统</span></span><br><span class="line">stratis fs destroy 池名 文件系统名（包括快照名）</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除池</span></span><br><span class="line">stratis pool destroy 池名</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>以下内容摘自未整理的笔记</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dnf list|grep stratis</span></span><br><span class="line"><span class="comment"># dnf -y install stratis-cli.noarch stratisd.x86_64</span></span><br><span class="line"><span class="comment"># rpm -ql stratisd|grep service</span></span><br><span class="line"><span class="comment"># systemctl start stratisd.service</span></span><br><span class="line"><span class="comment"># systemctl enable stratisd.service</span></span><br><span class="line"><span class="comment"># systemctl enable --now stratisd.service</span></span><br><span class="line"><span class="comment"># systemctl status stratisd.service</span></span><br><span class="line"><span class="comment"># lsblk</span></span><br><span class="line"><span class="comment"># fdisk /dev/vdb</span></span><br><span class="line"><span class="comment"># lsblk</span></span><br><span class="line"><span class="comment"># stratis pool</span></span><br><span class="line"><span class="comment"># stratis blockdev</span></span><br><span class="line"><span class="comment"># stratis pool create pool1 /dev/vdb1</span></span><br><span class="line"><span class="comment"># stratis pool list</span></span><br><span class="line"><span class="comment"># stratis blockdev</span></span><br><span class="line"><span class="comment"># stratis blockdev list</span></span><br><span class="line"><span class="comment"># stratis pool add-data pool1 /dev/vdb2</span></span><br><span class="line"><span class="comment"># stratis pool list</span></span><br><span class="line"><span class="comment"># stratis blockdev list</span></span><br><span class="line"><span class="comment"># lsblk</span></span><br><span class="line"><span class="comment"># stratis pool list</span></span><br><span class="line"><span class="comment"># stratis filesystem</span></span><br><span class="line"><span class="comment"># stratis filesystem list</span></span><br><span class="line"><span class="comment"># stratis filesystem create pool1 fs1</span></span><br><span class="line"><span class="comment"># stratis filesystem list</span></span><br><span class="line"><span class="comment"># ls /stratis/pool1/fs1</span></span><br><span class="line"><span class="comment"># mkdir /mnt/fs1</span></span><br><span class="line"><span class="comment"># mount /stratis/pool1/fs1 /mnt/fs1</span></span><br><span class="line"><span class="comment"># df -TH</span></span><br><span class="line"><span class="comment"># history</span></span><br><span class="line"><span class="comment"># df -TH</span></span><br><span class="line"><span class="comment"># stratis filesystem create pool1 f2</span></span><br><span class="line"><span class="comment"># mkdir /mnt/f2</span></span><br><span class="line"><span class="comment"># mount /stratis/pool1/f2 /mnt/f2</span></span><br><span class="line"><span class="comment"># df -TH</span></span><br><span class="line"><span class="comment"># stratis pool add-data pool1 /dev/vdb4</span></span><br></pre></td></tr></table></figure><h3 id="快照备份"><a href="#快照备份" class="headerlink" title="快照备份"></a>快照备份</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /mnt/fs1/</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># dd if=/dev/zero of=myfile bs=4M count=25</span></span><br><span class="line"><span class="comment"># ls -lh .</span></span><br><span class="line"><span class="comment"># cd</span></span><br><span class="line"><span class="comment"># stratis filesystem snapshot pool1 fs1 fs1_backup</span></span><br><span class="line"><span class="comment"># cd /mnt/fs1/</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># rm -rf ./*</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># cd</span></span><br><span class="line"><span class="comment"># umount /mnt/fs1</span></span><br><span class="line"><span class="comment"># mkdir /mnt/fs1_backup</span></span><br><span class="line"><span class="comment"># mount /stratis/pool1/fs1_backup /mnt/fs1_backup/</span></span><br><span class="line"><span class="comment"># df -TH</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># cd /mnt/fs1_backup/</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># ls -lh</span></span><br></pre></td></tr></table></figure><h3 id="持久化挂载"><a href="#持久化挂载" class="headerlink" title="持久化挂载"></a>持久化挂载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@servera ~]<span class="comment">#  tail -n 1 /etc/fstab</span></span><br><span class="line">/stratis/pool1/f2/mnt/f2xfs_netdev00</span><br></pre></td></tr></table></figure><blockquote><p><strong><code>stratis和vdo的挂载全部用_netdev而不是defaults，小心搞错了开不机，此处写错了mount -a不会报错！</code></strong></p></blockquote><h2 id="VDO-考点"><a href="#VDO-考点" class="headerlink" title="VDO^考点^"></a>VDO^考点^</h2><ul><li>数据去重压缩的工具（virtual data optimizer），整盘操作，不能在分区的磁盘上操作</li><li>相比stratis，侧重减少磁盘空间，提高吞吐量</li><li>VDO创建的逻辑设备称为VDO卷，与stratis的文件系统 类似，可以像普通文件系统一样被挂载，也可以当作lvm的物理卷（说明再lvm之下）</li><li>精简配置，要多少内存分配多少内存，逻辑大小可以超过物理卷大小</li></ul><blockquote><p> 持久化挂载时用defaults挂载也不会被mount -a识别出报错来，应使用_netdev,一定要<strong>小心小心再小心</strong></p></blockquote><h3 id="操作-1"><a href="#操作-1" class="headerlink" title="操作"></a>操作</h3><ol><li><p>装包起服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install -y vdo</span><br><span class="line">yum install -y kmod-kvdo</span><br><span class="line">systemctl <span class="built_in">enable</span> --now vdo.service</span><br></pre></td></tr></table></figure></li><li><p>创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 不指定逻辑大小默认应该与磁盘一样大，指定可以指任意数</span></span><br><span class="line">vdo create --name=卷名 --device=设备（未分区） --vdoLogical Size=50G</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看</span></span><br><span class="line">lsblk</span><br><span class="line">vodstats</span><br><span class="line">vdo status</span><br><span class="line"><span class="comment"># 详细信息</span></span><br><span class="line">vdostats 设备 --verbose</span><br><span class="line"><span class="comment"># 字面意思</span></span><br><span class="line">vdostats --human-readable</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建挂载点，格式化并挂载</span></span><br><span class="line">正常操作</span><br><span class="line"><span class="comment"># -K可以防止文件系统中未使用的块被立即丢弃，可以让命令更快返回</span></span><br><span class="line">mkfs.sfs -K 设备</span><br></pre></td></tr></table></figure></li><li><p>永久挂载（与stratis相同）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">永久挂载，尽量使用uuid挂载</span></span><br><span class="line">vim /etc/fstab</span><br><span class="line">uuid 挂载点 xfs _netdev 0 0</span><br><span class="line">或者（别处看的，未经实验证明过。上面那条为上课老师讲的版本）</span><br><span class="line">uuid 挂载点 xfs defaults,x-systemd.requires=vdo.service 0 0</span><br><span class="line"></span><br><span class="line">mount -a</span><br></pre></td></tr></table></figure><blockquote><p>目的都是需要在vdo.service启动后再挂载，<code>否则系统无法启动！</code></p></blockquote><blockquote><p>关机重启时有可能会因为服务已经停止但磁盘挂载没有卸载而卡住，强制关机（poweroff）即可</p></blockquote></li><li><p>启动与停止，激活与激死</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vdo start -n 卷名</span><br><span class="line">vdo stop -n 卷名</span><br><span class="line">vdostats </span><br><span class="line">vdo active -n 卷名</span><br><span class="line">vdo deactive -n 卷名</span><br><span class="line"></span><br><span class="line"># 必须启动并激活才能使用</span><br></pre></td></tr></table></figure></li><li><p>启动和关闭去重等</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man手册查</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum list|grep vdo</span></span><br><span class="line"><span class="comment"># yum -y install kmod-kvdo.x86_64 vdo.x86_64</span></span><br><span class="line"><span class="comment"># rpm -ql vdo|grep servi</span></span><br><span class="line"><span class="comment"># systemctl enable --now vdo</span></span><br><span class="line"><span class="comment"># man vdo</span></span><br><span class="line"><span class="comment"># man vdo|grep \</span></span><br><span class="line"><span class="comment">## lsblk</span></span><br><span class="line"><span class="comment"># vdo create --name=vdo0 --device=/dev/vdb --vdoLogicalSize=10T</span></span><br><span class="line"><span class="comment"># vdo li</span></span><br><span class="line"><span class="comment"># vdo list</span></span><br><span class="line"><span class="comment"># vdo status vdo0</span></span><br><span class="line"><span class="comment"># vdo status --name=vdo0</span></span><br><span class="line"><span class="comment"># vdo start --name=vdo0</span></span><br><span class="line"><span class="comment"># vdo stop --name=vdo0</span></span><br><span class="line"><span class="comment"># vdo start --name=vdo0</span></span><br><span class="line"><span class="comment"># mkfs.xfs -K /dev/mapper/vdo0</span></span><br><span class="line"><span class="comment"># vdo list</span></span><br><span class="line"><span class="comment"># mkdir /mnt/vdo0</span></span><br><span class="line"><span class="comment"># mount /dev/mapper/vdo0 /mnt/vdo0</span></span><br><span class="line"><span class="comment"># df -TH</span></span><br><span class="line"><span class="comment"># vdostats --human-readable</span></span><br><span class="line"><span class="comment"># cd /mnt/vdo0/</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># dd if=/dev/zero of=file bs=10M count=10</span></span><br><span class="line"><span class="comment"># vdostats --human-readable</span></span><br><span class="line"><span class="comment"># df -TH</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># ls -lh</span></span><br><span class="line"><span class="comment"># du -sh .</span></span><br><span class="line"><span class="comment"># for i in &#123;1..10&#125;;do cp file file$&#123;i&#125;;done</span></span><br><span class="line"><span class="comment"># du -sh .</span></span><br><span class="line"><span class="comment"># ls -lh</span></span><br><span class="line"><span class="comment"># vdostats --human-readable</span></span><br><span class="line"><span class="comment"># df -TH</span></span><br><span class="line"><span class="comment"># for i in &#123;11..21&#125;;do cp file file$&#123;i&#125;;done</span></span><br><span class="line"><span class="comment"># df -TH</span></span><br><span class="line"><span class="comment"># vdostats --human-readable</span></span><br><span class="line"><span class="comment"># ls -lh</span></span><br><span class="line"><span class="comment"># du -sh .</span></span><br><span class="line"><span class="comment"># for i in &#123;21..41&#125;;do cp file file$&#123;i&#125;;done</span></span><br><span class="line"><span class="comment"># du -sh .</span></span><br><span class="line"><span class="comment"># ls -lh</span></span><br><span class="line"><span class="comment"># vdostats --human-readable</span></span><br><span class="line"><span class="comment"># df -TH</span></span><br><span class="line"><span class="comment"># vdostats --human-readable持久化挂载[root@servera ~]</span></span><br><span class="line"><span class="comment"># tail -n 1 /etc/fstab /dev/mapper/vdo0/mnt/vdo0xfs_netdev00</span></span><br></pre></td></tr></table></figure><blockquote><p>压缩重复数据达到减少存储的目的</p></blockquote><p><code>du -sh 目录</code>查看目录大小</p><h1 id="第九章-访问网络文件系统"><a href="#第九章-访问网络文件系统" class="headerlink" title="第九章 访问网络文件系统"></a>第九章 访问网络文件系统</h1><h2 id="NFS"><a href="#NFS" class="headerlink" title="NFS"></a>NFS</h2><blockquote><p>一个服务端可以共享多个目录，一个目录可以共享给多个客户端，一个客户端可以接收多个服务端的共享</p></blockquote><h3 id="服务端-不考"><a href="#服务端-不考" class="headerlink" title="服务端^不考^"></a>服务端^不考^</h3><blockquote><ol><li><p>装包</p><p><code>yum install -y nfs-utils</code></p></li><li><p>刷新并从手册中获取帮助</p><p><code>mandb</code></p><p><code>man exports</code></p><p><code>/EX</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">EXAMPLE</span><br><span class="line">       # sample /etc/exports file</span><br><span class="line">       /               master(rw) trusty(rw,no_root_squash)</span><br><span class="line">       /projects       proj*.local.domain(rw)</span><br><span class="line">       /usr            *.local.domain(ro) @trusted(rw)</span><br><span class="line">       /home/joe       pc001(rw,all_squash,anonuid=150,anongid=100)</span><br><span class="line">       /pub            *(ro,insecure,all_squash)</span><br><span class="line">       /srv/www        -sync,rw server @trusted @external(ro)</span><br><span class="line">       /foo            2001:db8:9:e54::/64(rw) 192.0.2.0/24(rw)</span><br><span class="line">       /build          buildhost[0-9].local.domain(rw)</span><br></pre></td></tr></table></figure></li><li><p>编辑配置文件</p><blockquote><p>主配置文件<code>/etc/exports</code></p><p>一般情况下创建子配置文件,且后缀必须为.exports<code>/etc/exports.d/自定义.exports</code></p></blockquote><p>按照示例格式编辑配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">共享目录共享用户（或主机IP（ipv4,ipv6），域名）（权限）</span><br><span class="line"><span class="comment"># 示例：共享目录为/share给所有主机的所有用户共享,权限为读写</span></span><br><span class="line">/share   *(rw)</span><br></pre></td></tr></table></figure></li><li><p>创建对应位置的共享目录，并给目录修改权限</p><p><code>chmod 755 目录</code>给目录以执行权限，避免客户端无法使用</p></li><li><p>启服务</p><p>NFS服务端配置需要三个服务，分别是^前两个不重要,遇到问题可用来排错^</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nfs-mountd.service（这个服务是我通过systemctl list-units |grep mountd查出来的）</span><br><span class="line">rpcbind.service </span><br><span class="line">nfs-server.service</span><br></pre></td></tr></table></figure><p>一般情况下，前两个服务是默认启动的，所以只需对第三个服务进行操作</p><p><code>systemctl enable --now nfs-server.service</code></p><blockquote><p>如果无法启动服务，有可能是未创建对应挂载点，也有可能是配置文件中格式有误，根据报错解决问题。</p><p>修改配置文件需要重启该服务</p><p><code>systemctl restart nfs-server.service</code></p></blockquote></li><li><p>本地验证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@servera /]# showmount -e localhost</span><br><span class="line">Export list for localhost:</span><br><span class="line">/share *</span><br></pre></td></tr></table></figure><blockquote><p>若验证失败，对配置文件，是否启动服务进行，是否创建挂载点进行排查</p></blockquote></li><li><p>开启防火墙</p><p>通过命令查找需要放行的服务</p><p><code>firewall-cmd --get-services | egrep &#39;nfs|mount|rpc&#39;</code></p><p>确定需要放行的服务为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nfs</span><br><span class="line">rpc-bind</span><br><span class="line">mountd</span><br></pre></td></tr></table></figure><p>一次放行仨服务</p><p><code>firewall-cmd --permanent --add-service=nfs --add-service=rpc-bind --add-service= mountd</code></p><p>重启服务</p><p><code>firewall-cmd --reload</code></p></li><li><p>在其他机器上验证，若成功接收则说明共享成功，服务端配置成功</p></li></ol></blockquote><h3 id="客户端-考"><a href="#客户端-考" class="headerlink" title="客户端^考^"></a>客户端^考^</h3><ol><li><p>验证是否能接受到共享</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@serverb ~]<span class="comment"># showmount -e servera</span></span><br><span class="line">Export list <span class="keyword">for</span> servera:</span><br><span class="line">/share1 *</span><br></pre></td></tr></table></figure><blockquote><p>若报错如：clnt_create: RPC: Unable to receive，结合之前，排除其他错误，检查防火墙是否放行，放行后是否重启</p></blockquote></li><li><p>挂载到本地目录</p><ol><li><p>临时挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 挂载servera共享的/share目录到当前的/share目录下</span></span><br><span class="line">mount servera:/share /share/</span><br><span class="line">或者指定文件系统</span><br><span class="line">mount -t xfs servera:/share /share/</span><br></pre></td></tr></table></figure><blockquote><p>若挂载失败，排除是否为无法解析域名的问题，用共享点的ip挂载</p></blockquote></li><li><p>永久挂载</p><p>在<code>/etc/fstab</code>中加入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">servera：/share/sharexfsdefaults00</span><br></pre></td></tr></table></figure><p><code>mount -a</code></p></li><li><p>autofs自动挂载</p></li></ol></li></ol><h2 id="autofs-考"><a href="#autofs-考" class="headerlink" title="autofs^考^"></a>autofs^考^</h2><ul><li><p>市场痛点：nfs持续挂载会占用网络资源</p></li><li><p>产品特点：autofs（自动挂载器），按需挂载，不需卸载</p></li></ul><ol><li><p>装包</p><p><code>yum install -y autofs</code></p></li><li><p>修改主配置文件</p><p>在<code>/etc/auto.master中添加一行</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/自定义挂载点/etc/auto.挂载点名</span><br></pre></td></tr></table></figure></li><li><p>复制示例配置文件并修改</p><p><code>cp /etc/auto.misc /etc/auto.挂载点名</code></p><p>修改内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">自定义目录-fstype=nfs,rwNFS服务端主机名（或ip）：/NFS共享目录</span><br></pre></td></tr></table></figure><blockquote><ul><li><p>将NFS服务端共享的目录，映射到当前主机挂载点下的指定目录</p></li><li><p>挂载点需要提前创建，指定目录可以不存在，autofs挂载时会自动创建</p></li></ul></blockquote></li><li><p>起服务</p><blockquote><ul><li><p>不是一配置成功就可以通过<code>df -Th</code>查看到挂载信息，在有需求的情况下才可以看到，所以没有看到挂载信息不一定是没配置成功，可以在服务端创建一个文件再在客户端查看，验证是否成功</p></li><li><p>如果配置autofs挂载的目录已经被挂载过，则需要先取消之前的挂载才能生效（不会提示你当前目录已经被挂载）</p></li></ul></blockquote></li><li><p>over</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># df -TH</span></span><br><span class="line"><span class="comment"># umount /share </span></span><br><span class="line"><span class="comment"># vim /etc/fstab 注释掉自动挂载</span></span><br><span class="line"><span class="comment"># mount -a</span></span><br><span class="line"><span class="comment"># df -TH</span></span><br><span class="line"><span class="comment"># showmount -e 172.25.250.11</span></span><br><span class="line"><span class="comment"># yum -y install autofs</span></span><br><span class="line"><span class="comment"># systemctl enable --now autofs.service </span></span><br><span class="line"><span class="comment"># systemctl status autofs.service </span></span><br><span class="line"><span class="comment"># rpm -qc autofs</span></span><br><span class="line"><span class="comment"># vim /etc/auto.master</span></span><br><span class="line">/share/etc/auto.misc <span class="comment">#挂载到share目录的时候，应用misc配置文件</span></span><br><span class="line"><span class="comment"># vim /etc/auto.misc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#cd             -fstype=iso9660,ro,nosuid,nodev :/dev/cdrom</span></span><br><span class="line">nfs_share       -fstype=nfs,rw                  172.25.250.11:/nfs_share</span><br><span class="line">相当于mount 172.25.250.11:/nfs_share /share/nfs_share</span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl restart autofs.service </span></span><br><span class="line"><span class="comment"># df -TH</span></span><br><span class="line"><span class="comment"># cd /share/</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># df -TH</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># cd nfs_share</span></span><br><span class="line"><span class="comment"># df -TH</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># cd /share/</span></span><br><span class="line"><span class="comment"># ls</span></span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 以下内容为上课时录音翻译的老师讲课实况，没用，大约有2000多个字</span></span><br><span class="line">这两个配置文件呢？他是有关联性的。我们称为。起伏。好我实验。</span><br><span class="line"></span><br><span class="line">那这个新的挂了点。别说了，我们再创建一个安慰。嗯。增加一点。增加一点点。笔画名称的。三八百兆。架子名称。查看一下。那亲第一个安微创建OK。上下文的共享目录。然后自动。专家系统XFSDBOX。FSTABLE前面没写完呢，所以说后边不能补全。帽子大衣看一下本机的挂载面积。那些来呢？我们配置文件配置。CPETC现在都是服务端啊古装配置。F4点地。那个叫。那现在呢？改个名字叫LV。别说我们现在是增加了，对吧？共享我们的安危目录。给大蛇丸。看读写。重启我们的NFS服装。查看发达共享内容。啊。那您说一会儿呢？我们使用丝袜B来实现自动挂载我们的。8.5的安危。那么在考试的时候呢？接下来的步骤是需要我们做到下上面这些呢？都是。我们自己了。嗯，我们自己做了服装,我们也做。下边上边。不需要自己做。好，那么共享有了。沙币是我们的后端。那首先，你看一下。首先，你看一下他的共享是正常的，正常吗？玩家一名。闲来无事，现在我们使用IP吧。IT什么想法？行不行？海洋收吗？翻译？安微。梦想过来了。共享过来，本地呢,我们放假。有时候我们需求啊。就挂载到本地的安徽目录。我想创建。那既然要实现自动挂了。亚姆。嗯，这个是他的。在软件能打开使用这个配置文件。把这个关键的一点理解OK搞定了。我们使用哎呀反思。喂点到本地的这个目录的时候使用这个配置文件。帮我们。当我们对。这个是之前的文件，对吧？先保存一下。这个的两个文件对比来看，我在这呢，再打开一个红装。不对你了，大家理解不了。厉害的杀币。这边呢？我打开主配置文件就要ETC。凹凸点吗？这边我们还是打开它吧。二打开。这个文件是我们从。不知道他，对吧？烟花。我对我们这个目录下的。这句话的意思是当对我们这个目录下的。CD目录操作的时候。开会行后边这个选项来进行挂。我不知道大家这个能不能理解这个能理解。来来来99。最近老部下的。CD目录操作的时候身后边想象。换言之。根据我们这边一当我们对AV这个目录下的。比如说一个3号目录操作的时候。我们就使用。后边的选项挂载。好，我现在写完啊，想洗了。被一个山坡目录操作的时候。照葫芦画瓢。泰华，我们是NFS文件系统。学校的读写。小黑鞋了，如果不需要有东西。那你挂谁呀？文化的是NFS。诶呀。我们要把骚ALV目录。现在看起来舒服点。这个时候A的LV挂不来，我可以写完了。打开。那么呆在理解一下这个理解了就搞定不理解呢？保定。再来解释一下，现在我们重新创建了一个文件，对吧？当我们对LV慕夏的。一个三宝目录操作的时候使用后边这个选项自动化。你说让他稍微这个LV。挂到我们本地的一个山峰公路，同时呢，提供这样的选项。啊到底。能不能自动关呀？是没有一个单号啊？是没有？这个问题非常好，稍等一下。马上就看到这个问题了啊。哎，有个学长说这个野三坡目录不存在，需不需要创建。不需要。不需要双肩,我们马上去验证这个问题啊。好，这样我们本地的。挂载点酥油。第二不到颓势。3万ALV目录没有挂到本地目录来吧。没有好，那如何挂了？CD到LV目录。当前目视没有一个三口的，对吧？我们直接CD可不可以？CD的3号可不可以？按照正常原理来说，他可能失败,您没有这个目录，对吧？他说现在CD也是失败的。对吧？人类不棒棒闹。希望我们的服务凹凸FS。查看无状态。这个一般就没问题了，但是我还查一下。万年单机。张霞没有这个目录，我们CD。会出现什么样的结果呢？戴上了吧。这个目录可以自动创建。而且蝙蝠放铁齿。安雅保安室呢？会实现自动化的。这个就是我们CFA档的一个考试题。打个和这个不一样。原理是一样的。正在，嗯，CD这样操作的时候，他就实现了一个触发似的。本身这个目录不存在了，按照我们前面讲的知识，你没有目的。但是当我们去。我操作他就会实现自动办理。一室3号这个目录没有了原本。那我们可以再写个配置文件在写一个。这个35CD出来之后。好想回家，先回去。现在有这个目录，对吧？现在有些洗面奶说。我们这个目录能不能提前给他充点出来？好。威埃姆。让我们就不能拿这个举例子了，对吧？凹凸F，S麻烦。MASTER。YYP。挂载到我们本地的。我看一下搜了一个共享。换一个。老婆构造。好，我们使用SASHARE怎么讲啊？目录。下面这两个我都用了，对吧？来C闪。凉作文改一下叫SA。这个文件呢？奥凸点。MC小。保存。保存。CPETC。凹凸点MASTER。验证配置文件叫凹凸点SASHARE吧。编辑后边这个文件。嗯。最高海拔。算了。嗯。OQ点MASTER。别说话，到这个目录的时候，我们使用后边这个配置文件。好的。我们直接把吗？你是谁？DEARMRC。YES。这个注释。嗯，当切换到我们的SASHARE下边，比如说，现在我们来建议。我不要。一个三口。我该怎么写呢？其实刚才是一样的。TYPE等于FS读写。幻想的。发的共享目录是什么？IC下吧。哎呀阿SA晒。来呢吧。在我们本地的。IC单沐夏先忘掉这个梦的时候，它会自动划来。那么上班我验证是这个目录没有放假，对吧？不需要你去创建下。川芎的服务。喂STARRORTOFS。DNF港铁。现在。ICSHARE。他还挂了我的MNT目录下，这是我们之前做的实验。卸载掉。调料。再来验证。现在只有刚才那一个啊。CD。CSC。当前录像没有有单号。当然，如果我们学画的话，他肯定能。放假并发的，对吧？那么一说我们现在就要手工创建。会不会快问题啊？权限不足。桥下。LSLD。当前目录是我自己的，所以说你要是自己创业出来能行吧？不，可以,不可以。那你CD。可以。是因为。从侧面来说呢，这个目录即使网不创建。相当于才是隐藏目录隐藏起来了。你创建权限不足，这个是福来管理。快递放假吗？放假的话会。好。有没有挂了？换来。我妹妹不在前边座了吗？已经。RESTART我不是在四一部座。对吧？我修改配置文件已经重启。所以说在总结下。提了一个非常好的问题。别说我们在做这个二级目录。放线。我重启之后呢，其实他已经。我是说，存在了还说其他的原因，这个你手工创太失败了，对吧？这个处罚是就是我们对这个目录进行。切换目录这样操作的时候。他就会自动自动挂载我们的。无线蓝牙POS呢？到我们本地。这个是一个难点，也是一个重点还是一个？远程各位裁判没问题呢，很飘逸。大家提一下。这个需要大家课下把这个多错了。啊。</span><br></pre></td></tr></table></figure><h1 id="第十章-控制系统启动过程"><a href="#第十章-控制系统启动过程" class="headerlink" title="第十章 控制系统启动过程"></a>第十章 控制系统启动过程</h1><h2 id="大概流程"><a href="#大概流程" class="headerlink" title="大概流程"></a>大概流程</h2><table><thead><tr><th align="center">ID</th><th></th><th></th></tr></thead><tbody><tr><td align="center">1</td><td>BIOS | EFI</td><td>Device (HD, USB, CDROM, iPXE)</td></tr><tr><td align="center">2</td><td>mbr</td><td>grub2</td></tr><tr><td align="center">3</td><td>linux</td><td>&#x2F;boot&#x2F;grub2&#x2F;grub.cfg <strong>kernel</strong></td></tr><tr><td align="center">4</td><td>initrd</td><td>&#x2F;boot&#x2F;grub2&#x2F;grub.cfg <strong>ramfs</strong></td></tr><tr><td align="center">5</td><td>…</td><td>driver</td></tr><tr><td align="center">6</td><td>fstab</td><td>眼熟？自动挂载！挂载磁盘，分区，网络文件系统。</td></tr><tr><td align="center">7</td><td>service</td><td>开机启动、多个后台守护进程</td></tr><tr><td align="center">8</td><td>target（图形化、字符界面）</td><td>login（身份验证）</td></tr></tbody></table><h2 id="INIT启动级别"><a href="#INIT启动级别" class="headerlink" title="INIT启动级别"></a>INIT启动级别</h2><table><thead><tr><th>运行级别</th><th></th><th></th></tr></thead><tbody><tr><td>0</td><td>系统停机状态，系统默认运行级别不能设为0，否则不能正常启动</td><td>不用</td></tr><tr><td>1</td><td>单用户工作状态，root权限，用于系统维护，禁止远程登陆（破解密码）</td><td>单用户</td></tr><tr><td>2</td><td>多用户状态(没有NFS)</td><td>没有NFS</td></tr><tr><td>3</td><td>完全的多用户状态(有NFS)，登陆后进入控制台命令行模式</td><td>有NFS</td></tr><tr><td>4</td><td>系统未使用，保留</td><td>未启用</td></tr><tr><td>5</td><td>X11控制台，登陆后进入图形GUI模式</td><td>图形化</td></tr><tr><td>6</td><td>系统正常关闭并重启，默认运行级别不能设为6，否则不能正常启动</td><td>不用</td></tr></tbody></table><h3 id="target-现在的启动级别"><a href="#target-现在的启动级别" class="headerlink" title="target(现在的启动级别)"></a>target(现在的启动级别)</h3><table><thead><tr><th>目标</th><th>用途</th></tr></thead><tbody><tr><td>graphical.target</td><td>带图形及字符终端的多用户模式</td></tr><tr><td>multi-user.target</td><td>仅带字符终端的多用户模式</td></tr><tr><td>rescue.target</td><td>仅初始化基本系统，需要root账户登录</td></tr><tr><td>emergency.target</td><td>加载内存文件系统，只读挂载根文件系统，  需要root账户登录</td></tr></tbody></table><p><code>systemctl get-default</code>查看默认启动目标</p><p><code>systemctl isolate graphical.target</code>临时切换图形化（或者别的）</p><p><code>systemctl set-deafult graphical.target</code> 设置默认</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl cat default.target</span></span><br><span class="line"><span class="comment"># systemctl get-default查看默认启动目标</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl isolate multi-user.target切换多用户级别</span></span><br><span class="line"><span class="comment"># systemctl isolate graphical.target切换图形化</span></span><br><span class="line"><span class="comment"># systemctl set-deafult graphical.target</span></span><br><span class="line"><span class="comment"># init 3带网络的多用户</span></span><br><span class="line"><span class="comment"># init 5图形化</span></span><br><span class="line"></span><br><span class="line">CONSOLE</span><br><span class="line"><span class="comment"># startx开启图形化</span></span><br></pre></td></tr></table></figure><h2 id="破解root密码-必考，不会必挂"><a href="#破解root密码-必考，不会必挂" class="headerlink" title="破解root密码^必考，不会必挂^"></a>破解root密码^必考，不会必挂^</h2><ol><li><p>重启系统</p></li><li><p>赶紧按e</p></li><li><p>在linux开头的行（大长行）末添加<code>rd.break console=tty0</code></p><blockquote><p>中断正常启动过程并分配终端</p></blockquote></li><li><p><kbd>ctrl</kbd>x继续</p></li><li><p>等</p></li><li><p>此时默认文件系统为只读挂载,更改为读写挂载，remount是重新挂载的意思</p><p><code>mount -o remount,rw /sysroot</code></p></li><li><p>切换根目录</p><p><code>chroot /sysroot</code></p></li><li><p>切换密码</p><p><code>echo mima | passwd --stdin root</code></p><blockquote><p>也可以用passwd，但是看不见修改的密码是什么，为了避免出错，不建议使用</p></blockquote></li><li><p>创建根目录下的隐藏文件，用来标记selinux的安全上下文</p><p><code>touch /.autorelabel</code></p></li><li><p>退出两次</p><p><kbd>ctrl</kbd>d</p><p><kbd>ctrl</kbd>d</p></li></ol><h2 id="解决因fstab写入错误而不能启动的问题"><a href="#解决因fstab写入错误而不能启动的问题" class="headerlink" title="解决因fstab写入错误而不能启动的问题"></a>解决因fstab写入错误而不能启动的问题</h2><table><thead><tr><th>问题</th><th>结果</th></tr></thead><tbody><tr><td>文件系统损坏</td><td>systemd会尝试fsck，无法自动修复时进入 emergency  shell</td></tr><tr><td>&#x2F;etc&#x2F;fstab中设备名或UUID不存  在</td><td>systemd等待设备可用，否则系统会在超时后进入 emergency  shell</td></tr><tr><td>&#x2F;etc&#x2F;fstab中挂载点问题</td><td>系统将进入emergency  shell</td></tr></tbody></table><ul><li>前面与改密码步骤一致</li></ul><ol><li><p>重启系统</p></li><li><p>赶紧按e</p></li><li><p>在linux开头的行（大长行）末添加<code>rd.break console=tty0</code></p><blockquote><p>中断正常启动过程并分配终端</p></blockquote></li><li><p><kbd>ctrl</kbd>x继续</p></li><li><p>等</p></li><li><p>此时默认文件系统为只读挂载,更改为读写挂载，remount是重新挂载的意思</p><p><code>mount -o remount,rw /sysroot</code></p></li><li><p>切换根目录</p><p><code>chroot /sysroot</code></p></li><li><p>注掉可能出错的新添加的行，先保证可以启动再排错</p><p><code>vim /etc/fstab</code></p></li></ol><h2 id="grub菜单加密"><a href="#grub菜单加密" class="headerlink" title="grub菜单加密"></a>grub菜单加密</h2><ol><li>使用<code>grub2-mkpasswd-pbkdf2</code>生成密码（类似passwd）</li></ol><ul><li><p>非交互式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@serverb ~]<span class="comment"># (echo redhat;echo redhat)|grub2-mkpasswd-pbkdf2</span></span><br><span class="line">Enter password: </span><br><span class="line">Reenter password: </span><br><span class="line">PBKDF2 <span class="built_in">hash</span> of your password is grub.pbkdf2.sha512.10000.675A23257D79CFC926D37844DE6280E0803FE32C9DF60015C80A5D54FA83D8615A5F22D9FA084088A1AFABB4C6F78EA335C0051165655644126BCD8FDC53CBD6.3F205F85B4E280BCABE13C9132A31CCC6F48D148CB0E89297501B5974B2293DA73092FB851D310F97DA05026EE7B4A6C27B638A2B99B621D1D8E446E1773670B</span><br></pre></td></tr></table></figure></li><li><p>交互式</p><p><code>grub2-mkpasswd-pbkdf2</code><br>同样生成一串加密字符</p></li></ul><ol start="2"><li><p>查找并编辑配置文件</p><p><code>rpm -qc grub2-pc</code></p><p><code>vim /boot/grub2/grub.cfg</code></p><blockquote><p>此处由于实验环境的不同会有不同的情况,以下为老师回复原文：</p><p>我们讲系统启动过程的时候呢，说这个分区表它有两种，第一种是MBR，第二种呢是GPT，那一般呢，MBR这种分区表就是我们这种加密方式是可以的，但是如果是用GPT这种分区表的话，就是出现了你，你上边儿截图的那种情况，这个就不适用于我们这个grub去加密的这个过程了，因为grub对应的是MBR这种分区表。</p><p>如果要修改系统启动磁盘的分区表，使用parted工具，fdisk工具去更改它系统启动的这个分区，但是你改完了之后系统就起不来了，一般是在装系统的时候来搞这个事情。</p><p>而且，你看你的课程设置是不是设成了124134之类的，我们演示的时候是294吧，反正不同的课程，他的引导方式不一样，这个我们知道就可以了，实在你要想做的话，你就切换一下课程去看一下servera，b</p></blockquote><p>复制关键三行放到<code># BEGIN /etc/grub.d/01_users</code>上面，也不能在别的代码块里面，修改其内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set superusers=&quot;自定义用户&quot;</span><br><span class="line">export superusers</span><br><span class="line">password_pbkdf2 用户名 加密后的一串密钥 </span><br></pre></td></tr></table></figure><blockquote><p>自定义的用户与系统定义的用户不是同一种用户，不需要系统中有</p></blockquote></li><li><p>此时重启时按<code>e</code>，需要先输入用户名密码才可以继续修改密码或者其他操作，加密成功</p></li></ol><h2 id="修复文件系统"><a href="#修复文件系统" class="headerlink" title="修复文件系统"></a>修复文件系统</h2><h3 id="挂载光盘修复系统"><a href="#挂载光盘修复系统" class="headerlink" title="挂载光盘修复系统"></a>挂载光盘修复系统</h3><ol><li><p>实验中所需的光盘位置在物理机（foundation0）的&#x2F;content下，所以需要切换物理机的登录用户为root（普通用户没有权限访问）</p><blockquote><p>其实好像不切换也没什么影响</p></blockquote></li><li><p>virt-manager打开要修复系统的窗口，添加一个光盘</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Add Hardware </span><br><span class="line">-&gt; storage </span><br><span class="line">-&gt; Device type:CDROM device </span><br><span class="line">-&gt; manage</span><br><span class="line">-&gt; browse local</span><br><span class="line">-&gt; 选择路径为/content/rhel8.2/x86_64/isos（也可以选其他的）</span><br></pre></td></tr></table></figure><blockquote><p>课上实验单用户启动操作失败，看了n遍没看明白,实在不想研究为什么了</p></blockquote></li><li><p>设置光盘启动首选项（Boot option）</p><p>把已经添加的光盘拖到最上面</p></li><li><p>依次选择troubleshot…rescue(略)</p><p>实在是不想研究了</p></li><li><p>不管前面怎么操作,开机后依旧执行下面一堆</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># reboot</span><br><span class="line"># e</span><br><span class="line"># 在Linux开头的行末添加rd.break console=tty0</span><br><span class="line"># linux.....&lt;end&gt; rd.break console=tty0</span><br><span class="line"># ctrl+x</span><br><span class="line"># 默认为只读挂载</span><br><span class="line"># 更改为读写挂载，remount是重新挂载的意思</span><br><span class="line"># mount -o remount,rw /sysroot</span><br><span class="line"># 切换根目录 </span><br><span class="line"># chroot /sysroot</span><br></pre></td></tr></table></figure></li><li><p>创建一个目录来挂载光盘</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/cdrom 自定义目录</span><br></pre></td></tr></table></figure></li><li><p>再根据不同需求从光盘执行我不了解的操作</p></li></ol><h2 id="分区表备份恢复"><a href="#分区表备份恢复" class="headerlink" title="分区表备份恢复"></a>分区表备份恢复</h2><p>MBR</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd-rescue挂载光盘修复</span><br></pre></td></tr></table></figure><p>GPT（课后作业，自己研究）</p><h2 id="单用户模式-rescue模式"><a href="#单用户模式-rescue模式" class="headerlink" title="单用户模式|rescue模式"></a>单用户模式|rescue模式</h2><table><thead><tr><th align="center">ID</th><th align="center">Single</th><th align="center">Rescue（光盘|root权限）</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">passwd</td><td align="center">passwd</td></tr><tr><td align="center">2</td><td align="center">&#x2F;etc&#x2F;fstab</td><td align="center">&#x2F;etc&#x2F;fstab</td></tr><tr><td align="center">3</td><td align="center">-</td><td align="center">grub.cfg</td></tr><tr><td align="center">4</td><td align="center">-</td><td align="center">dpt</td></tr><tr><td align="center">5</td><td align="center">-</td><td align="center">grub2&#x2F;mbr</td></tr></tbody></table><h1 id="第十一章-防火墙"><a href="#第十一章-防火墙" class="headerlink" title="第十一章 防火墙"></a>第十一章 防火墙</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># Linux内核的五大模块</span></span><br><span class="line">进程调度模块</span><br><span class="line">进程间通信模块</span><br><span class="line">内存管理模块</span><br><span class="line">文件系统模块</span><br><span class="line">网络接口模块</span><br></pre></td></tr></table></figure><ul><li>防火墙包含于网络接口模块，以前在网络层，现在大多在应用层</li></ul><h2 id="区域"><a href="#区域" class="headerlink" title="区域"></a>区域</h2><table><thead><tr><th align="center">区域</th><th align="left">默认配置</th></tr></thead><tbody><tr><td align="center">trusted</td><td align="left">允许所有进站通信</td></tr><tr><td align="center">home</td><td align="left">拒绝除与出站有关的通信或预定义服务(ssh,mdns,ipp- client,samba-client,dhcpv6-client)以外的所有进站通信</td></tr><tr><td align="center">internal</td><td align="left">拒绝除与出站有关的通信或预定义服务(ssh,mdns,ipp- client,samba-client,dhcpv6-client)以外的所有进站通信</td></tr><tr><td align="center">work</td><td align="left">拒绝除与出站有关的通信或预定义服务(ssh,ipp- client,dhcpv6-client)以外的所有进站通信</td></tr><tr><td align="center">public</td><td align="left">默认区域，拒绝除与出站有关的通信或预定义服务  (ssh,dhcpv6-client)以外的所有进站通信</td></tr><tr><td align="center">external</td><td align="left">拒绝除与出站有关的通信或预定义服务(ssh)以外的所有进站通  信，穿过该区域的IPv4出站通信将出站源伪装为出站网络接口  地址</td></tr><tr><td align="center">dmz</td><td align="left">拒绝除与出站有关的通信或预定义服务(ssh)以外的所有进站通  信</td></tr><tr><td align="center">block</td><td align="left">拒绝除与出站有关的通信以外的所有进站通信</td></tr><tr><td align="center">drop</td><td align="left">丢弃除与出站有关的通信以外的所有进站通信(包括ICMP错误  信息)</td></tr></tbody></table><p>不同的区域有不同的规则,默认使用的区域为public</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">每个包进入系统都检查源地址，应规则用源地址所关联区域的</span><br><span class="line">若无关联区域，使用进站接口网络关联的区域</span><br><span class="line">若未关联区域，则使用系统配置的默认区域</span><br><span class="line">若未匹配任何允许规则，执行默认拒绝</span><br></pre></td></tr></table></figure><h2 id="常见操作-没事儿多查查"><a href="#常见操作-没事儿多查查" class="headerlink" title="常见操作^没事儿多查查^"></a>常见操作^没事儿多查查^</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 装包</span></span><br><span class="line"><span class="comment"># dnf list|grep firewal</span></span><br><span class="line"><span class="comment"># dnf -y install firewalld.noarch</span></span><br><span class="line"><span class="comment"># dnf -y install firewall-config.noarch</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 起服务(防火墙也是一个服务)</span></span><br><span class="line"><span class="comment"># systemctl enable --now firewalld</span></span><br><span class="line"><span class="comment"># systemctl status firewalld</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前防火墙状态</span></span><br><span class="line"><span class="comment"># firewall-cmd --stat(也可以是--state)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找并安装防火墙图形化工具</span></span><br><span class="line"><span class="comment"># yum provides firewall-config</span></span><br><span class="line"><span class="comment"># yum install -y firewall-conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cockpit访问9090端口,web界面管理防火墙</span></span><br><span class="line"><span class="comment"># 首先需要放行9090端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl stop firewalld.service</span></span><br><span class="line"><span class="comment"># systemctl start firewalld.service</span></span><br><span class="line"><span class="comment"># systemctl enable firewalld.service</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># firewall-cmd --version</span></span><br><span class="line"><span class="comment"># firewall-cmd --help</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看可供选择的区域</span></span><br><span class="line"><span class="comment"># firewall-cmd --get-zones</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前使用的区域</span></span><br><span class="line"><span class="comment"># firewall-cmd --get-active-zones</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前网卡使用的防护墙区域</span></span><br><span class="line"><span class="comment"># ifconfig</span></span><br><span class="line"><span class="comment"># firewall-cmd --get-zone-of-interface=enp1s0</span></span><br><span class="line"><span class="comment"># firewall-cmd --get-zone-of-interface=enp2s0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前区域的所有信息</span></span><br><span class="line"><span class="comment"># firewall-cmd --list-all </span></span><br><span class="line"><span class="comment"># 查看所有区域的所有信息</span></span><br><span class="line"><span class="comment"># firewall-cmd --list-all-zones</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前已放行的服务和端口</span></span><br><span class="line"><span class="comment"># firewall-cmd --list-services</span></span><br><span class="line"><span class="comment"># firewall-cmd --list-ports</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看可供选择的服务</span></span><br><span class="line"><span class="comment"># firewall-cmd --get-services</span></span><br><span class="line"><span class="comment"># firewall-cmd --get-services | grep http</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 给不同区域添加网卡</span></span><br><span class="line"><span class="comment"># firewall-cmd --zone=public --add-interface=enp1s0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改默认区域</span></span><br><span class="line"><span class="comment"># firewall-cmd --set-default-zone=public</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看不同服务的详细信息,比如当前端口放行的服务</span></span><br><span class="line"><span class="comment"># firewall-cmd --info-service=http</span></span><br><span class="line"><span class="comment"># firewall-cmd --info-service=https</span></span><br><span class="line"><span class="comment"># firewall-cmd --info-service=mountd</span></span><br><span class="line"><span class="comment"># firewall-cmd --info-service=ftp</span></span><br></pre></td></tr></table></figure><h2 id="示例-原生笔记-概不负责"><a href="#示例-原生笔记-概不负责" class="headerlink" title="示例(原生笔记,概不负责)"></a>示例(原生笔记,概不负责)</h2><h3 id="http"><a href="#http" class="headerlink" title="http"></a>http</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">【servera】</span><br><span class="line">放服务</span><br><span class="line"><span class="comment"># dnf -y install httpd</span></span><br><span class="line"><span class="comment"># systemctl enable --now httpd</span></span><br><span class="line"><span class="comment"># systemctl status  httpd</span></span><br><span class="line"><span class="comment"># echo -e &quot;Hostname:\t $(hostname)&quot; &gt; /var/www/html/index.html</span></span><br><span class="line"><span class="comment"># curl localhost</span></span><br><span class="line"><span class="comment"># cat /var/www/html/index.html</span></span><br><span class="line"><span class="comment"># hostname</span></span><br><span class="line"><span class="comment"># firewall-cmd --add-service=http</span></span><br><span class="line"><span class="comment"># firewall-cmd --list-services</span></span><br><span class="line"><span class="comment"># systemctl restart firewalld.service</span></span><br><span class="line"><span class="comment"># firewall-cmd --list-services</span></span><br><span class="line"><span class="comment"># firewall-cmd --permanent --add-service=http</span></span><br><span class="line"><span class="comment"># firewall-cmd --list-services</span></span><br><span class="line"><span class="comment"># firewall-cmd --reload</span></span><br><span class="line"><span class="comment"># firewall-cmd --list-services</span></span><br><span class="line">$ 其他服务器验证</span><br><span class="line"></span><br><span class="line">放端口</span><br><span class="line"><span class="comment"># vim /etc/httpd/conf/httpd.conf</span></span><br><span class="line">Listen 8090</span><br><span class="line"><span class="comment"># systemctl restart httpd</span></span><br><span class="line"><span class="comment"># grep 8090 /var/log/messages</span></span><br><span class="line"><span class="comment"># semanage port -a -t PORT_TYPE -p tcp 8090</span></span><br><span class="line"><span class="comment"># semanage port -l|grep http|grep 80</span></span><br><span class="line"><span class="comment"># semanage port -a -t http_port_t -p tcp 8090</span></span><br><span class="line"><span class="comment"># systemctl restart httpd</span></span><br><span class="line"><span class="comment"># ss -antup|grep 8090</span></span><br><span class="line"><span class="comment"># curl localhost</span></span><br><span class="line"><span class="comment"># curl localhost:8090</span></span><br><span class="line"><span class="comment"># firewall-cmd --list-ports</span></span><br><span class="line"><span class="comment"># firewall-cmd --permanent --add-port=8090/tcp</span></span><br><span class="line"><span class="comment"># firewall-cmd --reload</span></span><br><span class="line"><span class="comment"># curl localhost:8090</span></span><br></pre></td></tr></table></figure><h3 id="NFS-1"><a href="#NFS-1" class="headerlink" title="NFS"></a>NFS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dnf -y install nfs-utils</span></span><br><span class="line"><span class="comment"># cd /etc/exports.d/</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># vim share.exports</span></span><br><span class="line"><span class="comment"># mkdir /share</span></span><br><span class="line"><span class="comment"># systemctl enable --now nfs-server.service</span></span><br><span class="line"><span class="comment"># systemctl status nfs-server.service</span></span><br><span class="line"><span class="comment"># showmount -e localhost</span></span><br><span class="line"><span class="comment"># firewall-cmd --get-services | grep -E &#x27;rpc|mount|nfs&#x27;</span></span><br><span class="line"><span class="comment"># firewall-cmd --permanent --add-service=mountd --add-service=rpc-bind --add-service=nfs</span></span><br><span class="line"><span class="comment"># firewall-cmd --reload</span></span><br><span class="line"><span class="comment"># firewall-cmd --list-services</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 防火墙自定义服务名称 防火墙默认服务修改端口</span></span><br><span class="line"><span class="comment"># vim /etc/firewalld/zones/public.xml</span></span><br><span class="line"><span class="comment"># cd /usr/lib/firewalld/services/</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># vim httpd.xml</span></span><br><span class="line"><span class="comment"># vim http.xml</span></span><br><span class="line"><span class="comment"># reboot</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># firewall-cmd --panic-off</span></span><br><span class="line"><span class="comment"># firewall-cmd --get-services | grep http</span></span><br><span class="line"><span class="comment"># firewall-cmd --info-service=httpd</span></span><br><span class="line"><span class="comment"># firewall-cmd --info-service=http</span></span><br><span class="line"><span class="comment"># cd /usr/lib/firewalld/services/</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># vim httpd.xml</span></span><br><span class="line"><span class="comment"># vim http.xml</span></span><br><span class="line"><span class="comment"># reboot</span></span><br><span class="line"><span class="comment"># firewall-cmd --info-service=httpd</span></span><br><span class="line"><span class="comment"># firewall-cmd --info-service=http</span></span><br><span class="line"><span class="comment"># firewall-cmd --permanent --service=http --add-port=8888/tcp</span></span><br><span class="line"><span class="comment"># firewall-cmd --permanent --service=http --add-port=9999/tcp</span></span><br><span class="line"><span class="comment"># firewall-cmd --reload</span></span><br><span class="line"><span class="comment"># firewall-cmd --info-service=http</span></span><br><span class="line"><span class="comment"># dnf -y install cockpit</span></span><br><span class="line"><span class="comment"># systemctl enable --now cockpit.socket</span></span><br><span class="line"><span class="comment"># ss antup|grep 9090</span></span><br><span class="line"><span class="comment"># ss -antup|grep 9090</span></span><br><span class="line"><span class="comment"># firewall-cmd --permanent --add-port=9090/tcp</span></span><br><span class="line"><span class="comment"># firewall-cmd --reload</span></span><br></pre></td></tr></table></figure><h1 id="第十二章-批量部署KVM"><a href="#第十二章-批量部署KVM" class="headerlink" title="第十二章 批量部署KVM"></a>第十二章 批量部署KVM</h1><h2 id="批量部署-不不不不不不不不不考"><a href="#批量部署-不不不不不不不不不考" class="headerlink" title="批量部署^不不不不不不不不不考^"></a>批量部署^不不不不不不不不不考^</h2><p>准备工作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">材料：</span><br><span class="line"><span class="comment"># DHCP</span></span><br><span class="line"><span class="comment"># ISO</span></span><br><span class="line"><span class="comment"># PXE</span></span><br><span class="line"><span class="comment"># FTP|HTTP|NFS</span></span><br><span class="line"><span class="comment"># Kickstart流程：</span></span><br><span class="line"><span class="comment"># 机器启动后通过DHCP协议获取IP地址和tftp-server的地址及pxelinux.0文件</span></span><br><span class="line"><span class="comment"># 再通过tftp服务器上的/tftpboot/pxelinux.cfg/default 文件确定安装选择，不选为默认menu default项</span></span><br><span class="line"><span class="comment"># 通过上一步中配置文件中的 inst.ks=ftp:172.25.250.9:ks.cfg 获得ks自动应答文件的配置# ks.cfg中配置了软件包所在的位置，我这里用的是ftp即/content目录下的软件包。</span></span><br><span class="line"><span class="comment"># 获取相应的软件包安装，安装完毕执行对应的脚本重启。</span></span><br></pre></td></tr></table></figure><h3 id="在workstation上做服务端-servera做客户端（实验全跟踪）"><a href="#在workstation上做服务端-servera做客户端（实验全跟踪）" class="headerlink" title="在workstation上做服务端,servera做客户端（实验全跟踪）"></a>在workstation上做服务端,servera做客户端（实验全跟踪）</h3><blockquote><p>主观注释，不具备完全准确性，但是步骤可靠</p></blockquote><h4 id="一、在【workstation】上部署DHCP"><a href="#一、在【workstation】上部署DHCP" class="headerlink" title="一、在【workstation】上部署DHCP"></a>一、在【workstation】上部署DHCP</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关了防火墙和selinux</span></span><br><span class="line">systemctl stop firewalld;</span><br><span class="line">setenforce 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 装包起服务</span></span><br><span class="line">yum search dhcp</span><br><span class="line">yum install -y dhcp-server</span><br><span class="line">systemctl <span class="built_in">enable</span> --now dhcpd.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找并编辑配置文件</span></span><br><span class="line">rpm -qc dhcp-server</span><br><span class="line">vim /etc/dhcp/dhcpd.conf </span><br><span class="line"><span class="comment"># 按照提示直接用示例文件覆盖当前文件并修改</span></span><br><span class="line"><span class="built_in">cp</span> /usr/share/doc/dhcp-server/dhcpd.conf.example /etc/dhcp/dhcpd.conf</span><br><span class="line">man 5 dhcpd.conf/next-server</span><br><span class="line"><span class="comment"># 编辑配置文件dhcp.conf</span></span><br><span class="line">vim /etc/dhcp/dhcpd.conf</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 只保留如下部分并修改</span></span><br><span class="line">    <span class="comment"># A slightly different configuration for an internal subnet.</span></span><br><span class="line">    subnet 10.5.5.0 netmask 255.255.255.224 &#123;<span class="comment"># 修改网段和子网掩码</span></span><br><span class="line">      range 10.5.5.26 10.5.5.30; <span class="comment"># 范围自定义,但要合理</span></span><br><span class="line">      option domain-name-servers ns1.internal.example.org; <span class="comment"># 不要</span></span><br><span class="line">      option domain-name <span class="string">&quot;internal.example.org&quot;</span>; <span class="comment"># 不要</span></span><br><span class="line">      option routers 10.5.5.1; <span class="comment"># 网关</span></span><br><span class="line">      option broadcast-address 10.5.5.31;</span><br><span class="line">      default-lease-time 600;</span><br><span class="line">      max-lease-time 7200;</span><br><span class="line">    &#125;</span><br><span class="line">    ------------------------------&gt;</span><br><span class="line">    subnet 172.25.250.0 netmask 255.255.255.0 &#123;</span><br><span class="line">      range 172.25.250.26 172.25.250.30;</span><br><span class="line">      option routers 172.25.250.254; <span class="comment">#route -n 查出来 host ip 看下是哪台机器  </span></span><br><span class="line">      default-lease-time 600;  </span><br><span class="line">      max-lease-time 7200;  </span><br><span class="line">      filename <span class="string">&quot;/pxelinux.0&quot;</span>; <span class="comment"># 引导程序文件</span></span><br><span class="line">      next-server 172.25.250.9; <span class="comment"># workstation-IP查出来 ifconfig|grep 172</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启服务</span></span><br><span class="line">systemctl restart dhcpd.service</span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在【servera】中配置启动首选项boot option</span></span><br><span class="line"><span class="comment"># 把网卡（NIC）拖到最上面，优先从网络启动,勾选enable boot menu</span></span><br><span class="line"><span class="comment"># 至此位置，启动servera已经可以从网络上开始启动，网络初始化成功，DHCP动态分配各个网络信息（ip地址，掩码，DNS等等），并且可以通过tftp协议，172.25.250.9（workstation的ip）识别到 &quot;pxelinux.0&quot;</span></span><br></pre></td></tr></table></figure><h4 id="二、tftp-and-syslinux"><a href="#二、tftp-and-syslinux" class="headerlink" title="二、tftp and syslinux"></a>二、tftp and syslinux</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 装包</span></span><br><span class="line">yum search tftp</span><br><span class="line">yum install -y tftp-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查文件</span></span><br><span class="line">rpm -ql tftp-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 装包起服务</span></span><br><span class="line">dnf search syslinux</span><br><span class="line">dnf info syslinux-tftpboot</span><br><span class="line">yum install -y syslinux-tftpboot.noarch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查配置文件，发现有很多</span></span><br><span class="line">rpm -ql syslinux-tftpboot</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个挂载点，把物理机foundation0的content目录挂载过来方便使用</span></span><br><span class="line"><span class="comment"># 物理机的content目录在环境中自动设置了nfs共享</span></span><br><span class="line"><span class="built_in">cd</span> /tftpboot/</span><br><span class="line"><span class="built_in">mkdir</span> /tftpboot/pxelinux.cfg/</span><br><span class="line"><span class="built_in">mkdir</span> /content</span><br><span class="line">mount 172.25.254.250:/content /content/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动创建一个引导菜单（grup菜单）</span></span><br><span class="line"><span class="built_in">mkdir</span> /tftpboot/pxelinux.cfg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从光盘中将启动文件copy过来并改名为default</span></span><br><span class="line"><span class="built_in">cp</span> /content/rhel8.0/x86_64/dvd/isolinux/isolinux.cfg /tftpboot/pxelinux.cfg/default</span><br><span class="line"><span class="comment"># 启动时需要的文件</span></span><br><span class="line"><span class="built_in">cp</span> /content/rhel8.0/x86_64/dvd/isolinux/boot.msg /tftpboot/</span><br><span class="line"><span class="comment"># 内核</span></span><br><span class="line"><span class="built_in">cp</span> /content/rhel8.0/x86_64/dvd/isolinux/vesamenu.c32 /tftpboot/</span><br><span class="line"><span class="comment"># 内存文件系统（系统初始化启动过程中有一部分在硬盘分出一部分充当内存）</span></span><br><span class="line"><span class="built_in">cp</span> /content/rhel8.0/x86_64/dvd/images/pxeboot/&#123;initrd.img,vmlinuz&#125; /tftpboot/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑配置文件default（grub菜单）</span></span><br><span class="line">vim /tftpboot/pxelinux.cfg/default</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># /label linux 搜索，并设置系统启动菜单时默认为安装（install）而不是测试（test）</span></span><br><span class="line">    <span class="comment"># （还有一个选项叫label check）</span></span><br><span class="line"></span><br><span class="line">    label linux</span><br><span class="line">      menu label ^Install Red Hat Enterprise Linux 8.0.0</span><br><span class="line">      menu `default`<span class="comment"># --------------&gt; 添加此行，设置默认首选项</span></span><br><span class="line">      kernel `vmlinuz`</span><br><span class="line">      append initrd=`initrd.img` inst.stage2=`ftp://172.25.250.9/dvd` quiet</span><br><span class="line">                                      <span class="comment"># |  由于是网络启动，所以修改光盘文件位置为本地挂载上来的/dvd</span></span><br><span class="line">                                      <span class="comment">#  \__%(假装箭头)</span></span><br><span class="line">    <span class="comment"># 修改超时时间（默认60）</span></span><br><span class="line">    default vesamenu.c32</span><br><span class="line">    <span class="built_in">timeout</span> 600<span class="comment"># -----&gt; 修改吧</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索并修改配置文件tftp.service</span></span><br><span class="line">rpm -ql tftp-server | grep service</span><br><span class="line">vim /usr/lib/systemd/system/tftp.service</span><br><span class="line"></span><br><span class="line">    [Unit]<span class="comment"># ----&gt; 描述信息,需要哪些资源，文档的位置</span></span><br><span class="line">    Description=Tftt Server</span><br><span class="line">    Requires=tdtp.socket</span><br><span class="line">    Documentation=man:in.tftpd</span><br><span class="line">    [Service]<span class="comment"># ----&gt; 启动时执行的命令</span></span><br><span class="line">    <span class="comment"># ExecStart=/usr/bin/in.tftpd -s /var/lib/tftpboot# ----、</span></span><br><span class="line">                                                            <span class="comment">#|修改路径</span></span><br><span class="line">    ExecStart=/usr/bin/in.tftpd -s /tftpboot<span class="comment"># &lt;___/</span></span><br><span class="line">    StandardInput=socket</span><br><span class="line">    [Install]</span><br><span class="line">    Also=tftp.socket</span><br><span class="line"></span><br><span class="line"><span class="comment"># 起服务（保险起见.socket和.service都起）</span></span><br><span class="line">systemctl <span class="built_in">enable</span> --now tftp.service</span><br><span class="line">systemctl <span class="built_in">enable</span> --now tftp.socket</span><br></pre></td></tr></table></figure><h4 id="三、ftp"><a href="#三、ftp" class="headerlink" title="三、ftp"></a>三、ftp</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">装包</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y vsftpd</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改配置文件vsftpd.conf</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/vsftpd/vsftpd.conf</span></span><br><span class="line"></span><br><span class="line">    anonymous_enable=NO#   ----、</span><br><span class="line">                                            #  |修改允许匿名用户</span><br><span class="line">    anonymous_enable=YES#   &lt;___/</span><br><span class="line">    # 从手册中查到并添加</span><br><span class="line">    anon_root=/var/ftp#  ---&gt; 修改匿名用户的根目录位置</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">把光盘文件挂载到指定目录下</span></span><br><span class="line">mkdir /var/ftp/dvd</span><br><span class="line">mount /content/rhel8.0/x86_64/isos/rhel-8.0-x86_64-dvd.iso /var/ftp/dvd/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启服务</span></span><br><span class="line">systemctl enable --now vsftpd</span><br></pre></td></tr></table></figure><h4 id="四、网络引导安装"><a href="#四、网络引导安装" class="headerlink" title="四、网络引导安装"></a>四、网络引导安装</h4><p>在servera上做客户端</p><blockquote><p>servera上修改为优先从网络启动，关机，开机（不能直接重启）即可</p><p>以下内容摘自笔记，看不太懂</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">【servera】cleint</span><br><span class="line"><span class="section"># 以网卡方式启动--安装</span></span><br><span class="line"><span class="bullet">1.</span> 指定ftp路径172.25.250.9/dvd </span><br><span class="line"><span class="bullet">2.</span> 最小化 </span><br><span class="line"><span class="bullet">3.</span> 设置lvm分区</span><br><span class="line"><span class="section"># 进度条走完（安装完）</span></span><br><span class="line"><span class="bullet">-</span> 重启</span><br><span class="line"><span class="bullet">-</span> 添加硬盘启动</span><br><span class="line"><span class="bullet">-</span> 从本地硬盘启动</span><br></pre></td></tr></table></figure><h2 id="结合KS文件"><a href="#结合KS文件" class="headerlink" title="结合KS文件"></a>结合KS文件</h2><h3 id="kickstart应答文件"><a href="#kickstart应答文件" class="headerlink" title="kickstart应答文件"></a>kickstart应答文件</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># anaconda-ks.cfg分三个段</span></span><br><span class="line">`命令段</span><br><span class="line"><span class="code">    必备：rootpw 、 url 、auth、bootloader、...</span></span><br><span class="line"><span class="code">    可选：firewall、selinux、reboot、...</span></span><br><span class="line"><span class="code">`安装包与包组段</span></span><br><span class="line"><span class="code">%packages</span></span><br><span class="line"><span class="code">PACKAGE  @GROUP_NAME</span></span><br><span class="line"><span class="code">%end</span></span><br><span class="line"><span class="code">`脚本段</span></span><br><span class="line"><span class="code">%pre ... %end</span></span><br><span class="line"><span class="code">%post ...%end</span></span><br></pre></td></tr></table></figure><h4 id="五、无人值守批量部署"><a href="#五、无人值守批量部署" class="headerlink" title="五、无人值守批量部署"></a>五、无人值守批量部署</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重新修改配置文件，多加了一行``标注的位置</span></span><br><span class="line">vim /tftpboot/pxelinux.cfg/default</span><br><span class="line">append initrd=initrd.img inst.stage2=ftp://172.25.250.9/dvd `inst.ks=ftp://172.25.250.9/ks.cfg` quiet</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启服务</span></span><br><span class="line">systemctl restart tftp.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制本地已存在的配置文件到指定文目录并改名</span></span><br><span class="line"><span class="built_in">cp</span> anaconda-ks.cfg /var/ftp/ks.cfg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改配置文件ks.cfg</span></span><br><span class="line">vim ks.cfg</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 删除（或注掉）前面两个URL，因为是从网络指定的仓库，用最后一个URL指定ftp（本地仓库）</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#repo --name=&quot;koji-override-0&quot; --baseurl=http://download-node-02.eng.bos.redhat.com/rhel-8/devel/candidate-trees/RHEL-8/RHEL-8.0.0-20190404.2/compose/BaseOS/x86_64/os</span></span><br><span class="line">    <span class="comment">#repo --name=&quot;koji-override-1&quot; --baseurl=http://download-node-02.eng.bos.redhat.com/rhel-8/devel/candidate-trees/RHEL-8/RHEL-8.0.0-20190404.2/compose/AppStream/x86_64/os</span></span><br><span class="line">    <span class="comment"># Use network installation</span></span><br><span class="line">    url --url=<span class="string">&quot;ftp:172.25.250.9/dvd&quot;</span><span class="comment"># ————————&gt; 修改url</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#在命令段设置一些验证操作</span></span><br><span class="line">    %post --erroronfail</span><br><span class="line"></span><br><span class="line">    <span class="comment"># workaround anaconda requirements</span></span><br><span class="line">    passwd -d root</span><br><span class="line">    passwd -l root</span><br><span class="line"></span><br><span class="line">    <span class="built_in">mkdir</span> /mytest<span class="comment"># -----&gt; 纯属测试</span></span><br><span class="line">    useradd harry<span class="comment"># -----&gt; 这个也是</span></span><br><span class="line">    hostnamectl set-hostname anaconda.example.com<span class="comment"># -----&gt; 其实还是</span></span><br><span class="line">    <span class="built_in">echo</span> redhat | passwd --stdin root<span class="comment"># -----&gt; 给root密码（不然会是随机，不能登录）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 给普通用户加权</span></span><br><span class="line"><span class="built_in">chmod</span> o+r /var/ftp/ks.cfg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启服务</span></span><br><span class="line">systemctl restart vsftpd.service</span><br></pre></td></tr></table></figure><h3 id="servera测试（优先从网络并在关机状态下启动）"><a href="#servera测试（优先从网络并在关机状态下启动）" class="headerlink" title="servera测试（优先从网络并在关机状态下启动）"></a>servera测试（优先从网络并在关机状态下启动）</h3><p>无需操作，开机之后，静候佳音，待归来之时，系统已安装完毕，只需轻轻登录，坐享无限荣华</p><h1 id="第十三章-容器管理-重点考"><a href="#第十三章-容器管理-重点考" class="headerlink" title="第十三章 容器管理^重点考^"></a>第十三章 容器管理^重点考^</h1><h2 id="Containers-vs-virtual-machines"><a href="#Containers-vs-virtual-machines" class="headerlink" title="Containers vs. virtual machines"></a>Containers vs. virtual machines</h2><p><img src="https://i.loli.net/2021/08/09/suSzRVAjYHTI6EG.png" alt="image-20210809100413199" style="zoom:80%;" /><img src="https://i.loli.net/2021/08/09/WCJ1SHiTd7A9thL.png" alt="image-20210809100436091" style="zoom:80%;" /></p><h2 id="容器技术组成部分"><a href="#容器技术组成部分" class="headerlink" title="容器技术组成部分"></a>容器技术组成部分</h2><p>C&#x2F;S架构</p><img src="https://i.loli.net/2021/08/09/nfshkVz8MGcelCt.png" alt="image-20210809100620626" style="zoom:80%;" /><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">服务端:docker deamon</span><br><span class="line">服务端与客户端使用REST API接口进行通信</span><br><span class="line">客户端:管理网络,容器,镜像,数据卷</span><br></pre></td></tr></table></figure><h2 id="docker：容器的引擎之一"><a href="#docker：容器的引擎之一" class="headerlink" title="docker：容器的引擎之一"></a>docker：容器的引擎之一</h2><p>服务端，客户端，仓库，镜像，容器</p><h3 id="docker部署"><a href="#docker部署" class="headerlink" title="docker部署"></a>docker部署</h3><ul><li>添加一块NAT网卡使虚拟机能联网</li><li>再foundation0上以root用户进行实验</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-8.repo</span></span><br><span class="line">或者</span><br><span class="line"><span class="comment"># curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-8.repo</span></span><br><span class="line"><span class="comment"># yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm </span></span><br><span class="line"><span class="comment"># docker可以不安装epel</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dnf -y install yum-utils</span></span><br><span class="line">step 1: 安装必要的一些系统工具</span><br><span class="line"><span class="comment"># dnf install -y yum-utils device-mapper-persistent-data lvm2</span></span><br><span class="line"><span class="comment"># yum install -y libseccomp-devel.x86_64</span></span><br><span class="line">Step 2: 添加软件源信息</span><br><span class="line"><span class="comment"># yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span><br><span class="line">Step 3: 更新并安装Docker-CE</span><br><span class="line"><span class="comment"># dnf makecache</span></span><br><span class="line"><span class="comment"># dnf -y install docker-ce</span></span><br><span class="line">Step 4: 开启Docker服务</span><br><span class="line"><span class="comment"># systemctl enable --now docker.service</span></span><br></pre></td></tr></table></figure><h3 id="镜像管理"><a href="#镜像管理" class="headerlink" title="镜像管理"></a>镜像管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉镜像</span></span><br><span class="line">docker pull 镜像</span><br><span class="line"></span><br><span class="line"><span class="comment"># 看镜像</span></span><br><span class="line">dokcer images</span><br><span class="line">docker image <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建并启动容器1</span></span><br><span class="line">docker create --name 容器 镜像</span><br><span class="line">docker start 容器</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建并启动容器2</span></span><br><span class="line">docker run -d --name 容器 镜像</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看在使用容器</span></span><br><span class="line">docker ps</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有创建的容器</span></span><br><span class="line">docker ps -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用容器执行单条命令</span></span><br><span class="line">docker <span class="built_in">exec</span> 容器 命令</span><br><span class="line"><span class="comment"># 使用的本机的shell执行</span></span><br><span class="line">docker <span class="built_in">exec</span> http1 /bin/echo helloworld</span><br><span class="line"><span class="comment"># 使用容器内的shell执行,需要先分配一个终端,然后把要执行的命令用&#x27;&#x27;分割开,sh表分配的终端,-c后面可加多条命令</span></span><br><span class="line">docker <span class="built_in">exec</span> -it 容器 sh -c <span class="string">&#x27;命令&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入容器并分配终端，-i打开容器标准输入，-t分配终端，-d后台运行</span></span><br><span class="line">dokcer <span class="built_in">exec</span> -it 容器 终端</span><br><span class="line"><span class="comment"># docker exec -it http1 /bin/bash</span></span><br></pre></td></tr></table></figure><h4 id="Docker-commit"><a href="#Docker-commit" class="headerlink" title="Docker commit"></a>Docker commit</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 使用容器中发生更改的部分生成一个新的镜像，通常的使用场景为，基于普通镜像启动了容器，在容器内部署了自己所需要的业务后，需要把当前的状态重新生成镜像，以便以当前状态快速部署业务所用。</span></span><br></pre></td></tr></table></figure><blockquote><p>就是基于已经修改的旧镜像创建的容器上,创建一个新镜像,并为新镜像添加描述信息的工具</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@foundation0 ~]<span class="comment"># docker commit --help</span></span><br><span class="line">Usage:  docker commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]]</span><br><span class="line">Create a new image from a container<span class="string">&#x27;s changes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Options:</span></span><br><span class="line"><span class="string">  -a, --author string    Author (e.g., &quot;John Hannibal Smith &lt;hannibal@a-team.com&gt;&quot;)</span></span><br><span class="line"><span class="string">  -c, --change list      Apply Dockerfile instruction to the created image</span></span><br><span class="line"><span class="string">  -m, --message string   Commit message</span></span><br><span class="line"><span class="string">  -p, --pause            Pause container during commit (default true)</span></span><br></pre></td></tr></table></figure><ul><li>示例</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit -m <span class="string">&#x27;mkdir /test useradd harry test&#x27;</span> -a <span class="string">&#x27;zhipan&#x27;</span> 5f6c15e5b660 zhipan_nginx:v1.0</span><br></pre></td></tr></table></figure><h4 id="本地保存与载入"><a href="#本地保存与载入" class="headerlink" title="本地保存与载入"></a>本地保存与载入</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 保存镜像到本地</span></span><br><span class="line">docker save -o 本地镜像名称 镜像</span><br><span class="line"><span class="comment"># 删除旧镜像</span></span><br><span class="line">docker rmi 镜像</span><br><span class="line"><span class="comment"># 发现当前镜像因容器在使用无法删除,停止容器再删太繁琐,直接强制删除</span></span><br><span class="line">docker stop 容器 </span><br><span class="line">docker rmi 镜像 (×)</span><br><span class="line">dokcer rmi --force 镜像 (√)</span><br><span class="line"><span class="comment"># 恢复本地文件(导入)</span></span><br><span class="line">docker load --input </span><br></pre></td></tr></table></figure><blockquote><p>以下关于docker的内容摘自笔记,未经校验,如有问题,全部免责</p></blockquote><h4 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h4><p>类似脚本</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dockerfile使用准则：</span><br><span class="line"><span class="bullet"> 1.</span> 大： 首字母必须大写</span><br><span class="line"><span class="bullet"> 2.</span> 空： 尽量将Dockerfile放在空目录中。</span><br><span class="line"><span class="bullet"> 3.</span> 单： 每个容器尽量只有一个功能。</span><br><span class="line"><span class="bullet"> 4.</span> 少： 执行的命令越少越好。</span><br></pre></td></tr></table></figure><p>简单示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑dockerfile,修改nginx默认索引页</span></span><br><span class="line"><span class="comment"># vim Dockerfile</span></span><br><span class="line">[root@foundation0 <span class="built_in">test</span>]<span class="comment"># cat Dockerfile </span></span><br><span class="line"><span class="comment"># author:</span></span><br><span class="line"><span class="comment"># version:</span></span><br><span class="line">FROM nginx</span><br><span class="line">RUN <span class="built_in">echo</span> <span class="string">&#x27;&lt;h1&gt;Hello,Easthome!&lt;/h1&gt;&#x27;</span> &gt; /usr/share/nginx/html/index.html</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建新镜像</span></span><br><span class="line"><span class="comment"># docker build -t ng:v1 .</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># docker images</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主机的9001端口映射到容器的80端口</span></span><br><span class="line"><span class="comment"># docker run -d --name nginx1 -p 9001:80 ng:v1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问本地的9001端口是访问了容器的80端口</span></span><br><span class="line"><span class="comment"># curl localhost:9001</span></span><br><span class="line"><span class="comment"># hostname</span></span><br><span class="line"><span class="comment"># docker rm nginx1</span></span><br><span class="line"><span class="comment"># docker rm --force nginx1</span></span><br><span class="line"><span class="comment"># docker images</span></span><br><span class="line"><span class="comment"># vim Dockerfile</span></span><br><span class="line"><span class="comment"># docker build -t ng:v2 .</span></span><br><span class="line"><span class="comment"># docker run -d --name nginx3 -p 9002:80  ng:v2</span></span><br><span class="line"><span class="comment"># docker ps</span></span><br><span class="line"><span class="comment"># curl localhost:9002</span></span><br></pre></td></tr></table></figure><h3 id="docker加速器及基本管理"><a href="#docker加速器及基本管理" class="headerlink" title="docker加速器及基本管理"></a>docker加速器及基本管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker images</span></span><br><span class="line"><span class="comment"># docker image ls</span></span><br><span class="line"><span class="comment"># vim /etc/docker/daemon.json   #加速器</span></span><br><span class="line">[root@foundation0 ~]<span class="comment"># cat /etc/docker/daemon.json </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;http://f1361db2.m.daocloud.io&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># systemctl restart docker.service</span></span><br><span class="line"><span class="comment"># docker pull nginx</span></span><br><span class="line"><span class="comment"># docker images</span></span><br><span class="line"><span class="comment"># docker create --name mynginx nginx</span></span><br><span class="line"><span class="comment"># docker ps</span></span><br><span class="line"><span class="comment"># docker ps -a</span></span><br><span class="line"><span class="comment"># docker start mynginx</span></span><br><span class="line"><span class="comment"># yum list|grep libsec</span></span><br><span class="line"><span class="comment"># yum -y install libseccomp-devel.x86_64</span></span><br><span class="line"><span class="comment"># docker start mynginx</span></span><br><span class="line"><span class="comment"># docker ps</span></span><br><span class="line"><span class="comment"># docker run --name mnginx nginx</span></span><br><span class="line"><span class="comment"># docker ps</span></span><br><span class="line"><span class="comment"># docker ps -a</span></span><br><span class="line"><span class="comment"># docker run -d --name ynginx nginx</span></span><br><span class="line"><span class="comment"># docker ps</span></span><br></pre></td></tr></table></figure><h3 id="docker-hub-镜像仓库"><a href="#docker-hub-镜像仓库" class="headerlink" title="docker hub 镜像仓库"></a>docker hub 镜像仓库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.docker.com/</span><br></pre></td></tr></table></figure><h3 id="私有镜像仓库"><a href="#私有镜像仓库" class="headerlink" title="私有镜像仓库"></a>私有镜像仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker tag hello-world:latest localhost:5000/localhello</span></span><br><span class="line"><span class="comment"># docker images</span></span><br><span class="line"><span class="comment"># docker push localhost:5000/localhello</span></span><br><span class="line"><span class="comment"># docker images</span></span><br><span class="line"><span class="comment"># docker rmi localhost:5000/localhello</span></span><br><span class="line"><span class="comment"># docker image ls</span></span><br><span class="line"><span class="comment"># docker pull localhost:5000/localhello</span></span><br><span class="line"><span class="comment"># docker images</span></span><br></pre></td></tr></table></figure><h2 id="PODMAN-必考"><a href="#PODMAN-必考" class="headerlink" title="PODMAN^必考^"></a>PODMAN^必考^</h2><blockquote><p>普通用户和root用户pull的镜像不同，容器也不同，注意区分</p></blockquote><h3 id="装包"><a href="#装包" class="headerlink" title="装包"></a>装包</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum module install -y container-tools</span><br></pre></td></tr></table></figure><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/container/registries.conf</span><br><span class="line">    <span class="comment"># 注掉其他的</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 关闭https</span></span><br><span class="line">    <span class="comment"># insecure = false</span></span><br><span class="line">    insecure = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 不屏蔽</span></span><br><span class="line">    blocked = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 使用本地仓库</span></span><br><span class="line">    unqualified-search-registries = [<span class="string">&#x27;自定义仓库&#x27;</span>]</span><br><span class="line">    location = <span class="string">&#x27;自定义仓库&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看podman配置信息</span></span><br><span class="line">podman info</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果不写配置文件，每次操作时都要加上</span></span><br><span class="line">--tls-verify=<span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="操作-2"><a href="#操作-2" class="headerlink" title="操作"></a>操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 登录</span></span><br><span class="line">podman login --tls-verify=<span class="literal">false</span> registry.lab.example.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># search，必须加/</span></span><br><span class="line">podman search --tls-verify=<span class="literal">false</span> registry.lab.example.com/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拉镜像</span></span><br><span class="line">podman pull --tls-verify=<span class="literal">false</span> registry.lab.example.com/rhel8/mariadb-103</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看运行中的容器</span></span><br><span class="line">podman ps </span><br><span class="line"><span class="comment"># </span></span><br><span class="line">podman ps -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建并启动容器1</span></span><br><span class="line">podman create （--name 容器名称）镜像</span><br><span class="line">podman start 容器</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建并启动容器2</span></span><br><span class="line">podman run --name 容器 镜像</span><br><span class="line"></span><br><span class="line"><span class="comment"># 容器运行的时候一般是前台进程，放到后台运行,一般常用</span></span><br><span class="line">podman run -d(--detach) --name 容器 镜像</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开标准输入，绑定终端</span></span><br><span class="line">podman -it --name 容器 镜像</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一次性执行命令（在镜像上创建一个容器，执行完命令后容器删除，一次性容器）</span></span><br><span class="line">podman run --<span class="built_in">rm</span> --name 容器 镜像 <span class="built_in">command</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入容器(交互式)</span></span><br><span class="line">podman <span class="built_in">exec</span> -it 容器 /bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 非交互式（在容器中执行进程）</span></span><br><span class="line">podman <span class="built_in">exec</span> -it 容器 sh -c <span class="string">&quot;command&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 其他选项</span></span><br><span class="line">podman search --<span class="built_in">help</span></span><br><span class="line">  -f, --filter strings    Filter output based on conditions provided (default [])</span><br><span class="line">      --format string     Change the output format to a Go template</span><br><span class="line">      --<span class="built_in">limit</span> int         Limit the number of results</span><br><span class="line">      --no-trunc          Do not <span class="built_in">truncate</span> the output</span><br><span class="line">      --tls-verify        Require HTTPS and verify certificates when contacting registries (default <span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看本地pull的镜像的详细信息</span></span><br><span class="line">podman inspect 镜像</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看线上未pull的镜像详细信息</span></span><br><span class="line">skopeo inspect 镜像</span><br><span class="line"></span><br><span class="line"><span class="comment"># 有选择的查看镜像的详细信息，比grep -i（不区分大小写） -C 3(上下三行）好用</span></span><br><span class="line">podman inspect --format <span class="string">&#x27;&#123;&#123;.顶级key.二级key.好几层&#125;&#125;&#x27;</span> 镜像</span><br><span class="line"><span class="comment"># 示例</span></span><br><span class="line">podman inspect --format <span class="string">&#x27;&#123;&#123;.NetworkSettings.IPAddress&#125;&#125;&#x27;</span> registry.lab.example.com/library/nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存镜像到本地</span></span><br><span class="line">podman save -o 本地文件 镜像</span><br><span class="line"></span><br><span class="line"><span class="comment"># 强行删除镜像</span></span><br><span class="line">podman rmi 镜像</span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地导入镜像</span></span><br><span class="line">podman load --input 本地文件</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在容器中执行命令，交互式或免交互</span></span><br><span class="line">podman <span class="built_in">exec</span> -it 容器 /bin/bash（sh -c <span class="string">&#x27;command&#x27;</span>)</span><br><span class="line"><span class="comment"># 此处需要注意，不同镜像默认登录用户不同，比如http默认登录为default用户，nginx默认root用户</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># commit 通过容器制作镜像(一定要指定 -f docker)</span></span><br><span class="line">podman commit -f docker -m 描述信息 -a 作者信息 容器 镜像名字：tag</span><br><span class="line"></span><br><span class="line"><span class="comment"># 端口映射（-p 手动指定，-P自动分配）</span></span><br><span class="line">podman run -d --name 容器 -p 自定义本地端口：inspect查出来的服务端口 镜像</span><br><span class="line"><span class="comment"># 示例</span></span><br><span class="line">podman run -d --name nginx1 -p 8006:80 registry.lab.example.com/library/nginx</span><br><span class="line"><span class="comment"># 本地访问测试</span></span><br><span class="line">curl localhost:8006</span><br><span class="line"><span class="comment"># 查询各个镜像的端口映射</span></span><br><span class="line">podman ps -a</span><br><span class="line"><span class="comment"># 外部访问需要防火墙放行</span></span><br><span class="line">firewall-cmd --permanent --add-port=8006/tcp</span><br><span class="line">firewall-cmd --reload</span><br><span class="line"><span class="comment"># 浏览器访问网址</span></span><br><span class="line">主机：8006</span><br></pre></td></tr></table></figure><blockquote><p>此处验证，防火墙放行本地端口后重载，发现本地也无法使用</p><p>没发现防火墙的问题是什么</p><p>最后解决办法是，防火墙先放行端口，排除启动容器后防火墙对容器的影响，再启容器并做端口映射</p></blockquote><blockquote><p>问题已解决，podman版本为1.6都是bug的原因</p></blockquote><h3 id="传递环境变量"><a href="#传递环境变量" class="headerlink" title="传递环境变量"></a>传递环境变量</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">inspect查看容器的详细信息</span></span><br><span class="line">和镜像一样</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">传递环境变量 -e，一般镜像会提供使用方法，拿着直接使用即可</span></span><br><span class="line">[root@servera ~]# podman inspect registry.lab.example.com/rhel8/mariadb-103|grep usage</span><br><span class="line">                &quot;usage&quot;: &quot;podman run -d -e MYSQL_USER=user -e MYSQL_PASSWORD=pass -e MYSQL_DATABASE=db -p 3306:3306 rhel8/mariadb-103&quot;,</span><br><span class="line">            &quot;usage&quot;: &quot;podman run -d -e MYSQL_USER=user -e MYSQL_PASSWORD=pass -e MYSQL_DATABASE=db -p 3306:3306 rhel8/mariadb-103&quot;,</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取信息，过滤inspect中的usage和url</span></span><br><span class="line">不赘述</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">停止容器</span></span><br><span class="line">podman kill 容器</span><br><span class="line">podman stop 容器</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">动态查看容器信息</span></span><br><span class="line">podman stat 容器</span><br></pre></td></tr></table></figure><h3 id="持久存储"><a href="#持久存储" class="headerlink" title="持久存储"></a>持久存储</h3><blockquote><p>容器重启不会保存内容，为了持久存储，需要让主机目录成为容器存储的一部分</p></blockquote><h4 id="准备主机目录"><a href="#准备主机目录" class="headerlink" title="准备主机目录"></a>准备主机目录</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">挂载本地目录到容器上，：Z可以自动更改安全上下文</span></span><br><span class="line">podman run --volume|-v 本地目录：容器内目录：Z 镜像</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">示例</span></span><br><span class="line">podman run -d --name n1 -p 9000:80 -v /root/test:usr/share/nginx/html:Z registry.lab.example.com/library/nginx</span><br></pre></td></tr></table></figure><ul><li>如果不设置selinux权限，容器内无法访问目录，如果是网页，本地网页也无法打开，<strong>所以<code>Z</code>尤为重要</strong></li></ul><h4 id="selinux设置"><a href="#selinux设置" class="headerlink" title="selinux设置"></a>selinux设置</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">容器内目录的安全上下文：container_file_t</span><br></pre></td></tr></table></figure><ul><li><strong>普通用户无法修改安全上下文，只有root用户可以</strong></li></ul><h3 id="以服务形式管理容器"><a href="#以服务形式管理容器" class="headerlink" title="以服务形式管理容器"></a>以服务形式管理容器</h3><ul><li>机器重启后，容器中运行的容器会停止，操作以达到开机自启动的目的</li></ul><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ol><li><p>登录系统时必须使用ssh，不能用su，su -</p></li><li><p>打开一个策略开关</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查一下</span></span><br><span class="line">[student@workstation ~]$ loginctl show-user student </span><br><span class="line">UID=1000</span><br><span class="line">GID=1000</span><br><span class="line">Name=student</span><br><span class="line">Timestamp=Sun 2021-08-08 08:09:15 GMT</span><br><span class="line">TimestampMonotonic=93975324423</span><br><span class="line">RuntimePath=/run/user/1000</span><br><span class="line">Service=user@1000.service</span><br><span class="line">Slice=user-1000.slice</span><br><span class="line">Display=6</span><br><span class="line">State=active</span><br><span class="line">Sessions=6</span><br><span class="line">IdleHint=no</span><br><span class="line">IdleSinceHint=0</span><br><span class="line">IdleSinceHintMonotonic=0</span><br><span class="line">Linger=no</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开策略开关</span></span><br><span class="line">[student@workstation ~]$ loginctl enable-linger </span><br></pre></td></tr></table></figure></li></ol><h4 id="容器操作"><a href="#容器操作" class="headerlink" title="容器操作"></a>容器操作</h4><blockquote><p>podman1.6有bug，不能开机自启动</p><p>在练习环境中，在foundation0上找到&#x2F;content&#x2F;courses&#x2F;rhel8.2&#x2F;materials&#x2F;updates.repo,把这个仓库给练习环境也配置一份，编辑yum.repos.d&#x2F;随便.repo，此处普通用户没权限</p><p>mackcache生成缓存</p><p>yum update  升级版本</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$ podman --version</span><br><span class="line">podman version 1.6.4</span><br><span class="line"></span><br><span class="line">$ sudo wget -P /etc/yum.repos.d/ http://materials/updates.repo</span><br><span class="line">[sudo] password <span class="keyword">for</span> student: `student`</span><br><span class="line"><span class="comment"># 或者按照我们课上讲的scp过去也是可以的</span></span><br><span class="line">$ sudo yum -y update</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ loginctl show-user kiosk</span><br><span class="line">$ loginctl show-user kiosk|<span class="built_in">tail</span> -n 1</span><br><span class="line">$ loginctl enable-linger</span><br><span class="line">$ loginctl show-user kiosk|<span class="built_in">tail</span> -n 1</span><br><span class="line">$ podman images</span><br><span class="line">$ podman create --name mynginx registry.lab.example.com/library/nginx</span><br><span class="line">$ <span class="built_in">ls</span></span><br><span class="line">$ <span class="built_in">mkdir</span> -p ~/.config/systemd/user/</span><br><span class="line">$ <span class="built_in">cd</span> ~/.config/systemd/user/</span><br><span class="line"></span><br><span class="line">$ podman generate systemd --name mynginx --files</span><br><span class="line">$ <span class="built_in">ls</span></span><br><span class="line">$ systemctl --user daemon-reload</span><br><span class="line">$ systemctl --user <span class="built_in">enable</span> --now container-mynginx.service</span><br><span class="line">$ podman ps</span><br><span class="line">$ sudo reboot</span><br></pre></td></tr></table></figure><h3 id="传递环境变量-1"><a href="#传递环境变量-1" class="headerlink" title="传递环境变量"></a>传递环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># podman run -d --name http1 -p 9101:80 registry.lab.example.com/rhel8/httpd-24</span></span><br><span class="line"><span class="comment"># podman ps</span></span><br><span class="line"><span class="comment"># podman ps|grep http1</span></span><br><span class="line"><span class="comment"># curl localhost:9101</span></span><br><span class="line"><span class="comment"># podman port -a</span></span><br><span class="line"><span class="comment"># podman inspect  registry.lab.example.com/rhel8/httpd-24</span></span><br><span class="line"><span class="comment"># podman inspect  registry.lab.example.com/rhel8/httpd-24|grep -i expose</span></span><br><span class="line"><span class="comment"># podman rm --force http1</span></span><br><span class="line"><span class="comment"># podman run -d --name http1 -p 9101:8080 registry.lab.example.com/rhel8/httpd-24</span></span><br><span class="line"><span class="comment"># podman ps</span></span><br><span class="line"><span class="comment"># podman port -a</span></span><br><span class="line"><span class="comment"># curl localhost:9101</span></span><br><span class="line"><span class="comment"># podman images</span></span><br><span class="line"><span class="comment"># podman inspect registry.lab.example.com/rhel8/mariadb-103|grep -E &#x27;url|usage&#x27;</span></span><br><span class="line"><span class="comment"># podman image</span></span><br><span class="line"><span class="comment"># podman images</span></span><br><span class="line"><span class="comment"># podman run -d -e MYSQL_USER=harry -e MYSQL_PASSWORD=redhat -e MYSQL_DATABASE=servera_db -p 3306:3306 registry.lab.example.com/rhel8/mariadb-103</span></span><br><span class="line"><span class="comment"># podman ps</span></span><br><span class="line"><span class="comment"># podman rm -a</span></span><br><span class="line"><span class="comment"># podman ps</span></span><br><span class="line"><span class="comment"># podman ps -a</span></span><br><span class="line"><span class="comment"># podman ps</span></span><br><span class="line"><span class="comment"># podman restart mynginx</span></span><br><span class="line"><span class="comment"># podman start mynginx</span></span><br><span class="line"><span class="comment"># podman kill mynginx</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="持久化存储"><a href="#持久化存储" class="headerlink" title="持久化存储"></a>持久化存储</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># podman run --help|grep volu</span></span><br><span class="line"><span class="comment"># podman images</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># cp /etc/passwd .</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># pwd</span></span><br><span class="line"><span class="comment"># podman run -d --name mynginx -v /home/student:/mnt registry.lab.example.com/library/nginx</span></span><br><span class="line"><span class="comment"># podman run -d --name mynginx1 -v /home/student:/mnt registry.lab.example.com/library/nginx</span></span><br><span class="line"><span class="comment"># podman ps|grep mynginx1</span></span><br><span class="line"><span class="comment"># podman exec -it f0822a21bde9 /bin/bash</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># setenforce 0</span></span><br><span class="line"><span class="comment"># podman run -d --name mynginx2 -v /home/student:/mnt registry.lab.example.com/library/nginx</span></span><br><span class="line"><span class="comment"># podman exec -it mynginx2 /bin/bash</span></span><br><span class="line"><span class="comment"># ls -lZ passwd</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># mkdir -p www/html</span></span><br><span class="line"><span class="comment"># echo hello &gt; www/html/index.html</span></span><br><span class="line"><span class="comment"># chmod -R o+w www/</span></span><br><span class="line"><span class="comment"># podman images</span></span><br><span class="line"><span class="comment"># podman run -d -p 9102:8080 -v /home/student/www:/var/www:Z registry.lab.example.com/rhel8/httpd-24</span></span><br><span class="line"><span class="comment"># podman ps</span></span><br><span class="line"><span class="comment"># history</span></span><br><span class="line"><span class="comment"># podman ps|more</span></span><br><span class="line"><span class="comment"># podman exec -it 321701604c6c /bin/bash</span></span><br><span class="line"><span class="comment"># curl localhost:9102</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> RHCE,linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RHCE学习笔记|RH124</title>
      <link href="/2021/08/18/RHCE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-RH124/"/>
      <url>/2021/08/18/RHCE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-RH124/</url>
      
        <content type="html"><![CDATA[<h1 id="RH124"><a href="#RH124" class="headerlink" title="RH124"></a>RH124</h1><blockquote><p>本部分笔记由老师原始的笔记修改整理而成，如果没有特别的格式能看出来是我自己添加修改的内容，出了问题请怪老师。</p><p>本笔记仅供参考，真正的笔记应该是自己的东西</p><hr><p>祝考试的都过，学习的都有进步。</p><p><strong>&#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; Copyright © 2021.8.18 LNSS. in Zhipan Li’s Class &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D; &#x3D;&#x3D;</strong></p></blockquote><h1 id="第零章-课前准备"><a href="#第零章-课前准备" class="headerlink" title="第零章 课前准备"></a>第零章 课前准备</h1><h2 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h2><p>李志攀</p><p>RHCI </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">识别不到登录的kvm，可能是网关问题，route -n 查看</span><br><span class="line"></span><br><span class="line">route add default gw 加上默认网关，一般是172.25.255.255</span><br></pre></td></tr></table></figure><h2 id="课程简介"><a href="#课程简介" class="headerlink" title="课程简介"></a>课程简介</h2><p> 上课时间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">9：00-17：30    上课时间</span><br><span class="line">12：00-13：00   吃饭、午休时间</span><br><span class="line">13：00-13：30   练习时间</span><br><span class="line">一天大概7节课，每节课45-50分钟，所以每节课休息时间10-15分钟</span><br><span class="line">课间我会使用倒计时软件，提醒大家及时回来上课</span><br></pre></td></tr></table></figure><h2 id="视频回放"><a href="#视频回放" class="headerlink" title="视频回放"></a>视频回放</h2><h2 id="远程软件"><a href="#远程软件" class="headerlink" title="远程软件"></a>远程软件</h2><p>向日葵</p><h2 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h2><p>技术外</p><h2 id="约法三章"><a href="#约法三章" class="headerlink" title="约法三章"></a>约法三章</h2><h2 id="课程安排"><a href="#课程安排" class="headerlink" title="课程安排"></a>课程安排</h2><table><thead><tr><th align="center">第一天</th><th>第二天</th><th align="left">第三天</th><th>第四天</th><th>第五天</th></tr></thead><tbody><tr><td align="center">虚拟机环境介绍</td><td>创建、查看编辑文本</td><td align="left">进程监控及管理</td><td>RHEL网络管理</td><td>访问Linux文件系统</td></tr><tr><td align="center">红帽企业Linux入门</td><td>管理本地用户和组</td><td align="left">控制服务和守护进程</td><td>归档与系统间复制文件</td><td>分析服务器和获取支持</td></tr><tr><td align="center">访问命令行</td><td>控制对文件的访问</td><td align="left">OpenSSH服务</td><td>安装与升级软件包</td><td>回顾复习</td></tr><tr><td align="center">从命令行管理文件</td><td></td><td align="left">日志分析及存储</td><td></td><td>RH124模拟考试环境部署</td></tr><tr><td align="center">在RHEL中获取帮助</td><td></td><td align="left"></td><td></td><td></td></tr></tbody></table><h2 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h2><table><thead><tr><th>ID</th><th>内容</th></tr></thead><tbody><tr><td>硬件</td><td>cpu：VT-X、mem：8G，disk 80G</td></tr><tr><td>软件</td><td>OS：x64 APP：VMware-15（workstation|Fustion，苹果新系统不支持嵌套虚虚拟化）</td></tr><tr><td>文件</td><td>folder：RH294.vmx（配置文件）</td></tr><tr><td>压缩软件</td><td>7z&#x2F;win ，keka&#x2F;mac</td></tr><tr><td>冲突</td><td>关闭微软自带Hyper-V功能</td></tr></tbody></table><h2 id="workstation"><a href="#workstation" class="headerlink" title="workstation"></a>workstation</h2><h2 id="虚拟机作用"><a href="#虚拟机作用" class="headerlink" title="虚拟机作用"></a>虚拟机作用</h2><table><thead><tr><th>环境分类</th><th>VM 虚拟机名称</th><th>功能</th></tr></thead><tbody><tr><td>VMware</td><td>foundation0</td><td>宿主机</td></tr><tr><td>KVM</td><td>classroom</td><td>分配dhcp、dns、软件仓库</td></tr><tr><td>KVM</td><td>bastion</td><td>网关设备，连接其他机器的网络</td></tr><tr><td>KVM</td><td>workstation</td><td>提供图形界面连接其他机器：如abcd</td></tr><tr><td>KVM</td><td>servera、b、c、d</td><td>练习机，nic&#x2F;mac+IP+hostname</td></tr></tbody></table><h2 id="虚拟机账号密码"><a href="#虚拟机账号密码" class="headerlink" title="虚拟机账号密码"></a>虚拟机账号密码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">workstationservera、serverb在lab.example.com同一个域内</span><br><span class="line">foundation0    普通用户kiosk 密码 redhat     超级用户root密码 Asimov</span><br><span class="line">foundation0  172.25.254.250    宿主机</span><br><span class="line">classroom     172.25.254.254       超级用户 root 密码 Asimov</span><br><span class="line">bastion     172.25.250.254      普通 student 密码student  超级用户 root 密码 redhat</span><br><span class="line">servera  172.25.250.10       普通 student 密码student，超级用户 root 密码redhat</span><br><span class="line">serverb  172.25.250.11       普通 student 密码student  超级用户 root 密码redhat</span><br><span class="line">账号kisok     redhat              root  Asimov</span><br><span class="line">student student             超级用户root  redhat</span><br></pre></td></tr></table></figure><h2 id="支持中文"><a href="#支持中文" class="headerlink" title="支持中文"></a>支持中文</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">安装之前su -  root  输入密码：Asimov   yum install -y langpacks-zh_CN </span><br><span class="line">设置里面 region language 选择语言包 注销即可</span><br></pre></td></tr></table></figure><h2 id="虚拟机常用控制命令"><a href="#虚拟机常用控制命令" class="headerlink" title="虚拟机常用控制命令"></a>虚拟机常用控制命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">14  rht-vmctl status all</span><br><span class="line">15  rht-vmctl status classroom </span><br><span class="line">16  rht-vmctl start classroom </span><br><span class="line">17  rht-vmctl start bastion </span><br><span class="line">18  rht-vmctl start servera</span><br><span class="line">19  rht-vmctl stop servera</span><br><span class="line">rht-vmctl fullreset servera INIT快照</span><br><span class="line">20  su -</span><br><span class="line">21  history </span><br><span class="line">22  rht-vmctl restart bastion</span><br><span class="line">23  ping classroom</span><br><span class="line">24  ping bastion</span><br><span class="line">25  rht-vmctl status all</span><br><span class="line">26  ssh root@bastion</span><br></pre></td></tr></table></figure><h2 id="环境设置"><a href="#环境设置" class="headerlink" title="环境设置"></a>环境设置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">环境INIT快照默认为RH294环境</span><br><span class="line">如果切换课程的话，请进行如下操作</span><br><span class="line"><span class="comment"># rht-clearcourse 0</span></span><br><span class="line"><span class="comment"># rht-setcourse rh124</span></span><br><span class="line"><span class="comment"># rht-vmctl status all</span></span><br><span class="line"><span class="comment"># rht-vmctl start classroom</span></span><br><span class="line"><span class="comment"># rht-vmctl start bastion</span></span><br><span class="line"><span class="comment"># rht-vmctl start workstation</span></span><br><span class="line"><span class="comment"># ping workstation</span></span><br><span class="line"><span class="comment"># ssh workstation</span></span><br><span class="line">[student@workstation ~]$ lab cli-review start</span><br><span class="line"></span><br><span class="line">Starting lab.</span><br><span class="line"></span><br><span class="line">Preparing workstation <span class="keyword">for</span> lab exercise work:</span><br><span class="line"></span><br><span class="line"> · Ensuring a clean lab environment............................  SUCCESS</span><br><span class="line"> · Copying file required <span class="keyword">for</span> lab tasks.........................  SUCCESS</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="第一章-认识Linux及Redhat"><a href="#第一章-认识Linux及Redhat" class="headerlink" title="第一章 认识Linux及Redhat"></a>第一章 认识Linux及Redhat</h1><h2 id="历史及背景"><a href="#历史及背景" class="headerlink" title="历史及背景"></a>历史及背景</h2><p>由于Red Hat公司所发布的Red Hat Linux系列发行版本具有更广泛的企业用户基础，也代表着Linux操作系统的事实标准，因此格外受到用户的重视 ，所以我们学习Linux就从RHEL入手<br>Redhat：服务器版操作系统，服务收费<br>CentOS：Redhat支持的社区项目，服务器版操作系统，完全开源<br>Fedora：桌面版操作系统，开源</p><h2 id="培训体系"><a href="#培训体系" class="headerlink" title="培训体系"></a>培训体系</h2><p>RHCA</p><p>云计算 | 平台技术 | 数据中心</p><p>云计算方向</p><table><thead><tr><th>课程</th><th>内容</th></tr></thead><tbody><tr><td>CL210</td><td>红帽openstack认证系统管理员</td></tr><tr><td>DO447</td><td>Ansible高级</td></tr><tr><td>DO280</td><td>红帽平台即服务专业技能证书openshift  k8s</td></tr><tr><td>RH358</td><td>RHCE7升级版 服务安全 haproxy mariadb varnish等</td></tr><tr><td>RH236</td><td>红帽混合云存储专业技能证书</td></tr></tbody></table><h1 id="第二章-访问命令行"><a href="#第二章-访问命令行" class="headerlink" title="第二章 访问命令行"></a>第二章 访问命令行</h1><h2 id="登陆与退出"><a href="#登陆与退出" class="headerlink" title="登陆与退出"></a>登陆与退出</h2><h2 id="控制台和终端"><a href="#控制台和终端" class="headerlink" title="控制台和终端"></a>控制台和终端</h2><table><thead><tr><th>控制台</th><th>快捷键</th><th>可选项</th></tr></thead><tbody><tr><td>CLI</td><td>Ctrl+alt+Fx</td><td>x in （1，2，3，4，5，6）</td></tr><tr><td>GUI</td><td>Ctrl+alt+F2（占用1后空闲）</td><td></td></tr></tbody></table><h2 id="工作区展示"><a href="#工作区展示" class="headerlink" title="工作区展示"></a>工作区展示</h2><p>ctrl+alt+方向键上下、win+方向键左右、tab+alt</p><h2 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h2><p>shell的作用：提供接口，翻译用户端提供的命令给计算机识别，并把计算机的反应反馈给我们，（图形化也是一种shell），本质是个解释器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$SHELL</span>        <span class="comment">#查看当前使用的shell</span></span><br><span class="line"><span class="built_in">cat</span> /etc/shells </span><br><span class="line">tmux<span class="comment">#一种shell</span></span><br><span class="line"><span class="built_in">du</span> -sh /dev/<span class="comment">#查看文件内存占用</span></span><br><span class="line">bash --version</span><br><span class="line">w         <span class="comment">#查看登录的用户</span></span><br></pre></td></tr></table></figure><h2 id="命令提示符-前导符"><a href="#命令提示符-前导符" class="headerlink" title="命令提示符 前导符"></a>命令提示符 前导符</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[kiosk@foundation0 ~]$ </span><br><span class="line">时间:</span><br><span class="line">[kiosk@foundation0 etc11:02:32]$PS1=&#x27;[\u@\h \W \t]\$&#x27;</span><br><span class="line">[kiosk@foundation0 etc 11:02:37]$cd /etc/sysconfig/</span><br><span class="line">绝对路径：</span><br><span class="line">[root@foundation0 ~]#PS1=&#x27;[\u@\h \w]\$&#x27;</span><br><span class="line">[root@foundation0 ~]#cd /etc/sysconfig/</span><br><span class="line">[root@foundation0 /etc/sysconfig]#cd network-scripts/</span><br></pre></td></tr></table></figure><h2 id="命令的基本组成"><a href="#命令的基本组成" class="headerlink" title="命令的基本组成"></a>命令的基本组成</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">命令名称（可执行程序名称）</span><br><span class="line">选项（改变命令的行为） </span><br><span class="line">参数（命令操作的对象）</span><br><span class="line"># ls -l /boot 分别为命令名称 选项 参数</span><br></pre></td></tr></table></figure><h2 id="命令行快捷键"><a href="#命令行快捷键" class="headerlink" title="命令行快捷键"></a>命令行快捷键</h2><table><thead><tr><th>ctrl+a</th><th>光标跳至行首</th></tr></thead><tbody><tr><td>ctrl+e</td><td>光标跳至行尾</td></tr><tr><td>ctrl+u</td><td>从光标所在位置清空至行首</td></tr><tr><td>ctrl+k</td><td>从光标所在位置清空至行末</td></tr><tr><td>ctrl+左箭头</td><td>光标向左跳一个单词</td></tr><tr><td>ctrl+右箭头</td><td>光标向右跳一个单词</td></tr><tr><td>ctrl+w</td><td>回删一个单词</td></tr><tr><td>alt+d</td><td>删除光标后一个单词</td></tr><tr><td>ctrl+r</td><td>历史命令搜索</td></tr><tr><td>ctrl+c</td><td>终止</td></tr><tr><td>ctrl+l</td><td>清屏</td></tr><tr><td>ctrl+d</td><td>退出</td></tr><tr><td>ctrl+shift+t</td><td>新标签</td></tr><tr><td>alt+1 alt+2 alt+n（数字）</td><td>切换标签</td></tr><tr><td>ctrl + shift + +</td><td>放大</td></tr><tr><td>ctrl  + -</td><td>缩小</td></tr></tbody></table><h2 id="Tab补全"><a href="#Tab补全" class="headerlink" title="Tab补全"></a>Tab补全</h2><h2 id="history"><a href="#history" class="headerlink" title="history"></a>history</h2><ul><li>history -w 把历史执行的命令写入到~&#x2F;.bash_history，后加参数可以自定义保存到路径</li></ul><ul><li>！+ 关键词，执行包含关键词的第一条历史</li><li>！+ 序号，执行第n条历史</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"># clear</span><br><span class="line"># echo $SHELL</span><br><span class="line"># cat /etc/shells</span><br><span class="line"># tmux</span><br><span class="line"># nmcli connection show</span><br><span class="line"># history</span><br><span class="line"># cd /etc</span><br><span class="line"># cd</span><br><span class="line"># pwd</span><br><span class="line"># whoami</span><br><span class="line"># history</span><br><span class="line"># nmcli connection show</span><br><span class="line"># history</span><br><span class="line"># ls -a</span><br><span class="line"># history -w</span><br><span class="line"># ls -a</span><br><span class="line"># cat .bash_history</span><br><span class="line"># history</span><br><span class="line"># nmcli connection show</span><br><span class="line"># history</span><br><span class="line"># nmcli device status</span><br><span class="line"># history</span><br><span class="line"># nmcli device status</span><br><span class="line"># cat /etc/shells</span><br><span class="line"># history -w test</span><br><span class="line"># cat test</span><br><span class="line">~             </span><br></pre></td></tr></table></figure><h2 id="echo"><a href="#echo" class="headerlink" title="echo"></a>echo</h2><ul><li>echo - e “”,支持字符转义，比如&#x2F;n为enter</li><li>echo 某结果 | 需要输入的某命令，免除人机交互，比如<code>echo 123456|passwd --stdin user</code></li></ul><h2 id="管道操作"><a href="#管道操作" class="headerlink" title="管道操作"></a>管道操作</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># useradd test</span><br><span class="line"># passwd test</span><br><span class="line"># echo 123|passwd --stdin test</span><br><span class="line"># useradd harry</span><br><span class="line"># echo 123|passwd --stdin harry </span><br><span class="line"># ls</span><br><span class="line"># ls | wc -l</span><br><span class="line"># yum install lrzsz</span><br><span class="line"># yum install httpd</span><br><span class="line"># echo n|yum install httpd</span><br><span class="line"># echo y|yum install httpd</span><br></pre></td></tr></table></figure><h2 id="shell执行方式"><a href="#shell执行方式" class="headerlink" title="shell执行方式"></a>shell执行方式</h2><p>交互式|非交互式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">56  echo n|yum install lrzsz</span><br><span class="line">57  echo y|yum install lrzsz</span><br><span class="line">58  history </span><br><span class="line">59  :q</span><br><span class="line">60  echo hello world</span><br><span class="line">61  date</span><br><span class="line">62  whoami</span><br><span class="line">63  pwd</span><br><span class="line">64  nmcli connection show </span><br><span class="line">65  passwd </span><br></pre></td></tr></table></figure><h2 id="关机或重启操作"><a href="#关机或重启操作" class="headerlink" title="关机或重启操作"></a>关机或重启操作</h2><table><thead><tr><th></th><th>关机</th><th>重启</th></tr></thead><tbody><tr><td>1</td><td>init 0</td><td>init 6</td></tr><tr><td>2</td><td>poweroff</td><td>reboot</td></tr><tr><td>3</td><td>systemctl poweroff</td><td>systemctl reboot</td></tr><tr><td>4</td><td>shutdown -h 20：00</td><td>shutdown -r 0</td></tr></tbody></table><h2 id="在新的一行继续执行命令"><a href="#在新的一行继续执行命令" class="headerlink" title="在新的一行继续执行命令"></a>在新的一行继续执行命令</h2><p>\</p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>变量名和等号之间不能有空格</p><p>​同时，变量名的命名须遵循如下规则：</p><ul><li>命名只能使用英文字母，数字和下划线，首个字符不能以数字开头。</li><li>中间不能有空格，可以使用下划线（_）。</li><li>不能使用标点符号。</li><li>不能使用bash里的关键字（可用help命令查看保留关键字）。</li></ul><h2 id="命令别名"><a href="#命令别名" class="headerlink" title="命令别名"></a>命令别名</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># alias </span><br><span class="line"># ls -l</span><br><span class="line"># ll</span><br><span class="line"># alias </span><br><span class="line"># alias ps=&#x27;ps aux&#x27;</span><br><span class="line"># ps</span><br><span class="line"># alias </span><br><span class="line"># ps</span><br><span class="line"># vim .bashrc </span><br><span class="line">alias ps=&#x27;ps aux&#x27;</span><br><span class="line">重新登陆 | source .bashrc</span><br><span class="line"># ps</span><br></pre></td></tr></table></figure><h2 id="命令替换"><a href="#命令替换" class="headerlink" title="命令替换"></a>命令替换</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">   72  echo &#x27;Current time is:&#x27; `date`</span><br><span class="line">   73  echo &#x27;Current time is:&#x27; $(date)</span><br><span class="line">   74  echo &#x27;Current login user is:&#x27; whoami</span><br><span class="line">   75  echo &#x27;Current login user is:&#x27; `whoami`</span><br><span class="line">   76  echo &#x27;Current login user is:&#x27; $(whoami)</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">[root@servera lab]# which cat</span><br><span class="line">/usr/bin/cat</span><br><span class="line">[root@servera lab]# ls -l /usr/bin/cat</span><br><span class="line">-rwxr-xr-x. 1 root root 51856 Jan 11  2019 /usr/bin/cat</span><br><span class="line">[root@servera lab]# ls -l $(which cat)</span><br><span class="line">-rwxr-xr-x. 1 root root 51856 Jan 11  2019 /usr/bin/cat</span><br></pre></td></tr></table></figure><p><code>命令替换：$(command),获取到一个命令执行的结果，本质是在新开的终端里执行了这个命令然后返回结果</code></p><p>`command&#96; 等于$(command)</p><h1 id="第三章-从命令行管理文件"><a href="#第三章-从命令行管理文件" class="headerlink" title="第三章 从命令行管理文件"></a>第三章 从命令行管理文件</h1><ul><li>Linux哲学之一：一切都是文件</li></ul><h2 id="路径表示和导航"><a href="#路径表示和导航" class="headerlink" title="路径表示和导航"></a>路径表示和导航</h2><p>绝对路径 &#x2F;开始</p><p>相对路径 非&#x2F;开始，所以~也是相对路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd</span></span><br><span class="line"><span class="comment"># pwd</span></span><br><span class="line"><span class="comment"># cd /etc/sysconfig/network-scripts/</span></span><br><span class="line"><span class="comment"># cd -</span></span><br><span class="line"><span class="comment"># pwd</span></span><br><span class="line"><span class="comment"># cd ..</span></span><br><span class="line"><span class="comment"># pwd</span></span><br><span class="line"><span class="comment"># cd ~</span></span><br><span class="line"><span class="comment"># pwd</span></span><br><span class="line"><span class="comment"># cd /var/log/</span></span><br><span class="line"><span class="comment"># pwd</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># cd samba/</span></span><br></pre></td></tr></table></figure><h2 id="文件管理常用命令"><a href="#文件管理常用命令" class="headerlink" title="文件管理常用命令"></a>文件管理常用命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> /etc/passwd</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> -n /etc/passwd</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">head</span> /etc/passwd</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">head</span> -n 3 /etc/passwd</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">tail</span> /etc/passwd</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">tail</span> -n 1 /etc/passwd</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">more /etc/passwd</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">less /etc/passwd</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> <span class="built_in">test</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> <span class="built_in">test</span>/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ls</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cp</span> /etc/passwd .</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ls</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mv</span> passwd pass</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ls</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">pwd</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mv</span> pass ..</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ls</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ls</span> ..</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mv</span> ../pass .</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ls</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mv</span> pass pa</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ls</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">touch</span> myfile</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ls</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ls</span> -l</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">touch</span> file</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ls</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim file1</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ls</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">echo</span> hello world &gt; <span class="built_in">test</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ls</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> <span class="built_in">test</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ls</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">rm</span> file1</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ls</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">rm</span> file1</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ls</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> mydir</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ls</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ls</span> -l</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">rmdir</span> mydir/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ls</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> mydir</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">rm</span> mydir/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">rm</span> -r mydir/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ls</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> mydir</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">rm</span> -rf ./</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ls</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">rm</span> -rf ./*</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ls</span></span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@workstation ~]# touch myfile&#123;1..9&#125;</span><br><span class="line">[root@workstation ~]# ls</span><br><span class="line">anaconda-ks.cfg  myfile3  myfile6  myfile9</span><br><span class="line">myfile1          myfile4  myfile7  original-ks.cfg</span><br><span class="line">myfile2          myfile5  myfile8  test</span><br><span class="line">[root@workstation ~]# rename myfile MYFILE myfile?</span><br><span class="line">[root@workstation ~]# ls</span><br><span class="line">anaconda-ks.cfg  MYFILE3  MYFILE6  MYFILE9</span><br><span class="line">MYFILE1          MYFILE4  MYFILE7  original-ks.cfg</span><br><span class="line">MYFILE2          MYFILE5  MYFILE8  test</span><br></pre></td></tr></table></figure><h2 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h2><p>作用是可以批量操作（模糊）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"># mkdri test</span><br><span class="line"># ls</span><br><span class="line"># mkdir mydir</span><br><span class="line"># cd mydir/</span><br><span class="line"># ls</span><br><span class="line"># touch myfile&#123;1..9&#125;</span><br><span class="line"># ls</span><br><span class="line"># touch 1.&#123;a..z&#125;</span><br><span class="line"># ls</span><br><span class="line"># touch &#123;1..5&#125;.&#123;a..c&#125;</span><br><span class="line"># ls</span><br><span class="line"># touch a ab abc</span><br><span class="line"># ls</span><br><span class="line"># ls ?</span><br><span class="line"># ls ??</span><br><span class="line"># ls ???</span><br><span class="line"># rename a A ??</span><br><span class="line"># ls</span><br><span class="line"># ls ???</span><br><span class="line"># rename 1 999 ???</span><br><span class="line"># ls </span><br><span class="line"># ls</span><br><span class="line"># rm -rf myfile*</span><br><span class="line"># ls</span><br><span class="line"># rm -rf 999*</span><br><span class="line"># ls</span><br><span class="line"># history </span><br><span class="line"># ls</span><br><span class="line"># touch &#123;a,b,c&#125;FILE</span><br><span class="line"># ls</span><br><span class="line"># ls [123].*</span><br><span class="line"># touch 1.txt</span><br><span class="line"># ls [123].*</span><br><span class="line"># ls [^123].*</span><br><span class="line"># ls [!123].*</span><br></pre></td></tr></table></figure><ul><li><code>[]的细节:不能匹配多个字符，只能匹配单个且其中任意一个字符，而且不支持字符分割(比如1，3，5)，范围（比如1..5），也不支持创建文件时的转义（就是说touch一个带[]的文件会原原本本地把[]打出来）。查看文件时（ls）可以。</code></li></ul><h2 id="连接文件"><a href="#连接文件" class="headerlink" title="连接文件"></a>连接文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir test</span></span><br><span class="line"><span class="comment"># cd test/</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># dd if=/dev/zero of=source bs=1M count=10</span></span><br><span class="line"><span class="comment"># ls -lh</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># ln source hard</span></span><br><span class="line"><span class="comment"># ln -s source soft</span></span><br><span class="line"><span class="comment"># ls -lhi</span></span><br><span class="line"><span class="comment"># rm hard</span></span><br><span class="line"><span class="comment"># rm soft</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># ln source hard</span></span><br><span class="line"><span class="comment"># ln -s source soft</span></span><br><span class="line"><span class="comment"># ls -lhi</span></span><br><span class="line"><span class="comment"># mkdir source_dir</span></span><br><span class="line"><span class="comment"># ls -l</span></span><br><span class="line"><span class="comment"># ln source_dir/ harddir</span></span><br><span class="line"><span class="comment"># ln -s source_dir/ softdir</span></span><br><span class="line"><span class="comment"># ls -lhi</span></span><br><span class="line"><span class="comment"># unlink soft</span></span><br><span class="line"><span class="comment"># unlink softdir/</span></span><br><span class="line"><span class="comment"># ls -lhi</span></span><br><span class="line"><span class="comment"># unlink softdir/</span></span><br><span class="line">1.命令相同 参数不同 </span><br><span class="line">  软链接在创建必须绝对路径（实验证明，相对也可以）</span><br><span class="line">  硬链接都可以</span><br><span class="line">2.硬链接的权限和源文件完全一致</span><br><span class="line">  软链接的链接文件权限永远是777 和源文件权限不同</span><br><span class="line">3.硬链接可以删除，移动源文件 </span><br><span class="line">  软链接不可以删除，移动源文件</span><br><span class="line">4.软链接inode和源文件不同</span><br><span class="line">  硬链接的inode的源文件相同</span><br><span class="line">5.软链接可以对目录生效 </span><br><span class="line">  硬链接只可以对文件操作</span><br><span class="line">6.软链接可以跨文件系统</span><br><span class="line">  硬链接不可以跨文件系统</span><br><span class="line">  不能跨分区做硬链接，因为每个分区都存在相同的 inode 文件。</span><br><span class="line">7.硬链接和原来文件大小一样，软连接不一样</span><br><span class="line">  软硬连接目录总大小不变</span><br><span class="line"><span class="built_in">unlink</span> 接文件名 取消链接</span><br></pre></td></tr></table></figure><h1 id="第一天内容小节"><a href="#第一天内容小节" class="headerlink" title="第一天内容小节"></a>第一天内容小节</h1><hr><ul><li><p><code>Esc . 可以找到上一个参数</code></p></li><li><p>在终端里，<code>w查看登录的用户</code></p></li><li><p>hostname查看当前主机的长域名</p></li><li><p>$和#表明当前用户的权限</p></li><li><p>命令   文件名称</p><p>​+选项 改变命令的性质</p><p>​+参数 命令执行的对象</p></li><li><p>更改前导符，给参数PS1直接赋值即可</p></li><li><p>提示符有四种</p></li><li><p><code>cat -n 左边显示行数</code></p></li><li><p>head -n 头n行，默认10</p></li><li><p>tail -n 尾10行，默认10</p></li><li><p><code>more 支持百分比显示，enter翻页</code></p></li><li><p>less enter翻行，space翻页</p></li><li><p>mv 移动，改名</p></li><li><p>touch，vim，<code>echo * &gt;</code> 创建文件</p></li><li><p>rm 删除，-r递归删除，删多层嵌套目录</p></li><li><p>cp -r 级联复制</p></li><li><p>rename 正宗改名方法，<code>替换字符 更改后的字符 匹配的文件</code>（可以使用正则表达式）</p></li><li><p>通配符：{},[],?,*,a..b,!和^取反，touch不支持[],支持{}，ls全部支持，[]是从中取任意一个</p></li><li><p>ls -l 看到的内容：</p><p><code>权限，硬链接数量，所属用户，所属组，大小，修改时间，访问时间，名称</code></p></li><li><p><code>7种文件类型：- f 普通|d 目录|l 软连接|b 块设备|s 套接字socket|p 管道pipe|c 字符设备文件char</code></p></li><li><p>file 查询文件类型，Linux文件后缀不决定文件类型（不同于windows）</p></li><li><p><code>stat 查看文件属性</code>，其中INode为索引节点</p></li><li><p><code>touch已经存在的文件后修改文件的时间戳，不会报错，但是mkdir不行</code></p></li><li><p><a href="https://www.huaweicloud.com/articles/06784583d471f86803b62bc974f0f300.html"><strong><code>正则表达式和通配符的关系与区别</code></strong></a>（个人易混淆，现在也没分清）</p><p>主要一点为：通配符适用于shell，但是正则表达式适用于各种开发环境，而且不同环境下还可能有所不同。</p></li></ul><h1 id="第四章-在rhel中获取帮助"><a href="#第四章-在rhel中获取帮助" class="headerlink" title="第四章 在rhel中获取帮助"></a>第四章 在rhel中获取帮助</h1><h2 id="help、man手册"><a href="#help、man手册" class="headerlink" title="help、man手册"></a>help、man手册</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ls --help</span></span><br><span class="line"><span class="comment"># mv --help</span></span><br><span class="line"><span class="comment"># cp --help</span></span><br><span class="line"><span class="comment"># cat --help</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># man man</span></span><br><span class="line"><span class="comment"># man ls</span></span><br><span class="line"><span class="comment"># man -k nmcli</span></span><br><span class="line"><span class="comment"># man -k firewall</span></span><br><span class="line"><span class="comment"># man firewalld.richlanguage</span></span><br><span class="line"><span class="comment"># man passwd</span></span><br><span class="line"><span class="comment"># man 5 passwd</span></span><br><span class="line"><span class="comment"># mandb</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">命令</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">man -k</td><td align="center">同过关键字查找要man的手册有哪些</td></tr><tr><td align="center">man 数字</td><td align="center">查看不同章节</td></tr><tr><td align="center">mandb</td><td align="center">更新默认索引数据库</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># man man（1到9个段的不同的内容）</span><br><span class="line">    1   Executable programs or shell commands</span><br><span class="line">       2   System calls (functions provided by the kernel)</span><br><span class="line">       3   Library calls (functions within program libraries)</span><br><span class="line">       4   Special files (usually found in /dev)</span><br><span class="line">       5   File formats and conventions eg /etc/passwd</span><br><span class="line">       6   Games</span><br><span class="line">       7   Miscellaneous (including macro packages and conventions), e.g. man(7), groff(7)</span><br><span class="line">       8   System administration commands (usually only for root)</span><br><span class="line">       9   Kernel routines [Non standard]</span><br></pre></td></tr></table></figure><p>运维常用：1（命令），5（文件格式），8（管理员高级命令，比如-k）；</p><p>开发常用：2，3，9</p><table><thead><tr><th align="center">man手册</th><th align="center"></th></tr></thead><tbody><tr><td align="center">&#x2F; | ?</td><td align="center">查找（从上往下） | 查找（从下往上，与&#x2F;）</td></tr><tr><td align="center">n | N</td><td align="center">匹配下一个 | 匹配上一个</td></tr><tr><td align="center">g | G</td><td align="center">开头 | 结尾</td></tr><tr><td align="center">q</td><td align="center">退出</td></tr></tbody></table><h2 id="info（pinfo）"><a href="#info（pinfo）" class="headerlink" title="info（pinfo）"></a>info（pinfo）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">更加彻底的说明</span><br><span class="line">/ 搜索</span><br><span class="line">空格翻页</span><br><span class="line">方向 选择</span><br><span class="line">n 章节</span><br></pre></td></tr></table></figure><h2 id="RPM包文档"><a href="#RPM包文档" class="headerlink" title="RPM包文档()"></a>RPM包文档()</h2><p>文件浏览器访问</p><p><code>file:///usr/share/doc</code></p><p>如：阿帕奇服务器，在浏览器上查看手册</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">servera：</span><br><span class="line"><span class="comment"># yum -y install httpd</span></span><br><span class="line"><span class="comment"># yum -y install httpd-manual</span></span><br><span class="line"><span class="comment"># systemctl start httpd</span></span><br><span class="line"><span class="comment"># firewall-cmd --permanent --add-service=http 防火墙添加服务</span></span><br><span class="line"><span class="comment"># firewall-cmd --reload  重启</span></span><br><span class="line"><span class="comment"># hostname查看主机名</span></span><br><span class="line">f0：</span><br><span class="line">http://servera.lab.example.com/manual/（在浏览器里输入主机名，查看manual手册）</span><br></pre></td></tr></table></figure><h2 id="官方网站"><a href="#官方网站" class="headerlink" title="官方网站"></a>官方网站</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">https://access.redhat.com/</span><br><span class="line">http://docs.kubernetes.org.cn/</span><br><span class="line">https://www.linux.org/</span><br><span class="line">https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html</span><br></pre></td></tr></table></figure><h2 id="互联网"><a href="#互联网" class="headerlink" title="互联网"></a>互联网</h2><p>搜索引擎，官网查询</p><h1 id="第五章-创建、查看-编辑文本"><a href="#第五章-创建、查看-编辑文本" class="headerlink" title="第五章 创建、查看 编辑文本"></a>第五章 创建、查看 编辑文本</h1><h2 id="vim常用快捷键"><a href="#vim常用快捷键" class="headerlink" title="vim常用快捷键"></a>vim常用快捷键</h2><table><thead><tr><th align="center">命令模式</th><th align="center"><code>刚进入vim界面的模式</code></th></tr></thead><tbody><tr><td align="center">命令</td><td align="center">解释</td></tr><tr><td align="center">h j k l</td><td align="center">左下上右</td></tr><tr><td align="center">方向键</td><td align="center">上下左右</td></tr><tr><td align="center">1G、nG</td><td align="center">n代表一个数字，去第1行或n行</td></tr><tr><td align="center">gg | G</td><td align="center">将光标定位到文章的顶端 | 底端</td></tr><tr><td align="center">Home或^ | End或 $</td><td align="center">行首 | 行尾</td></tr><tr><td align="center">x | X或D</td><td align="center">向后删除 | 向前删除一个字符</td></tr><tr><td align="center">dd ，  ndd</td><td align="center">删除1行，n行</td></tr><tr><td align="center">dgg | dG</td><td align="center">删到顶 | 删到底</td></tr><tr><td align="center">d$ | d^或d0</td><td align="center">删到行尾 | 删到行头</td></tr><tr><td align="center">yy，nyy | yw</td><td align="center">复制1行，n行 | 复制单词 单词首字母复制</td></tr><tr><td align="center">p|P</td><td align="center">粘贴到下一（行）（格） | 粘贴到上一（行）（格）<code>yw格，yy为行</code></td></tr><tr><td align="center">u | U</td><td align="center">撤销 | 撤销当前行所有操作</td></tr><tr><td align="center">ZZ</td><td align="center">保存退出</td></tr><tr><td align="center"><strong>命令模式2</strong></td><td align="center"><strong>切换模式的命令</strong></td></tr><tr><td align="center">a</td><td align="center">字符后进入插入模式（append）</td></tr><tr><td align="center">i</td><td align="center">当前字符位置进入插入模式（insert）</td></tr><tr><td align="center">o</td><td align="center">在下一行新创建一行进入插入模式</td></tr><tr><td align="center">A</td><td align="center">在行尾进入插入模式</td></tr><tr><td align="center">I</td><td align="center">在行首进入插入模式</td></tr><tr><td align="center">O</td><td align="center">在上一行新创建一行进入插入模式</td></tr><tr><td align="center">s|S</td><td align="center">删除光标字符后插入| 删除光标行后插入，不常用</td></tr><tr><td align="center"><strong>其他模式</strong></td><td align="center"><strong>切换模式</strong>（具体区分见下表）</td></tr><tr><td align="center">：</td><td align="center">末行模式</td></tr><tr><td align="center">v、V或Ctrl+V</td><td align="center">可视模式</td></tr><tr><td align="center">r|R</td><td align="center">替换模式   单个替换|连续替换</td></tr><tr><td align="center">&#x2F;word，？word</td><td align="center">&#x2F;向下查找，？向上查找<code>类似于man中的搜索功能</code></td></tr><tr><td align="center">n，N</td><td align="center">定位到下一个匹配字符，定位到上一个匹配字符</td></tr><tr><td align="center"><strong>末行模式</strong></td><td align="center"><code>Ecs后：的模式</code></td></tr><tr><td align="center">w</td><td align="center">保存</td></tr><tr><td align="center">q</td><td align="center">退出</td></tr><tr><td align="center">e</td><td align="center">重新打开（刷新）</td></tr><tr><td align="center">wq|wq！</td><td align="center">退出并保存 | 强制保存并退出</td></tr><tr><td align="center">:1、:n</td><td align="center">末行模式下定位行数</td></tr><tr><td align="center">q！</td><td align="center">强制退出</td></tr><tr><td align="center">x|X</td><td align="center">保存退出|加密文件（X加密后，如果使用x保存退出，密码不生效），X设置空密码取消加密</td></tr><tr><td align="center">set nu</td><td align="center">设置行号</td></tr><tr><td align="center">set nonu</td><td align="center">取消行号</td></tr><tr><td align="center">：w &#x2F;newfile</td><td align="center">另存为其他文件</td></tr><tr><td align="center">：r &#x2F;newfile</td><td align="center">读取&#x2F;newfile到本文件中</td></tr><tr><td align="center">：!command</td><td align="center">vim编辑过程中，查询linux</td></tr><tr><td align="center"><strong>可视化模式</strong></td><td align="center"><code>对v，V，ctrl v</code></td></tr><tr><td align="center">v</td><td align="center">区块模式（根据光标的位置）</td></tr><tr><td align="center">V</td><td align="center">行编辑模式（默认整行选中）</td></tr><tr><td align="center">ctrl v</td><td align="center">列编辑模式（每行中只选同一列的）</td></tr><tr><td align="center"></td><td align="center"><code>选中以后可以对多个部分进行编辑，只显示在第一个，enter后才会全部编辑</code></td></tr><tr><td align="center"><strong>替换模式</strong></td><td align="center"><strong>在末行模式中执行的命令（没必要记模式名称）</strong></td></tr><tr><td align="center">：s</td><td align="center">只匹配当前行</td></tr><tr><td align="center">s  &#x2F;g</td><td align="center">全局模式，匹配一行内的所有</td></tr><tr><td align="center">%s</td><td align="center">所有行替换</td></tr><tr><td align="center">：1,3 s</td><td align="center">替换第一行到第三行<code>替换模式中指定行只能表示范围，这个方法不能表示单独几行</code></td></tr><tr><td align="center">：&#x2F;string1&#x2F;，&#x2F;string2&#x2F;</td><td align="center"><strong>替换两个string所在行的内容</strong>,而不是两个string间的字符</td></tr><tr><td align="center"><strong>历史记录</strong></td><td align="center"></td></tr><tr><td align="center">q :</td><td align="center">查看前几条历史记录</td></tr><tr><td align="center"></td><td align="center">可以使用命令模式下的指令，编辑并enter可以直接使用</td></tr></tbody></table><h1 id="遗忘内容："><a href="#遗忘内容：" class="headerlink" title="遗忘内容："></a>遗忘内容：</h1><ul><li><input disabled="" type="checkbox"> <table><thead><tr><th align="center"><strong>替换模式</strong></th><th align="center"><strong>在末行模式中执行的命令（没必要记模式名称）</strong></th></tr></thead><tbody><tr><td align="center">：s&#x2F;sting1&#x2F;string2</td><td align="center">只匹配当前行,替换当前行内第一个string1为string2，并高亮所有string1</td></tr><tr><td align="center">s  &#x2F;g</td><td align="center">全局模式，匹配一行内的所有</td></tr><tr><td align="center">%s</td><td align="center">所有行替换</td></tr><tr><td align="center">：1,3 s</td><td align="center">替换第一行到第三行<code>替换模式中指定行只能表示范围，这个方法不能表示单独几行</code></td></tr><tr><td align="center">：&#x2F;string1&#x2F;，&#x2F;string2&#x2F;</td><td align="center"><strong>替换两个string所在行的内容</strong>,而不是两个string间的字符</td></tr></tbody></table></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">：s/adm/admin/默认针对当前行操作</span><br><span class="line">：set nu</span><br><span class="line">:1,3s/root/administrator/指定行数的操作</span><br><span class="line">:1s/0/100/默认替换指定行的第一个匹配到的字段</span><br><span class="line">:1s/0/999/g加上g 针对指定行的所有匹配到的字段进行处理</span><br><span class="line">:%s/nologin/false针对所有行的第一个匹配到的字段进行处理</span><br><span class="line">:5,$s/x/y5到最后一行第一个匹配到的处理</span><br><span class="line">：^,3s/x/y发现这个报错了，因为我们不知道最后一行，但是第一行是确定知道的</span><br><span class="line">:.,$s/x/y当前行到最后一行匹配到的字段处理</span><br></pre></td></tr></table></figure><h2 id="vim个性化设置"><a href="#vim个性化设置" class="headerlink" title="vim个性化设置"></a>vim个性化设置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@servera test]# cat ~/.vimrc</span><br><span class="line">set nu</span><br><span class="line">set cursorline</span><br></pre></td></tr></table></figure><h2 id="输入输出"><a href="#输入输出" class="headerlink" title="输入输出"></a>输入输出</h2><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">0=stdin 标准输入</span><br><span class="line">1=stdout 标准输出</span><br><span class="line">2=stderr 标准错误输出</span><br><span class="line">&amp;=1+2两者结合</span><br><span class="line">1&gt;将标准输出重定向到其他，一般省略1</span><br><span class="line">2&gt;将标准错误输出重定向到其他</span><br><span class="line">&amp;&gt;两者一起重定向到其他</span><br></pre></td></tr></table></figure><h3 id="输出重定向"><a href="#输出重定向" class="headerlink" title="输出重定向"></a>输出重定向</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat newfile                                                       </span></span><br><span class="line"><span class="comment"># cat newfile &gt;&gt; file</span></span><br><span class="line"><span class="comment"># cat file</span></span><br><span class="line"><span class="comment"># echo hello world</span></span><br><span class="line"><span class="comment"># echo hello world &gt;&gt; file</span></span><br><span class="line"><span class="comment"># cat file</span></span><br><span class="line"><span class="comment"># echo hello world &gt; file</span></span><br><span class="line"><span class="comment"># cat file</span></span><br><span class="line"><span class="comment"># &gt; file</span></span><br><span class="line"><span class="comment"># cat file</span></span><br><span class="line"><span class="comment"># lscd</span></span><br><span class="line"><span class="comment"># lscd &gt;&gt; test</span></span><br><span class="line"><span class="comment"># cat test</span></span><br><span class="line"><span class="comment"># lscd 2&gt;&gt; test</span></span><br><span class="line"><span class="comment"># cat test</span></span><br><span class="line"><span class="comment"># find / -user student</span></span><br><span class="line"><span class="comment"># find / -user student &gt; test</span></span><br><span class="line"><span class="comment"># cat test</span></span><br><span class="line"><span class="comment"># find / -user student &amp;&gt; test</span></span><br><span class="line"><span class="comment"># cat test</span></span><br><span class="line"><span class="comment"># find / -user student &gt; true.txt 2&gt; error.txt</span></span><br><span class="line"><span class="comment"># cat true.txt</span></span><br><span class="line"><span class="comment"># cat error.txt</span></span><br></pre></td></tr></table></figure><h3 id="输入重定向"><a href="#输入重定向" class="headerlink" title="输入重定向"></a>输入重定向</h3><p>两种方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">wc</span> -l pa</span><br><span class="line"><span class="built_in">wc</span> -l &lt; pa</span><br><span class="line">passwd student</span><br><span class="line"></span><br><span class="line">passwd student &lt;&lt; <span class="string">end</span></span><br><span class="line"><span class="string">redhat</span></span><br><span class="line"><span class="string">redhat</span></span><br><span class="line"><span class="string">end</span>                                                             </span><br><span class="line">passwd student &lt;&lt; <span class="string">abc  #abc</span>为分隔符，上下一致即可，可任意选择</span><br><span class="line">redhat</span><br><span class="line">redhat</span><br><span class="line">abc</span><br></pre></td></tr></table></figure><ul><li>问题</li></ul><h2 id="引申出设置密码的几种方法"><a href="#引申出设置密码的几种方法" class="headerlink" title="引申出设置密码的几种方法"></a>引申出设置密码的几种方法</h2><ol><li><pre><code>passwd user &lt;&lt; abc123456123456abc<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">2. ```</span><br><span class="line">   echo 123 | passwd --stdin user</span><br></pre></td></tr></table></figure></code></pre></li><li><p>&#96;&#96;&#96;<br>passwd user（基础版本）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">4. ```bash</span><br><span class="line">   在用户注册时使用useradd -p &quot;一个加密后的密码&quot; user #尚未实现该功能</span><br></pre></td></tr></table></figure></li></ol><h2 id="变量-1"><a href="#变量-1" class="headerlink" title="变量"></a>变量</h2><p>命名规则</p><p>变量名称可以包含大写或小写字母、数字和下划线字符。</p><p>shell变量对于特定shell会话是唯一的。如果开了两个终端窗口，或者通过两个独立的登陆会话登陆同一远程服务器，那么您在运行两个shell，每个shell都有自己的一组shell变量值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">147 env</span><br><span class="line">148 set</span><br><span class="line">149 f801=zhangsan</span><br><span class="line">150 f802=lisi</span><br><span class="line">151 echo $f801</span><br><span class="line">152 echo $f802</span><br><span class="line">153 123abc=wangwu</span><br><span class="line">154 set</span><br><span class="line">155 env</span><br><span class="line">156 echo $PS1</span><br><span class="line">157 echo $HISTSIZE</span><br><span class="line">158 echo $HISTFILESIZE </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="变量文件"><a href="#变量文件" class="headerlink" title="变量文件"></a>变量文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vim 四个文件 加入了一行 echo filename</span><br><span class="line">[kiosk@foundation0 ~]$ ssh root@servera</span><br><span class="line">Activate the web console with: systemctl enable --now cockpit.socket</span><br><span class="line"></span><br><span class="line">Last login: Sat May 15 17:07:31 2021 from 172.25.250.250</span><br><span class="line">/etc/profile</span><br><span class="line">/etc/bashrc</span><br><span class="line">~/.bash_profile</span><br><span class="line">~/.bashrc</span><br></pre></td></tr></table></figure><h1 id="第六章-用户和组管理"><a href="#第六章-用户和组管理" class="headerlink" title="第六章 用户和组管理"></a>第六章 用户和组管理</h1><h2 id="用户账户"><a href="#用户账户" class="headerlink" title="用户账户"></a>用户账户</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#vim /etc/login.defs</span><br><span class="line">超级用户：0</span><br><span class="line">系统账号静态分配：1-200</span><br><span class="line">系统账号动态分配：201-999</span><br><span class="line">普通用户：1000-60000</span><br><span class="line">组ID也是一样的分配原则</span><br></pre></td></tr></table></figure><h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"> <span class="built_in">id</span></span><br><span class="line"><span class="comment"># id test</span></span><br><span class="line"><span class="comment"># useradd test</span></span><br><span class="line"><span class="comment"># id test</span></span><br><span class="line"><span class="comment"># vim /etc/passwd</span></span><br><span class="line"><span class="comment"># id bin</span></span><br><span class="line"><span class="comment"># vim /etc/login.defs</span></span><br><span class="line"><span class="comment"># vim /etc/passwd</span></span><br><span class="line"><span class="comment"># su - bin</span></span><br><span class="line"><span class="comment"># ssh bin@localhost</span></span><br><span class="line"><span class="comment"># passwd bin</span></span><br><span class="line"><span class="comment"># ssh bin@localhost</span></span><br><span class="line"><span class="comment"># vim /etc/passwd</span></span><br><span class="line"><span class="comment"># history -w</span></span><br><span class="line"><span class="comment"># useradd easthome</span></span><br><span class="line"><span class="comment"># id easthome</span></span><br><span class="line"><span class="comment"># grep easthome /etc/group</span></span><br><span class="line"><span class="comment"># grep tom /etc/group</span></span><br><span class="line"><span class="comment"># id tom</span></span><br><span class="line"><span class="comment"># useradd tom</span></span><br><span class="line"><span class="comment"># id tom</span></span><br><span class="line"><span class="comment"># grep tom /etc/group</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># passwd tom</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># echo 123456|passwd --stdin tom</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># passwd tom &lt;&lt; abc</span></span><br><span class="line"><span class="comment"># 123456</span></span><br><span class="line"><span class="comment"># 123456</span></span><br><span class="line"><span class="comment"># abc</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># useradd lizhi</span></span><br><span class="line"><span class="comment"># useradd --help</span></span><br><span class="line"><span class="comment"># useradd -p 123456 harry</span></span><br><span class="line"><span class="comment"># ssh harry@localhost</span></span><br><span class="line"><span class="comment"># vim /etc/login.defs</span></span><br><span class="line"><span class="comment"># grep tom /etc/passwd</span></span><br><span class="line"><span class="comment"># grep harry /etc/passwd</span></span><br><span class="line"><span class="comment"># useradd -u 2000 -s /sbin/nologin -c &#x27;administrator&#x27; jordan</span></span><br><span class="line"><span class="comment"># id jordan</span></span><br><span class="line"><span class="comment"># grep jordan /etc/passwd</span></span><br><span class="line"><span class="comment"># useradd -G jordan james</span></span><br><span class="line"><span class="comment"># id james</span></span><br><span class="line"><span class="comment"># usermod -u 3000 -s /bin/false -c &#x27;hello world&#x27; jordan</span></span><br><span class="line"><span class="comment"># grep jordan /etc/passwd</span></span><br><span class="line"><span class="comment"># useradd -s /sbin/nologin test1</span></span><br><span class="line"><span class="comment"># useradd -s /bin/false test2</span></span><br><span class="line"><span class="comment"># ssh test1@localhost</span></span><br><span class="line"><span class="comment"># echo 12345|passwd test1</span></span><br><span class="line"><span class="comment"># echo 12345|passwd test2</span></span><br><span class="line"><span class="comment"># ssh test1@localhost</span></span><br><span class="line"><span class="comment"># ssh test2@localhost</span></span><br><span class="line"><span class="comment"># grep test /etc/passwd</span></span><br><span class="line"><span class="comment"># vim /etc/passwd</span></span><br><span class="line"><span class="comment"># history</span></span><br><span class="line"><span class="comment"># userdel test1</span></span><br><span class="line"><span class="comment"># useradd test1</span></span><br><span class="line"><span class="comment"># userdel -r test1</span></span><br><span class="line"><span class="comment"># useradd test1</span></span><br><span class="line"><span class="comment"># userdel test2</span></span><br><span class="line"><span class="comment"># userdel -r harry</span></span><br><span class="line"><span class="comment"># id harry</span></span><br><span class="line"><span class="comment"># useradd harry</span></span><br><span class="line"><span class="comment"># tail -n 1 /etc/passwd</span></span><br><span class="line"><span class="comment"># su harry</span></span><br><span class="line"><span class="comment"># su -</span></span><br><span class="line"><span class="comment"># su - harry</span></span><br><span class="line"><span class="comment"># history -w</span></span><br><span class="line"><span class="comment"># vim ~/.bash_history</span></span><br><span class="line"><span class="comment"># useradd -u 0 zhangsan</span></span><br><span class="line"><span class="comment"># useradd --help</span></span><br><span class="line"><span class="comment"># useradd -u 0 -o zhangsan</span></span><br><span class="line"><span class="comment"># id zhangsan</span></span><br><span class="line"><span class="comment"># su - zhangsan</span></span><br></pre></td></tr></table></figure><p><code>用户和组的关系：多对多</code></p><p><code>非登录用户的/bin/bash：/sbin/nologin和/bin/false都可以，但是/bin/false更严格</code></p><p><code>useredel -r</code>删除用户时同时删除用户目录和邮箱文件，否则会导致创建同名用户时无法创建</p><table><thead><tr><th align="center">命令</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">id user</td><td align="center">查看user的uid，gid，所在组</td></tr><tr><td align="center">useradd</td><td align="center">添加用户</td></tr><tr><td align="center">vim &#x2F;etc&#x2F;passwd</td><td align="center"><code>lnss:x:1002:1002::/home/lnss:/bin/bash</code></td></tr><tr><td align="center"></td><td align="center">用户名，密码占位符，uid，gid，描述信息，家目录，bash</td></tr><tr><td align="center"><code>useradd -u 2000 -s /sbin/nologin -c &#39;administrator&#39; jordan</code></td><td align="center">添加用户时指定uid，bash，描述信息（comment）</td></tr><tr><td align="center">-g | -G</td><td align="center">添加主组 | 附加组</td></tr><tr><td align="center">usermod</td><td align="center">修改用户各属性</td></tr><tr><td align="center"></td><td align="center">各常用参数同useradd</td></tr><tr><td align="center">useradd -u 0 -o rooter</td><td align="center">添加一个与root公用uid &#x3D; 0的管理员用户时，-o可以使系统不要求uid的唯一性，实则该新建用户与root是一个用户（root别名）</td></tr></tbody></table><h3 id="组管理"><a href="#组管理" class="headerlink" title="组管理"></a>组管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/group                                                   </span></span><br><span class="line"><span class="comment"># grep wheel /etc/group</span></span><br><span class="line"><span class="comment"># groupadd test</span></span><br><span class="line"><span class="comment"># grep test /etc/group</span></span><br><span class="line"><span class="comment"># groupadd -g 8000 admin</span></span><br><span class="line"><span class="comment"># grep admin /etc/group</span></span><br><span class="line"><span class="comment"># groupadd --help</span></span><br><span class="line"><span class="comment"># groupmod -g 7000 admin</span></span><br><span class="line"><span class="comment"># grep admin /etc/group</span></span><br><span class="line"><span class="comment"># groupmod -n admin administrator</span></span><br><span class="line"><span class="comment"># groupmod -n  administrator admin</span></span><br><span class="line"><span class="comment"># grep admin /etc/group</span></span><br><span class="line"><span class="comment"># grep wheel /etc/group</span></span><br><span class="line"><span class="comment"># useradd harry</span></span><br><span class="line"><span class="comment"># useradd tom</span></span><br><span class="line"><span class="comment"># useradd jack</span></span><br><span class="line"><span class="comment"># gpasswd -a harry wheel</span></span><br><span class="line"><span class="comment"># grep wheel /etc/group</span></span><br><span class="line"><span class="comment"># gpasswd -a tom wheel</span></span><br><span class="line"><span class="comment"># gpasswd -a jack wheel</span></span><br><span class="line"><span class="comment"># grep wheel /etc/group</span></span><br><span class="line"><span class="comment"># gpasswd -d tom whell</span></span><br><span class="line"><span class="comment"># gpasswd -d tom wheel</span></span><br><span class="line"><span class="comment"># grep wheel /etc/group</span></span><br><span class="line"><span class="comment"># gpasswd -M student wheel</span></span><br><span class="line"><span class="comment"># grep wheel /etc/group</span></span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">命令</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">groupadd</td><td align="center"></td></tr><tr><td align="center">groupmod</td><td align="center"></td></tr><tr><td align="center">groupdel</td><td align="center"></td></tr><tr><td align="center">-g</td><td align="center">设置gid</td></tr><tr><td align="center">-n  newname name</td><td align="center">更改组名</td></tr><tr><td align="center">gpasswd -a newuser group</td><td align="center">把用户添加到已有组</td></tr><tr><td align="center">gpasswd -d olduser group</td><td align="center">把组内已有用户删除</td></tr><tr><td align="center">gpasswd -M user1,user2 group</td><td align="center">精确设置组员</td></tr></tbody></table><h2 id="su-sudo"><a href="#su-sudo" class="headerlink" title="su sudo"></a>su sudo</h2><p>su</p><p>su 和 su - </p><p>su - 会切换到对应用户的家目录 也会加载对应用户的环境变量</p><p>sudo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">useradd jack</span><br><span class="line">usermod -G wheel jack </span><br><span class="line">passwd jack </span><br><span class="line">su - jack</span><br><span class="line">visudo === vim /etc/sudoers</span><br><span class="line"><span class="comment">#%wheel  ALL=(ALL)       NOPASSWD: ALL 取消注释# </span></span><br><span class="line"><span class="comment">#其实是给用户所在组设置NOPASSWD：ALL,只不过默认有所在行，删掉注释#使之生效即可</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="生命周期（不熟，复习）"><a href="#生命周期（不熟，复习）" class="headerlink" title="生命周期（不熟，复习）"></a>生命周期（不熟，复习）</h2><p>chage或者修改配置文件、etc&#x2F;login.defs</p><h3 id="x2F-etc-x2F-shadow"><a href="#x2F-etc-x2F-shadow" class="headerlink" title="&#x2F;etc&#x2F;shadow"></a>&#x2F;etc&#x2F;shadow</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/shadow</span></span><br><span class="line"><span class="comment"># man chage</span></span><br><span class="line"><span class="comment"># chage -l root</span></span><br><span class="line"><span class="comment"># chage --help</span></span><br><span class="line"><span class="comment"># grep root /etc/shadow</span></span><br><span class="line"><span class="comment"># chage -d 18123 -E 19000 -I 19001 -m 7 -M 14 -W 8 root</span></span><br><span class="line"><span class="comment"># grep root /etc/shadow</span></span><br><span class="line"><span class="comment"># vim /etc/login.defs</span></span><br><span class="line"><span class="comment"># useradd time</span></span><br><span class="line"><span class="comment"># chage -l time</span></span><br><span class="line"><span class="comment"># grep time /etc/shadow</span></span><br></pre></td></tr></table></figure><h2 id="常用配置文件"><a href="#常用配置文件" class="headerlink" title="常用配置文件"></a>常用配置文件</h2><p>&#x2F;etc&#x2F;passwd</p><p>&#x2F;etc&#x2F;group</p><p>&#x2F;etc&#x2F;shadow</p><p>&#x2F;etc&#x2F;sudoers</p><p>&#x2F;etc&#x2F;login.defs</p><h1 id="第七章-控制对文件的访问"><a href="#第七章-控制对文件的访问" class="headerlink" title="第七章 控制对文件的访问"></a>第七章 控制对文件的访问</h1><h2 id="权限简介"><a href="#权限简介" class="headerlink" title="权限简介"></a>权限简介</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ls -l</span></span><br><span class="line">total 0</span><br><span class="line">-rw-r--r--. 1 root root 0 Aug 27 18:52 rootfile</span><br><span class="line">三个字段 r读 w写 x执行</span><br><span class="line"><span class="comment"># ls -ld 对目录</span></span><br><span class="line">三个权限后的.:可能为空，为+，为.，对应着不同情况，详情见rh134</span><br></pre></td></tr></table></figure><h2 id="数字表示法"><a href="#数字表示法" class="headerlink" title="数字表示法"></a>数字表示法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rwxrwxrwx 有权限1 没权限0</span><br><span class="line">1*2^2+1*2^1+1*2^0</span><br><span class="line">421421421 4+2+1=7</span><br><span class="line">777</span><br></pre></td></tr></table></figure><ul><li>目录的读写权限前提要依赖于执行权限，没有执行权限无法进行其他命令</li></ul><h2 id="chmod修改权限"><a href="#chmod修改权限" class="headerlink" title="chmod修改权限"></a>chmod修改权限</h2><ul><li><p><code>chmod</code> <code>who[ugoa]</code> <code>+-=</code> <code>[rwx]</code>  <code>filename</code>精确但较为繁琐</p></li><li><p>chmod 666 filename简洁但需要计算</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ls -l test</span></span><br><span class="line"><span class="comment"># chmod u+x test</span></span><br><span class="line"><span class="comment"># ls -l test</span></span><br><span class="line"><span class="comment"># chmod g+w test</span></span><br><span class="line"><span class="comment"># ls -l test</span></span><br><span class="line"><span class="comment"># chmod o+wx test</span></span><br><span class="line"><span class="comment"># ls -l test</span></span><br><span class="line"><span class="comment"># chmod a-w test</span></span><br><span class="line"><span class="comment"># ls -l test</span></span><br><span class="line"><span class="comment"># chmod u+w,o=w test</span></span><br><span class="line"><span class="comment"># ls -l test</span></span><br><span class="line"><span class="comment"># chmod u=r,g=x,o=r test</span></span><br><span class="line"><span class="comment"># ls -l test</span></span><br><span class="line"><span class="comment"># chmod 777 test</span></span><br><span class="line"><span class="comment"># ls -l test</span></span><br><span class="line"><span class="comment"># chmod 666 test</span></span><br><span class="line"><span class="comment"># ls -l test</span></span><br><span class="line"><span class="comment"># chmod 424 test</span></span><br><span class="line"><span class="comment"># ls -l test</span></span><br><span class="line"><span class="comment"># chmod 400 test</span></span><br><span class="line"><span class="comment"># ls -l test</span></span><br><span class="line"><span class="comment"># chmod 100 test</span></span><br><span class="line"><span class="comment"># ls -l test</span></span><br></pre></td></tr></table></figure><h2 id="chown"><a href="#chown" class="headerlink" title="chown"></a>chown</h2><p><code>chown 用户：组 file</code> 更改用户的属主和属组，单独设置组可以使用<code>：组</code>，分割用户和组尽量使用“：”而不是“.”，虽然也可以用，因为添加用户时发现user的命名中“.”是支持的，为了避免矛盾，否则会优先识别为用户而不是用户＋组的格式</p><p>chgrp 组 file 单独设置组</p><p>chown -R 用户：组 dir 更改目录的权限，并且递归到子文件，同时设置子文件的用户和组</p><h2 id="默认权限（通过设置umask值）"><a href="#默认权限（通过设置umask值）" class="headerlink" title="默认权限（通过设置umask值）"></a>默认权限（通过设置umask值）</h2><ul><li><p><code>vim /etc/profile</code></p></li><li><p>root用户umask&#x3D;0022</p></li><li><p>普通用户umask&#x3D;0002</p></li><li><p>umask值会对新创建的文件设定默认的权限</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">root用户 umask 0022 第一个0是占位，在bash中没有其他的作用</span><br><span class="line">后三位分别对应 属主 属组 和 其他用户</span><br><span class="line">file 644</span><br><span class="line">dir 755</span><br><span class="line">umask 022 000 010 010-&gt;111 101 101</span><br><span class="line">file </span><br><span class="line">666 110 110 110</span><br><span class="line">    111 101 101</span><br><span class="line">    110 100 100-&gt;644</span><br><span class="line">dir</span><br><span class="line">777 111 111 111</span><br><span class="line">    111 101 101</span><br><span class="line">    111 101 101-&gt;755</span><br><span class="line"></span><br><span class="line">student用户 umask 0002</span><br><span class="line">file 664</span><br><span class="line">dir 775</span><br></pre></td></tr></table></figure><h1 id="第二天细节小节"><a href="#第二天细节小节" class="headerlink" title="第二天细节小节"></a>第二天细节小节</h1><ul><li><p><strong>部分标注出现在具体位置，在此只记录个人的一个研究成果，旨在探究：</strong></p><p><code>哪些用户拥有文件权限的修改权限</code></p></li></ul><blockquote><ol><li>root用户下，在&#x2F;tmp目录下创建文件file</li></ol><blockquote><ul><li>对文件进行编辑，chmod 000 file，使该文件没有任何u，g，o的权限。接下来对各个用户进行测试</li></ul></blockquote><ol start="2"><li>新建ln用户，在root用户下，gpasswd -a ln wheel,将ln用户添加到wheel组，因为student默认有一个wheel附加组，此处为控制变量使ln与student有共同所在组</li></ol><blockquote><ul><li>在root用户下，chown student file，更改文件属主为student</li><li>chgrp wheel file，更改文件属组为wheel</li><li>此时ll查看file属性，为ugo权限000，属主student，属组wheel</li></ul></blockquote><ol start="3"><li>鉴于某同学提出的问题，没有执行权限的文件无法用.&#x2F;file执行，但是可以用bash file执行</li></ol><blockquote><ul><li>which bash发现bash所在位置为&#x2F;user&#x2F;bin&#x2F;bash</li><li>ll &#x2F;user&#x2F;bin&#x2F;bash 发现该文件（shell命令）的u，g，o都有r和x权限，说明任何用户都可以使用bash</li><li>bash file与.&#x2F;file 的最本质区别为：<ul><li>前者命令是bash，所有用户都有执行权限，file只是其参数，不许考虑file的x权限；</li><li>后者的命令是file本身，没有执行权限，所以无法执行。</li></ul></li></ul><p><code>其中需要注意的一点是，root用户作为超管，即使没有任何权限也仍旧可以对file进行cat（读），写（vim，echo重定向），执行（bash）。</code></p><ul><li>因为root用户不具备正常用户的特质，不将root用户下执行成功的情况认为是有效的。老师课上得出的结论为，bash 可以执行任意文件（作为他的参数），此处质疑并实验论证</li></ul></blockquote><ol start="4"><li>在student用户下，无法读，写，执行file，包括bash file（此时student是file的属主）</li></ol><blockquote><ul><li>在student用户下，chmod u+r file，ll发现修改成功</li><li>执行bash file，发现可以执行</li></ul></blockquote><p><strong>得出结论</strong>：<code>bash file时，不是任何file都可以作为参数被执行，即使任何用户都有bash的执行权限。可以使用的前提是，当前用户具有file的读权限。root用户除外</code></p><ol start="5"><li>发现新问题：除了root用户可以修改file的权限，作为属主的student也拥有对file权限的修改权限。那么这个权限有谁有？</li></ol><blockquote><ul><li>基于之前的准备工作，除去root和file属主student外，合理推测file属组wheel内的成员拥有该权限去修改file的权限</li><li>此时wheel内的成员为student和ln</li></ul></blockquote><ol start="6"><li>在ln用户下，chmod命令无法使用。</li></ol><blockquote><ul><li>基于之前bash的推论，在用同样的方法验证过了chmod和bash一样都是所有用户都有执行权限的文件后，合理推测ln用户无法使用该命令是因为没有file的读权限。</li></ul></blockquote><ol start="7"><li>在root用户下，chmod g+r file，给g以读权限</li></ol><blockquote><ul><li>ln用户依旧无法使用chmod命令修改file的权限</li><li>经过测试，依次给g以r，w，x权限，都与上述情况一致</li><li>合理猜测是否属组必须为主组为wheel而不是附加组才拥有修改file权限的权限</li></ul></blockquote><ol start="8"><li>在root用户下，usermod -g wheel student，同样设置ln用户，使其主组为wheel</li></ol><blockquote><ul><li>重复之前的操作，ln用户依旧无法使用chmod命令修改file权限</li><li>说明属组内用户没有chmod 修改file权限的原因与是否是主组无关</li><li>开始质疑，属主student可以在不具备任何权限的情况下修改文件权限，是否使因为之前student有附加组wheel以至于获得了过高的权限</li></ul></blockquote><ol start="9"><li>在root用户下，创建新用户（所在组中），并将file的属主改为新用户，过程略。</li></ol><blockquote><ul><li>没有任何权限，也不在wheel组，更没有修改过visudo的小白用户依旧可以使用chmod命令修改file的权限</li><li>证明是否拥有修改file权限的权限与属主是否有更高的权限无关，仅仅与属主身份有关。</li></ul></blockquote><p>论证结果：与bash命令不同，即使普通用户具有了file的访问权限，也无法使用chmod命令修改file的权限。可以修改file权限的用户为root用户依旧file的所有者（属主u），任何所有组内的用户以任何f方式都没有该权限修改file权限（属组g），更别说其他用户（o）</p></blockquote><h2 id="特殊权限"><a href="#特殊权限" class="headerlink" title="特殊权限"></a>特殊权限</h2><h3 id="SUID（对命令有效，以文件拥有者的身份执行）"><a href="#SUID（对命令有效，以文件拥有者的身份执行）" class="headerlink" title="SUID（对命令有效，以文件拥有者的身份执行）"></a>SUID（对命令有效，以文件拥有者的身份执行）</h3><p>set user id</p><p><code>作用:任何用户在运行拥有suid权限的命令(二进制可执行文件)时,都以该命令拥有者的身份执行</code></p><p><code>作用位置:user</code><br><code>作用对象:文件(二进制可执行文件)</code></p><p>^即给无权限执行命令的用户以命令拥有者的身份执行命令，一般用于管理员想让普通用户执行不需要管理员密码和sudo的命令^</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">test: cat /etc/shadow 再加特殊权限之前看不了</span><br><span class="line">root: chmod u+s /usr/bin/cat</span><br><span class="line">目的为普通用户可以使用高级命令</span><br></pre></td></tr></table></figure><h3 id="SGID-考点-（对目录有效，目录下文件与目录组匹配，且目录下目录具有sgid权限）"><a href="#SGID-考点-（对目录有效，目录下文件与目录组匹配，且目录下目录具有sgid权限）" class="headerlink" title="SGID^考点^（对目录有效，目录下文件与目录组匹配，且目录下目录具有sgid权限）"></a>SGID^考点^（对目录有效，目录下文件与目录组匹配，且目录下目录具有sgid权限）</h3><p><strong>书上说对命令也有效，以命令文件拥有组的身份执行</strong> <code>验证有矛盾，在小节中细究</code></p><p>set group id</p><p><code>作用:任何用户在拥有sgid权限的目录下,创建的文件都要继承目录的组 用户-&gt;目录组-&gt;share dir</code></p><p><strong>添加sgid权限的目录下，创建的文件和子目录以及子目录下孙子都继承目录的所在组，实现共享目录的目的</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">作用位置:group</span><br><span class="line">作用对象:目录</span><br><span class="line">chmod g+s directory</span><br></pre></td></tr></table></figure><h3 id="sticky-SBIT（对目录有效，要求目录下文件各管各的，不能删改别人的文件）"><a href="#sticky-SBIT（对目录有效，要求目录下文件各管各的，不能删改别人的文件）" class="headerlink" title="sticky SBIT（对目录有效，要求目录下文件各管各的，不能删改别人的文件）"></a>sticky SBIT（对目录有效，要求目录下文件各管各的，不能删改别人的文件）</h3><p>^给目录加other用户的t权限，目的为给拥有该目录读写权限的用户各自管理各自的文件，无法操作其他用户创建的文件^</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">3.sticky(冒险位,粘贴位)</span><br><span class="line">作用:任何用户在拥有t权限目录下创建的文件,只能自己删除,其他人无权删除</span><br><span class="line">作用位置:other</span><br><span class="line">作用对象:目录</span><br><span class="line">chmod o+t directory</span><br></pre></td></tr></table></figure><h2 id="权限优先级"><a href="#权限优先级" class="headerlink" title="权限优先级"></a>权限优先级</h2><p><strong><u>最具体的权限具有优先权</u>，用户权限覆盖组权限，后者又覆盖其他权限。</strong></p><h2 id="其他用户权限管理"><a href="#其他用户权限管理" class="headerlink" title="其他用户权限管理"></a>其他用户权限管理</h2><p>other 范围很大</p><p>对于root来说 张三 李四 王五 other用户。。。。</p><p><strong>RH134 第四章 setfacl 访问控制列表 ACL</strong></p><h1 id="第八章-进程监控及管理-重点"><a href="#第八章-进程监控及管理-重点" class="headerlink" title="第八章 进程监控及管理^重点^"></a>第八章 进程监控及管理^重点^</h1><h2 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h2><p><strong>程序</strong>：保存在磁盘中机器代码指令和数据的集合</p><p><strong>进程</strong>：程序的实例（运行着的程序），</p><p><strong>Linux操作系统</strong>：多任务，多进程，网络</p><h2 id="查看进程状态"><a href="#查看进程状态" class="headerlink" title="查看进程状态"></a>查看进程状态</h2><h3 id="ps"><a href="#ps" class="headerlink" title="ps"></a>ps</h3><p>tty：终端</p><p>pts：伪终端</p><table><thead><tr><th align="center">ps</th><th align="center"></th></tr></thead><tbody><tr><td align="center">ps aux | ps -ef</td><td align="center">显示所有进程（e）的详细信息（f）</td></tr><tr><td align="center">ps -f -u user</td><td align="center">显示指定用户的详细进程</td></tr><tr><td align="center">–sort&#x3D;cpu或者-cpu</td><td align="center">按cpu排序 | 反向排序</td></tr><tr><td align="center">ps tree</td><td align="center">查看进程树，没有tree可以yum provides查询tree命令的包并安装</td></tr><tr><td align="center">-C</td><td align="center">根据名称查</td></tr><tr><td align="center">-ppid</td><td align="center">指定父进程ppid</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ps</span></span><br><span class="line"> PID TTY          TIME CMD</span><br><span class="line"> 1878 pts/0    00:00:00 bash</span><br><span class="line"> 5056 pts/0    00:00:00 ps</span><br><span class="line"> PID：进程编号</span><br><span class="line"> TTY：占用的终端</span><br><span class="line"> TIME：占用CPU的时间</span><br><span class="line"> CMD：执行的命令</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ps -ef | head -n 5</span></span><br><span class="line">UID        PID  PPID  C STIME TTY          TIME CMD</span><br><span class="line">root         1     0  0 16:30 ?        00:00:01 /usr/lib/systemd/systemd --switched-root --system --deserialize 17</span><br><span class="line">root         2     0  0 16:30 ?        00:00:00 [kthreadd]</span><br><span class="line">root         3     2  0 16:30 ?        00:00:00 [rcu_gp]</span><br><span class="line">root         4     2  0 16:30 ?        00:00:00 [rcu_par_gp]</span><br><span class="line">选项作用：</span><br><span class="line">-e 系统中所有的进程</span><br><span class="line">-f 详细信息</span><br><span class="line">UID：进程拥有者</span><br><span class="line">PID：进程编号</span><br><span class="line">PPID：父进程 （1是所有进程的父进程，为systemd）</span><br><span class="line">C：占用CPU的百分比</span><br><span class="line">STIME：进程启动时间</span><br><span class="line">TTY：在哪个终端上运行</span><br><span class="line">TIME：占用CPU的时间</span><br><span class="line">CMD：执行的命令</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># ps aux|head -n 5</span><br><span class="line">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND</span><br><span class="line">root         1  0.0  1.5 244092 13248 ?        Ss   16:30   0:01 /usr/lib/systemd/systemd --switched-root --system --deserialize 17</span><br><span class="line">root         2  0.0  0.0      0     0 ?        S    16:30   0:00 [kthreadd]</span><br><span class="line">root         3  0.0  0.0      0     0 ?        I&lt;   16:30   0:00 [rcu_gp]</span><br><span class="line">root         4  0.0  0.0      0     0 ?        I&lt;   16:30   0:00 [rcu_par_gp]</span><br><span class="line">USER：进程拥有者</span><br><span class="line">PID：进程编号</span><br><span class="line">%CPU：占用CPU的百分比</span><br><span class="line">%MEM：占用物理内存的百分比</span><br><span class="line">VSZ：预设内存（虚拟内存）</span><br><span class="line">RSS：真实内存（物理内存）</span><br><span class="line">TTY：运行终端</span><br><span class="line">STAT：进程状态</span><br><span class="line">START：进程启动时间</span><br><span class="line">TIME：占用CPU时间（运行时间）</span><br><span class="line">COMMAND：进程名称</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ps aux</span></span><br><span class="line"><span class="comment"># ps</span></span><br><span class="line"><span class="comment"># ps ef</span></span><br><span class="line"><span class="comment"># ps -ef</span></span><br><span class="line"><span class="comment"># ps -ef | head -n 5</span></span><br><span class="line"><span class="comment"># ps aux</span></span><br><span class="line"><span class="comment"># ps aux|head -n 5</span></span><br><span class="line"><span class="comment"># ps aux</span></span><br><span class="line"><span class="comment"># ps aux|head -n 5</span></span><br><span class="line"><span class="comment"># ps -aux|head -n 5</span></span><br><span class="line"><span class="comment"># ps aux</span></span><br><span class="line"><span class="comment"># ps -f -u student</span></span><br><span class="line"><span class="comment"># ps -C httpd</span></span><br><span class="line"><span class="comment"># yum -y install httpd</span></span><br><span class="line"><span class="comment"># systemctl start httpd</span></span><br><span class="line"><span class="comment"># ps -C httpd</span></span><br><span class="line"><span class="comment"># ps aux --sort=cpu</span></span><br><span class="line"><span class="comment"># ps aux --sort=pcpu</span></span><br><span class="line"><span class="comment"># ps aux --sort=-pcpu</span></span><br><span class="line"><span class="comment"># ps -o pid,uname,comm</span></span><br><span class="line"><span class="comment"># ps -o pid,uname,comm -C httpd</span></span><br><span class="line"><span class="comment"># ps aux|grep pid</span></span><br><span class="line"><span class="comment"># ps aux|grep student</span></span><br><span class="line"><span class="comment"># pstree</span></span><br><span class="line"><span class="comment"># yum provides pstree</span></span><br><span class="line"><span class="comment"># yum -y install psmisc</span></span><br><span class="line"><span class="comment"># pstree</span></span><br><span class="line"><span class="comment"># date</span></span><br><span class="line"><span class="comment"># date;sleep 3;date</span></span><br><span class="line"><span class="comment"># top</span></span><br><span class="line"><span class="comment">##显示所有进程详细信息</span></span><br><span class="line">ps aux</span><br><span class="line"><span class="comment">##-u 显示某个用户的进程列表</span></span><br><span class="line">ps -f -u kiosk</span><br><span class="line"><span class="comment">## -C 通过名字或者命令搜索进程</span></span><br><span class="line">ps -C httpd</span><br><span class="line"><span class="comment">## --sort  根据进程cpu使用率降序排列，查看前5个进程  -pcpu表示降序  pcpu升序</span></span><br><span class="line">ps aux --<span class="built_in">sort</span>=-pcpu | more</span><br><span class="line"><span class="comment">##-f 用树结构显示进程的层次关系，父子进程情况下</span></span><br><span class="line">ps -f --forest -C httpd</span><br><span class="line"><span class="comment">##显示一个父进程的所有子进程</span></span><br><span class="line">ps -o pid,<span class="built_in">uname</span>,<span class="built_in">comm</span> -C httpd</span><br><span class="line">ps --ppid 992(httpd主进程ID)</span><br><span class="line">ps --ppid 1</span><br><span class="line"><span class="comment">##省时省力的话</span></span><br><span class="line">ps aux|grep username|pid|other</span><br><span class="line"><span class="comment">##显示一个进程的所有线程  -L 参数</span></span><br><span class="line">ps -p 3150 -L </span><br><span class="line"><span class="comment">##显示进程的执行时间 -o参数</span></span><br><span class="line">ps -e -o pid,<span class="built_in">comm</span>,etime</span><br><span class="line"><span class="comment">##watch命令可以用来实时捕捉ps显示进程</span></span><br><span class="line">watch -n 1 <span class="string">&#x27;ps -e -o pid,uname,cmd,pmem,pcpu --sort=-pmem,-pcpu | head -15&#x27;</span></span><br><span class="line"><span class="comment">##pstree命令：列出当前的进程，以及它们的树状结构  格式：pstree [选项] [pid|user]</span></span><br><span class="line">pstree</span><br><span class="line"><span class="comment">##sleep命令：使进程暂停执行一段时间</span></span><br><span class="line"><span class="built_in">date</span>;<span class="built_in">sleep</span> 1m;<span class="built_in">date</span></span><br></pre></td></tr></table></figure><h3 id="top"><a href="#top" class="headerlink" title="top"></a>top</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">top - 14:20:12 up 42 min,  4 users,  load average: 0.30, 0.27, 0.25（uptime|w命令也可以查看）</span><br><span class="line">当前系统时间        运行了多久   登录用户   CPU平均负载</span><br><span class="line">Tasks: 419 total,   2 running, 417 sleeping,   0 stopped,   0 zombie</span><br><span class="line">进程总数                运行进程      休眠           停止                僵尸 </span><br><span class="line">%Cpu(s):  9.8 us,  3.0 sy,  0.0 ni, 83.5 id,  3.5 wa,  0.0 hi,  0.1 si,  0.0 st</span><br><span class="line">          用户态    内核态   调整nice   空闲     等待io    硬中断    软中断    虚拟化偷取</span><br><span class="line">          1. 硬中断是由硬件产生的，比如，像磁盘，网卡，键盘，时钟等。</span><br><span class="line">          2. 软中断的处理非常像硬中断。然而，它们仅仅是由当前正在运行的进程所产生的。</span><br><span class="line">KiB Mem :  4031780 total,  2625064 free,   580228 used,   826488 buff/cache</span><br><span class="line">KiB Swap:  1023996 total,  1023996 free,        0 used.  3210724 avail Mem</span><br></pre></td></tr></table></figure><h4 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">Press &#x27;h&#x27; or &#x27;?&#x27; for help with Windows在top中使用h或？查看帮助</span><br><span class="line">切换标题</span><br><span class="line">  l,t,m     Toggle Summary: &#x27;l&#x27; load avg; &#x27;t&#x27; task/cpu stats; &#x27;m&#x27; memory info</span><br><span class="line">物理CPU展示</span><br><span class="line">  0,1,2,3,I Toggle: &#x27;0&#x27; zeros; &#x27;1/2/3&#x27; cpus or numa node views; &#x27;I&#x27; Irix mode</span><br><span class="line">展示项调整</span><br><span class="line">  f,F,X     Fields: &#x27;f&#x27;/&#x27;F&#x27; add/remove/order/sort; &#x27;X&#x27; increase fixed-width</span><br><span class="line">  f 进入选择显示项界面，空格选中，q退出</span><br><span class="line">关键字查找</span><br><span class="line">  L搜索，高亮显示</span><br><span class="line">  L,&amp;,&lt;,&gt; . Locate: &#x27;L&#x27;/&#x27;&amp;&#x27; find/again; Move sort column: &#x27;&lt;&#x27;/&#x27;&gt;&#x27; left/right</span><br><span class="line">  R,H,V,J . Toggle: &#x27;R&#x27; Sort; &#x27;H&#x27; Threads; &#x27;V&#x27; Forest view; &#x27;J&#x27; Num justify</span><br><span class="line">  c,i,S,j . Toggle: &#x27;c&#x27; Cmd name/line; &#x27;i&#x27; Idle; &#x27;S&#x27; Time; &#x27;j&#x27; Str justify</span><br><span class="line">s|刷新频率</span><br><span class="line">  x,y     . Toggle highlights: &#x27;x&#x27; sort field; &#x27;y&#x27; running tasks</span><br><span class="line">  z,b     . Toggle: &#x27;z&#x27; color/mono; &#x27;b&#x27; bold/reverse (only if &#x27;x&#x27; or &#x27;y&#x27;)</span><br><span class="line">  u,U,o,O . Filter by: &#x27;u&#x27;/&#x27;U&#x27; effective/any user; &#x27;o&#x27;/&#x27;O&#x27; other criteria</span><br><span class="line">  u按用户查</span><br><span class="line">  n,#,^O  . Set: &#x27;n&#x27;/&#x27;#&#x27; max tasks displayed; Show: Ctrl+&#x27;O&#x27; other filter(s)</span><br><span class="line">  C,...   . Toggle scroll coordinates msg for: up,down,left,right,home,end</span><br><span class="line">杀进程|调整nice值</span><br><span class="line">  k,r       Manipulate tasks: &#x27;k&#x27; kill; &#x27;r&#x27; renice</span><br><span class="line">  d or s    Set update interval</span><br><span class="line">保存配置|查看进程详细信息</span><br><span class="line">  W,Y       Write configuration file &#x27;W&#x27;; Inspect other output &#x27;Y&#x27;</span><br><span class="line">  W在修改文件配置后</span><br><span class="line">内存|CPU排序</span><br><span class="line">  M,P</span><br><span class="line">退出</span><br><span class="line">  q         Quit</span><br></pre></td></tr></table></figure><h2 id="信号"><a href="#信号" class="headerlink" title="信号"></a>信号</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##列出所有信号名称</span></span><br><span class="line"><span class="comment">##HUP     1    终端断线</span></span><br><span class="line"><span class="comment">##INT     2    中断（同 Ctrl + C）</span></span><br><span class="line"><span class="comment">##QUIT    3    退出（同 Ctrl + \）</span></span><br><span class="line"><span class="comment">##TERM    15   终止（默认不加）</span></span><br><span class="line"><span class="comment">##KILL    9    强制终止</span></span><br><span class="line"><span class="comment">##CONT    18   继续（与STOP相反， fg/bg命令）</span></span><br><span class="line"><span class="comment">##STOP    19   暂停（同 Ctrl + Z）</span></span><br></pre></td></tr></table></figure><h3 id="控制作业（jobs）-重要"><a href="#控制作业（jobs）-重要" class="headerlink" title="控制作业（jobs）^重要^"></a>控制作业（jobs）^重要^</h3><p><code>不需要理解控制作业的意思(其实就是jobs)，其实就是对任务的操作</code></p><ol><li><p>执行一个前台任务会占用终端，不能做别的事，即一个终端只能执行一个前台任务（这也是控制作业的主要目的）</p></li><li><p><code>ctrl z</code>，将任务放到后台执行，但是同时会暂停任务</p></li><li><p><code>jobs</code>查看<strong>当前终端中</strong>正在进行的任务，并获取其任务编号</p><p><strong>目前不清楚任务编号右边的+ 和 - 的意义</strong></p><p><code>测试发现jobs查看控制作业只对当前终端中进行的任务有效</code></p></li><li><p><code>bg %任务编号</code>，目的是继续后台任务</p></li><li><p>开始任务时直接使用 <code>命令 &amp;</code> ^（即直接在命令的最后空一格加上&amp;）^，把命令直接放到后台并是运行状态^（区分bg命令）^</p></li><li><p>同理，<code>fg %任务编号</code>可以将后台任务放到前台</p></li><li><p>无论是前台还是后台任务，退出终端后进程结束，侧面说明了<code>jobs</code>是查看一个终端中正在进行的任务</p></li><li><p><code>nohup 命令</code>，使任务可以脱离终端运行，终端关闭的时候任务不结束，可以与&amp;一起使用</p><p>目前已知知识无法做到将<code>脱离终端</code>且<code>退出了终端</code>的<code>后台任务</code>恢复到前台运行，但也没必要</p></li></ol><h4 id="xclock示例："><a href="#xclock示例：" class="headerlink" title="xclock示例："></a>xclock示例：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">rhel8默认没有xclock安装包，这个在这不演示</span><br><span class="line">[root@localhost ~]<span class="comment"># yum install xclock</span></span><br><span class="line">[root@localhost ~]<span class="comment"># xclock  -update 1  前台运行</span></span><br><span class="line">[root@localhost ~]<span class="comment"># xclock  -update 1 &amp; 后台运行 多按下enter键</span></span><br><span class="line">[root@localhost ~]<span class="comment"># nohup xclock  -update 1 &amp; 脱离终端运行</span></span><br><span class="line">[root@localhost ~]<span class="comment"># xclock  -update 1</span></span><br><span class="line">ctrl+z</span><br><span class="line">[root@localhost ~]<span class="comment"># jobs</span></span><br><span class="line">[1]+  已停止               xclock -update 1</span><br><span class="line">[root@localhost ~]<span class="comment"># bg 1 </span></span><br><span class="line">[root@localhost ~]<span class="comment"># fg 1</span></span><br></pre></td></tr></table></figure><h2 id="调整nice值（更改优先级）"><a href="#调整nice值（更改优先级）" class="headerlink" title="调整nice值（更改优先级）"></a>调整nice值（更改优先级）</h2><ul><li>nice值范围 -20~19，越小优先级越高</li><li>调整ni其实是为了侧面影响pr，pr才是决定任务优先级的直接属性，因为无法直接修改pr值，pr值是系统把ni通过计算得到的^（个人理解不保证准确）^</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">运行命令时指定：</span><br><span class="line">[root@servera <span class="built_in">test</span>]<span class="comment"># nice -n -19 vim passwd #运行任务时直接指定nice值 </span></span><br><span class="line">[root@servera ~]<span class="comment"># ps aux|grep vim</span></span><br><span class="line">root      2627  0.0  0.4 255808  8132 pts/1    S&lt;+  09:50   0:00 vim passwd</span><br><span class="line"></span><br><span class="line">top-&gt;L-&gt;vim</span><br><span class="line">根据PID调整：</span><br><span class="line">[root@servera ~]<span class="comment"># renice -n -10 2627</span></span><br><span class="line">2627 (process ID) old priority -19, new priority -10</span><br><span class="line"></span><br><span class="line">[root@servera ~]<span class="comment"># ps aux|grep vim</span></span><br><span class="line">root      2627  0.0  0.4 255808  8132 pts/1    S&lt;+  09:50   0:00 vim passwd</span><br><span class="line">&lt;是高优先级，+是前台进程</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">top-&gt;L-&gt;vim</span><br><span class="line">top动态调整：</span><br><span class="line">top-&gt;r-&gt;PID-&gt;pririty number</span><br></pre></td></tr></table></figure><h2 id="平均负载"><a href="#平均负载" class="headerlink" title="平均负载"></a>平均负载</h2><p>可以通过<code>top</code>，<code>uptime</code>，<code>w</code>查看cpu的占用情况。这个情况是系统通过计算单位时间内之执行任务的单位数得到的平均值，比如单核cpu的平均负载如果超过1，则说明当前有很多任务在等待中。俗称：卡<strong>^（系统会预留一部分cpu用来计算平均负载，而不是我所理解的卡的算不出来）^</strong></p><h1 id="第九章-控制服务和守护进程-重点"><a href="#第九章-控制服务和守护进程-重点" class="headerlink" title="第九章 控制服务和守护进程^重点^"></a>第九章 控制服务和守护进程^重点^</h1><p>服务概念：<code>可以在后台运行多个守护进程</code></p><p>rhel7中最先启动的是init进程，pid为1，是所有进程的父进程</p><p>rhel8中改为systemd进程，代替init，通过which命令并ll init所在位置发现</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[student@workstation ~]$ which init</span><br><span class="line">/usr/sbin/init</span><br><span class="line">[student@workstation ~]$ ll /usr/sbin/init</span><br><span class="line">lrwxrwxrwx. 1 root root 22 4月  15 2020 /usr/sbin/init -&gt; ../lib/systemd/systemd</span><br><span class="line">[student@workstation ~]$ </span><br></pre></td></tr></table></figure><p>说明init已完全被systemd取代</p><table><thead><tr><th align="center">init</th><th align="center">systemd</th></tr></thead><tbody><tr><td align="center">串行启动，按次序</td><td align="center">并行启动，同时启动多个systemd向下启动。</td></tr><tr><td align="center"></td><td align="center">按需激活进程</td></tr><tr><td align="center"></td><td align="center">基于依赖关系定义服务控制逻辑</td></tr><tr><td align="center"></td><td align="center">向后兼容sysv init脚本（可以取代init命令）</td></tr><tr><td align="center"></td><td align="center"></td></tr></tbody></table><p><code>做服务相关操作时，防火墙和selinux时默认开启的，需要考虑到</code></p><p>管理一个服务的基本流程：</p><ol><li>下载管理包</li><li>启动服务（同时添加自启动）（enable –now可以给没启动的服务在添加自启动的同时启动服务）</li><li>本地验证（查看状态status）</li><li>实际验证（比如httpd服务，验证别的用户是否可以访问）</li></ol><h2 id="单元管理"><a href="#单元管理" class="headerlink" title="单元管理"></a>单元管理</h2><p>单元：不同类型的systemd对象</p><p>查看 ： systemctl -t help</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@servera ~]# systemctl输出激活的单元</span><br><span class="line">[root@servera ~]# systemctl list-units 输出激活的单元</span><br><span class="line">输出运行失败的单元：</span><br><span class="line">[root@servera ~]# systemctl --failed </span><br><span class="line">0 loaded units listed. Pass --all to see loaded but inactive units, too.</span><br><span class="line">To show all installed unit files use &#x27;systemctl list-unit-files&#x27;.</span><br><span class="line">所有可用的单元文件存放在 /usr/lib/systemd/system/ 和 /etc/systemd/system/ 目录（后者优先级更高）。</span><br><span class="line"></span><br><span class="line">查看所有已安装服务：</span><br><span class="line">[root@servera ~]# systemctl list-unit-files</span><br><span class="line"></span><br><span class="line">查看系统中有效的unit</span><br><span class="line">[root@servera ~]# systemctl -t help</span><br><span class="line">Available unit types:</span><br><span class="line"><span class="meta prompt_">service#</span><span class="language-bash">重中重</span></span><br><span class="line"><span class="meta prompt_">socket#</span><span class="language-bash">重</span></span><br><span class="line">target</span><br><span class="line">device</span><br><span class="line">mount</span><br><span class="line">automount</span><br><span class="line">swap</span><br><span class="line">timer</span><br><span class="line">path</span><br><span class="line">slice切片，集中管理多个</span><br><span class="line">scope范围</span><br></pre></td></tr></table></figure><h2 id="服务状态（status）"><a href="#服务状态（status）" class="headerlink" title="服务状态（status）"></a>服务状态（status）</h2><table><thead><tr><th>状态</th><th>描述</th></tr></thead><tbody><tr><td>loaded</td><td>配置文件被处理</td></tr><tr><td>active(running)</td><td>一个或多个进程持续运行</td></tr><tr><td>active(exited)</td><td>成功完成一个“一次性”配置（执行了且完成并退出）</td></tr><tr><td>active(waiting)</td><td>运行但等待“事件”</td></tr><tr><td>inactive（dead）</td><td>未运行</td></tr><tr><td>enabled</td><td>开机启动</td></tr><tr><td>disabled</td><td>不随开机启动</td></tr><tr><td>static</td><td>不能被（手动）启用，但可以被已启用单元自动启动</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@servera ~]<span class="comment"># systemctl status httpd</span></span><br><span class="line">● httpd.service - The Apache HTTP Server描述信息</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/httpd.service; enabled; vendor preset: dis&gt;</span><br><span class="line">   Active: active (running) since Tue 2020-09-01 10:20:17 CST; 12min ago</span><br><span class="line">     Docs: man:httpd.service(8)帮助手册</span><br><span class="line">  Process: 4957 ExecReload=/usr/sbin/httpd <span class="variable">$OPTIONS</span> -k graceful (code=exited, status=&gt;</span><br><span class="line"> Main PID: 4082 (httpd)主进程号</span><br><span class="line">   Status: <span class="string">&quot;Running, listening on: port 80&quot;</span>服务状态</span><br><span class="line">    Tasks: 213 (<span class="built_in">limit</span>: 11405)任务数量</span><br><span class="line">   Memory: 38.9M占用内存</span><br><span class="line">   CGroup: /system.slice/httpd.service资源配额</span><br><span class="line">           ├─4082 /usr/sbin/httpd -DFOREGROUND</span><br><span class="line">           ├─4958 /usr/sbin/httpd -DFOREGROUND</span><br><span class="line">           ├─4959 /usr/sbin/httpd -DFOREGROUND</span><br><span class="line">           ├─4960 /usr/sbin/httpd -DFOREGROUND</span><br><span class="line">           └─4961 /usr/sbin/httpd -DFOREGROUND</span><br><span class="line">输出信息：</span><br><span class="line">Sep 01 10:20:17 servera.lab.example.com systemd[1]: Started The Apache HTTP Server.</span><br><span class="line">Sep 01 10:21:07 servera.lab.example.com systemd[1]: httpd.service: Current <span class="built_in">command</span> va&gt;</span><br><span class="line">Sep 01 10:21:17 servera.lab.example.com systemd[1]: httpd.service: Got notification</span><br></pre></td></tr></table></figure><h2 id="服务管理（常用功能）"><a href="#服务管理（常用功能）" class="headerlink" title="服务管理（常用功能）"></a>服务管理（常用功能）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">综合：</span><br><span class="line">- status</span><br><span class="line"><span class="comment"># systemctl status sshds</span></span><br><span class="line"><span class="comment"># service sshd status</span></span><br><span class="line"></span><br><span class="line">- is-enabled, is-active</span><br><span class="line"><span class="comment"># systemctl is-enabled sshd</span></span><br><span class="line"><span class="comment"># systemctl is-active sshd</span></span><br><span class="line"></span><br><span class="line">- start, stop</span><br><span class="line"><span class="comment"># systemctl is-active sshd</span></span><br><span class="line"><span class="comment"># systemctl stop sshd</span></span><br><span class="line"><span class="comment"># systemctl is-active sshd</span></span><br><span class="line"><span class="comment"># systemctl start sshd</span></span><br><span class="line"><span class="comment"># systemctl is-active sshd</span></span><br><span class="line"></span><br><span class="line">- <span class="built_in">enable</span>, <span class="built_in">disable</span></span><br><span class="line"><span class="comment"># systemctl is-enabled sshd</span></span><br><span class="line"><span class="comment"># systemctl disable sshd</span></span><br><span class="line"><span class="comment"># systemctl is-enabled sshd</span></span><br><span class="line"><span class="comment"># systemctl enable sshd</span></span><br><span class="line"><span class="comment"># systemctl is-enabled sshd</span></span><br><span class="line"></span><br><span class="line">- restart(stop &amp;&amp; start), reload</span><br><span class="line"><span class="comment"># systemctl status sshd</span></span><br><span class="line"><span class="comment"># systemctl restart sshd</span></span><br><span class="line"><span class="comment"># systemctl status sshd</span></span><br><span class="line"><span class="comment"># systemctl reload sshd</span></span><br><span class="line"><span class="comment"># systemctl status sshd</span></span><br><span class="line"></span><br><span class="line">- list-dependencies <span class="comment">#查看依赖关系（树图）</span></span><br><span class="line"><span class="comment"># systemctl list-dependencies </span></span><br><span class="line"><span class="comment"># systemctl list-dependencies | grep target</span></span><br><span class="line"></span><br><span class="line">- mask, unmask <span class="comment">#标记为无法被其他单元作为依赖启动，其本质为把symblink &gt;&gt; /dev/null</span></span><br><span class="line">而且经过验证，不止，不能被当作依赖项启动，也不能手动启动，mask命令一损俱损</span><br><span class="line"><span class="comment"># systemctl mask atd</span></span><br><span class="line"><span class="comment"># systemctl stop atd</span></span><br><span class="line"><span class="comment"># systemctl start atd || echo no</span></span><br><span class="line"><span class="comment"># systemctl status atd</span></span><br><span class="line"><span class="comment"># systemctl unmask atd</span></span><br><span class="line"><span class="comment"># systemctl start atd</span></span><br><span class="line"><span class="comment"># systemctl status atd</span></span><br><span class="line"></span><br><span class="line">  506  systemctl reload-or-restart httpd <span class="comment">#自动判断，优先reload不中断任务，不行才restart</span></span><br><span class="line">  507  <span class="built_in">ls</span> -l $(<span class="built_in">which</span> poweroff)</span><br><span class="line">  508  <span class="built_in">ls</span> -l $(<span class="built_in">which</span> reboot)</span><br><span class="line">  发现二者都重定向到了systemctl</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="版本对比"><a href="#版本对比" class="headerlink" title="版本对比"></a>版本对比</h2><table><thead><tr><th align="center"></th><th>RHEL&lt;&#x3D;6</th><th>RHEL&gt;&#x3D;7</th></tr></thead><tbody><tr><td align="center">start</td><td>service DAEMON start</td><td>systemctl start DAEMON</td></tr><tr><td align="center">stop</td><td>service DAEMON stop</td><td>systemctl stop DAEMON</td></tr><tr><td align="center">status</td><td>service DAEMON status</td><td>systemctl status DAEMON</td></tr><tr><td align="center">enable</td><td>chkconfig DAEMON on</td><td>systemctl enable DAEMON</td></tr><tr><td align="center">disable</td><td>chkconfig DAEMON off</td><td>systemctl disable DAEMON</td></tr></tbody></table><p><code>enable --now</code> 设置自启动的同时，会将当前没有启动的服务启动起来、</p><h3 id="电源管理"><a href="#电源管理" class="headerlink" title="电源管理"></a>电源管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@servera ~]<span class="comment"># systemctl poweroff</span></span><br><span class="line">[root@servera ~]<span class="comment"># systemctl reboot</span></span><br></pre></td></tr></table></figure><h1 id="第十章-openssh服务"><a href="#第十章-openssh服务" class="headerlink" title="第十章 openssh服务"></a>第十章 openssh服务</h1><h2 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h2><p>协议 加密登录 安全的 密码不会泄露 </p><p>openssh 开源实现</p><h2 id="加密算法"><a href="#加密算法" class="headerlink" title="加密算法"></a>加密算法</h2><h3 id="对称加密"><a href="#对称加密" class="headerlink" title="对称加密"></a>对称加密</h3><p>vim file ：X -&gt; 123 vim file 相同的密码</p><p>效率高 安全性差</p><h3 id="非对称加密"><a href="#非对称加密" class="headerlink" title="非对称加密"></a>非对称加密</h3><p>密钥对</p><p>公钥+私钥 一对 </p><p>公钥加密-&gt;私钥解密</p><p>私钥加密-&gt;公钥解密</p><p>效率低 安全性高</p><h2 id="SSH原理"><a href="#SSH原理" class="headerlink" title="SSH原理"></a>SSH原理</h2><h3 id="基本格式"><a href="#基本格式" class="headerlink" title="基本格式"></a>基本格式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh username@hostname</span><br></pre></td></tr></table></figure><p>client-&gt;server</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1、client-server 请求</span><br><span class="line">2、server 把server----&gt; client </span><br><span class="line">3、client 判断【是|否】是----&gt;使用server公钥加密（机器无法判断，只会提示，手动判断） 把登陆的密码----&gt;server</span><br><span class="line">此时：当提示过server公钥内容且选择了yes的时候，会将server公钥加到known_hosts中，下次登陆时不会提示</span><br><span class="line">4、server 私钥-&gt;解密加密后的密码</span><br><span class="line">5、如果密码正确 login 不正确 拒绝</span><br><span class="line">防火墙 区域 网络接口 默认放行ssh服务的</span><br></pre></td></tr></table></figure><p><strong>第三放伪造 公钥 “中间人攻击”:</strong></p><ul><li><p>a a<del>公</del>—&gt;b</p></li><li><p>c截获a<del>公</del>，c<del>公</del>—&gt;b</p></li><li><p>b无法判断是否为a<del>公</del>，确定登录,c<del>公</del>加密—&gt; 登录密码（误以为是a<del>公</del>）</p></li><li><p>c截获c<del>公</del>加密的密码，c<del>私</del>解密密码，a<del>公</del>加密密码—&gt;a。</p></li><li><p>a a<del>私</del>解密密码，发现可以解密，并与密码一致，允许登录</p></li></ul><p><code>所以第一次登录时需要判断，判断确认是否是b的公钥</code>，但是在不知道b的公钥的情况下无法验证，说明密码登录安全性很低。但是登陆过后的server公钥会放到client端的known_hosts下，不会再判断</p><ul><li>于是便有了密钥登录</li></ul><h3 id="免密登陆原理"><a href="#免密登陆原理" class="headerlink" title="免密登陆原理"></a>免密登陆原理</h3><p>client-&gt;server</p><p>1、client  密钥对 公钥 放到server（ssh-copy-id）</p><p>2、client发出请求 把自己的公钥—-&gt;server 对比公钥（对比之前已经）</p><p>3、server 用client公钥加密一串字符串-&gt;client</p><p>4、client 私钥解密字符串 -&gt;server（server对比）</p><p>5、server 验证成功 不需要密码</p><h3 id="免密登陆"><a href="#免密登陆" class="headerlink" title="免密登陆"></a>免密登陆</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 ssh-keygen</span><br><span class="line">2 ssh-copy-id user@remote（如果之前的所有操作都是默认执行并且没有修改过配置文件，则此时已经可以实现免密登录）</span><br></pre></td></tr></table></figure><p>存放别人公钥的位置：</p><p>client端：known_hosts（登录别人时，存放登录目标公钥的位置）</p><p>server端：authorized_keys（被别人登录时，存放被登录目标公钥的位置）（这一步可做可不做，主要是为了收拾东西）</p><h2 id="修改ssh配置文件"><a href="#修改ssh配置文件" class="headerlink" title="修改ssh配置文件"></a>修改ssh配置文件</h2><p><code>修改的是server端的/etc/ssh/sshd_config</code></p><ul><li><p>root密码禁用只能使用密钥登录without-password</p></li><li><p>禁用root登录 </p></li><li><p>禁用密码登录</p></li></ul><p>用rpm工具查看openssh-server服务提供的配置文件所在位置和服务所在位置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@servera ~]<span class="comment"># yum search ssh</span></span><br><span class="line">[root@servera ~]<span class="comment"># rpm -qc openssh-server</span></span><br><span class="line">/etc/pam.d/sshd</span><br><span class="line">/etc/ssh/sshd_config</span><br><span class="line">/etc/sysconfig/sshd</span><br><span class="line">[root@servera ~]<span class="comment"># vim /etc/ssh/sshd_config </span></span><br><span class="line">46 PermitRootLogin no</span><br><span class="line">/Rootwdw a no ZZ</span><br><span class="line">[root@servera ~]<span class="comment"># rpm -ql openssh-server | grep service</span></span><br><span class="line">/usr/lib/systemd/system/sshd-keygen@.service</span><br><span class="line">/usr/lib/systemd/system/sshd.service</span><br><span class="line">/usr/lib/systemd/system/sshd@.service</span><br><span class="line">[root@servera ~]<span class="comment"># systemctl restart sshd</span></span><br></pre></td></tr></table></figure><h3 id="端口实验"><a href="#端口实验" class="headerlink" title="端口实验"></a>端口实验</h3><p>更改端口后重新连接，需要关闭selinux和防火墙</p><p>或者重新配置防火墙放行端口和seLinux</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --add-port=222/tcp #防火墙放行222端口</span><br><span class="line"></span><br><span class="line">firewall-cmd reload #重载防火墙</span><br><span class="line"></span><br><span class="line">semanage prot -a -t ssh_port_t tcp 222#给222端口添加标签</span><br><span class="line"></span><br><span class="line">getenforce查seLinux状态 #即时生效</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">更改了连接的端口后：</span><br><span class="line">对于已经连接的终端，一切正常，但是如果尝试退出登录会卡死，并且无法结束任务；</span><br><span class="line">对于未连接的终端，无法通过原有端口连接</span><br></pre></td></tr></table></figure><h1 id="第三天补充小节"><a href="#第三天补充小节" class="headerlink" title="第三天补充小节"></a>第三天补充小节</h1><h2 id="xshell使用方式"><a href="#xshell使用方式" class="headerlink" title="xshell使用方式"></a>xshell使用方式</h2><ul><li><p>新建一个连接，此时需要输入主机地址</p><p>主机地址的获取方式：在被连接端：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[kiosk@foundation0 ~]$ ifconfig |grep 192</span><br><span class="line">        inet 192.168.123.1  netmask 255.255.255.0  broadcast 192.168.123.255</span><br><span class="line">        inet 192.168.232.130  netmask 255.255.255.0  broadcast 192.168.232.255</span><br><span class="line">        inet 192.168.232.131  netmask 255.255.255.0  broadcast 192.168.232.255</span><br><span class="line">ens192: flags=4099&lt;UP,BROADCAST,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.122.1  netmask 255.255.255.0  broadcast 192.168.122.255</span><br><span class="line">[kiosk@foundation0 ~]$ </span><br></pre></td></tr></table></figure></li><li><p>除去广播地址(.255)和网关地址（.1），选择192.168.232.131为主机地址，填入</p></li><li><p>发现可以连通，此时使用正常的用户名密码登录即可</p></li></ul><h2 id="xshell免密登陆F0"><a href="#xshell免密登陆F0" class="headerlink" title="xshell免密登陆F0"></a>xshell免密登陆F0</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># xshell---&gt;工具---&gt;新建用户密钥生成向导---&gt;密钥类型RSA|无所谓---&gt;公钥格式---&gt;保存为文件---&gt;.pub文件上传到要登录用户的~/.ssh/---&gt;cat id_rsa_1024.pub &gt; authorized_keys---&gt;</span></span><br></pre></td></tr></table></figure><h2 id="lrzsz命令实现文件传输"><a href="#lrzsz命令实现文件传输" class="headerlink" title="lrzsz命令实现文件传输"></a>lrzsz命令实现文件传输</h2><p>专门用来给Windows和Linux之间传输文件的工具，不是默认安装的包</p><p>Xshell环境下进行^（经过测试，不在xshell环境直接去虚拟机上rz直接卡死，都不能结束进程）^</p><ul><li><code>yum install -y lrzsz</code>安装上传下载包</li><li>上传：<code>rz</code>，弹出物理机上的文件，选择后上传到虚拟机的当前目录下</li><li><input disabled="" type="checkbox"> 下载：<code>sz 文件</code>（据说是这样的，但是目前没搞清楚，不知道下载到哪里了）</li></ul><h2 id="xftp工具实现文件传输"><a href="#xftp工具实现文件传输" class="headerlink" title="xftp工具实现文件传输"></a>xftp工具实现文件传输</h2><p>可以使用Xshell中设置好的密钥登录，结果为可以直接拖动文件，实现文件传输可视化</p><ul><li>传输协议使用sftp，其他配置与平常一样</li></ul><p><img src="C:\Users\user\AppData\Roaming\Typora\typora-user-images\image-20210721222201698.png" alt="image-20210721222201698"></p><ul><li><p><input checked="" disabled="" type="checkbox"> <code>就在配置好这个的时候，电脑出现了问题，微信可以使用但是浏览器无法访问，windows资源诊断显示：win10远程计算机或设备将不受连接。通过配置代理解决了该问题，但是无法验证该问题出现的原因是否与似乎用了xftp工具有关</code></p><p>老师说没关系，未验证</p></li></ul><h2 id="特殊权限的矛盾之处"><a href="#特殊权限的矛盾之处" class="headerlink" title="特殊权限的矛盾之处"></a>特殊权限的矛盾之处</h2><ol><li><strong>修改bash命令文件的other权限没有执行，则在root下无法使用 su -</strong></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@workstation tmp]# chmod 754 /usr/bin/bash</span><br><span class="line">[root@workstation tmp]# su - aa</span><br><span class="line">Last login: 三 7月 21 15:51:04 GMT 2021 on pts/1</span><br><span class="line">su: failed to execute /bin/bash: Permission denied</span><br></pre></td></tr></table></figure><blockquote><p>已解决，因为su的命令的本质是切换用户并打开一个shell，此处普通用户没有bash的执行权限，因此无法打开新的bash，执行失败</p><blockquote><ul><li><input checked="" disabled="" type="checkbox"> 于是测试了后台执行，依旧是失败</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@workstation ~]# su - student &amp;</span><br><span class="line">[1] 4264</span><br><span class="line">[root@workstation ~]# Last login: Thu Jul 22 10:53:20 GMT 2021 on pts/0</span><br><span class="line">su: failed to execute /bin/bash: Permission denied</span><br><span class="line">jobs</span><br><span class="line">[1]+  Exit 126                su - student</span><br></pre></td></tr></table></figure><p>推测是，是否为上述用词不够精准，是<strong>分配</strong>一个新的shell，而不是<strong>视觉上的打开</strong></p></blockquote></blockquote><blockquote><p>已解决,只要执行ssh,su之类登录的操作,都会使用到bash,不管是前台还是后台.可以通过 echo $$查询当前bash</p></blockquote><ol start="2"><li><p>对<code>cat /etc/shadow</code>在加特殊权限之前看不了的探究</p><p><code>ll /etc/shadow</code>发现该文件权限为000，此时普通用户有cat的执行权限，没有&#x2F;etc&#x2F;shadow的任何权限</p><p>经过实验：</p><ul><li><p>给&#x2F;etc&#x2F;shadow的other读权限，即004，即可使用cat查看该文件；</p></li><li><p>给cat命令u+s，还原&#x2F;etc&#x2F;shadow文件的权限为000，经过实验，也可以cat查看该文件，说明<code>u+s确实可以使普通用户借权执行命令，相当于在root用户下cat一个文件，root是蛮横且不讲道理的</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@workstation ~]# chmod u+s /usr/bin/cat</span><br><span class="line">[root@workstation ~]# ll /usr/bin/cat</span><br><span class="line">-rwsr-xr-x. 1 root root 87496 2月   3 2020 /usr/bin/cat</span><br><span class="line">[root@workstation ~]# chmod 000 /etc/shadow</span><br></pre></td></tr></table></figure></li></ul><p>同理，以<code>bash file</code>命令作为测试用例再次尝试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@workstation tmp]<span class="comment"># ll</span></span><br><span class="line">----------. 1 student wheel   351 7月  21 16:08 file</span><br><span class="line">[root@workstation tmp]<span class="comment"># echo &quot;echo echo&quot; &gt; file</span></span><br><span class="line">[root@workstation tmp]<span class="comment"># bash file</span></span><br><span class="line"><span class="built_in">echo</span></span><br></pre></td></tr></table></figure><ul><li><p>更改bash的权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@workstation tmp]<span class="comment"># bash file</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">[root@workstation tmp]<span class="comment"># ll /usr/bin/bash</span></span><br><span class="line">-rwxr-xr-x. 1 root root 1596592 8月  30 2019 /usr/bin/bash</span><br><span class="line">[root@workstation tmp]<span class="comment"># chmod u+s /usr/bin/bash</span></span><br><span class="line">[root@workstation tmp]<span class="comment"># ll /usr/bin/bash</span></span><br><span class="line">-rwsr-xr-x. 1 root root 1596592 8月  30 2019 /usr/bin/bash</span><br></pre></td></tr></table></figure></li><li><p><strong>使用其他用户执行，与预计结果不符</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[aa@workstation tmp]$ bash file</span><br><span class="line">bash: file: Permission denied</span><br></pre></td></tr></table></figure><ul><li><p>更改file权限为444（可读），可执行<code>bash file</code>，说明即使bash借权，也需要读权限执行命令</p><p>与预估情况不符，与cat的情况结果不同，<strong>打破了之前建立的逻辑</strong></p><p><strong>待解决问题：</strong>在下述情况下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@workstation tmp]# ll /usr/bin/bash</span><br><span class="line">-rwsr-xr-x. 1 root root 1596592 8月  30 2019 /usr/bin/bash</span><br><span class="line">[root@workstation tmp]# ll file </span><br><span class="line">----------. 1 root wheel 10 7月  21 16:09 file</span><br></pre></td></tr></table></figure><ul><li><p><input disabled="" type="checkbox"> 为什么root用户可以执行，普通用户不可以执行</p></li><li><p><input disabled="" type="checkbox"> u+s借权，借来的权到底是只有这个文件可以用，还是整行命令都可以用（其中sudo是可以在没有任何权限的身份下）</p></li><li><p><input disabled="" type="checkbox"> 这个矛盾的造成结果是因为权限没有搞清楚的问题，还是bash比较特殊？</p></li><li><p><input disabled="" type="checkbox"> 推翻之前全部推测的一个问题，是否每个存在&#x2F;user&#x2F;bin或者sbin中的可执行文件，都已经规定了谁可以以什么权限使用，是个无法通过简单的借权就能有额外权限的特殊个体。</p></li></ul></li></ul></li></ul><p><code>同样的操作用chmod实验，发现普通用户借权使用chmod同样可以更改不是自己文件的权限</code></p></li><li><p><strong>对命令拥有组身份执行的验证</strong>（未实验完成）</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 基于昨天的研究，依旧使用自主可控的bash命令作为验证方法</span><br><span class="line">2. 首先给一个file文件权限为444（都可读但都不可执行），设置属主为student</span><br><span class="line">3. 登录student账户，./file发现无法执行，bash file也无法执行，为正常情况</span><br></pre></td></tr></table></figure><h1 id="第十一章-日志分析及存储"><a href="#第十一章-日志分析及存储" class="headerlink" title="第十一章 日志分析及存储"></a>第十一章 日志分析及存储</h1><table><thead><tr><th align="center"><code>systemd-journald</code></th><th align="center">从内核收集消息(包括启动进程、标准输出及错误、进程运行启动等记录)</th></tr></thead><tbody><tr><td align="center">配置文件</td><td align="center">&#x2F;run&#x2F;log&#x2F;journal&#x2F;(重启系统清空)</td></tr><tr><td align="center">存放目录</td><td align="center">&#x2F;var&#x2F;log&#x2F;journal（这个目录是为了实现持久化存储时用户自己配置的，本来不存在）</td></tr><tr><td align="center">工具</td><td align="center">journalctl</td></tr></tbody></table><table><thead><tr><th align="center"><code>rsyslog</code></th><th align="center"><strong>对所有日志文件进行类型和级别进行分类</strong></th></tr></thead><tbody><tr><td align="center">配置文件</td><td align="center">&#x2F;etc&#x2F;rsyslog.conf</td></tr><tr><td align="center"></td><td align="center">&#x2F;var&#x2F;log&#x2F;rsyslog</td></tr></tbody></table><h2 id="日志文件类型（rsyslog-conf）"><a href="#日志文件类型（rsyslog-conf）" class="headerlink" title="日志文件类型（rsyslog.conf）"></a>日志文件类型（rsyslog.conf）</h2><table><thead><tr><th>日志文件</th><th>存储的消息类型</th></tr></thead><tbody><tr><td>&#x2F;var&#x2F;log&#x2F;messages</td><td>大多数系统日志消息处存放处，除去mail,authpriv,cron</td></tr><tr><td>&#x2F;var&#x2F;log&#x2F;secure</td><td>与安全性和身份验证时间相关的syslog消息。</td></tr><tr><td>&#x2F;var&#x2F;log&#x2F;maillog</td><td>与邮件服务器相关的syslog消息。</td></tr><tr><td>&#x2F;var&#x2F;log&#x2F;cron</td><td>与计划任务执行相关的syslog消息</td></tr><tr><td>&#x2F;var&#x2F;log&#x2F;boot.log</td><td>与系统启动相关的消息。</td></tr><tr><td>&#x2F;var&#x2F;log&#x2F;lastlog</td><td>与最近登录的用户信息相关的二进制文件，不能直接查，需要通过<code>last</code>命令查看</td></tr></tbody></table><p><code>last</code> 查看系统中最近登录的用户信息</p><h2 id="设备类别"><a href="#设备类别" class="headerlink" title="设备类别"></a>设备类别</h2><table><thead><tr><th>类别(facility)</th><th></th></tr></thead><tbody><tr><td>Kern</td><td>内核</td></tr><tr><td>authpriv</td><td>授权和安全</td></tr><tr><td>cron</td><td>计划任务</td></tr><tr><td>mail</td><td>邮件</td></tr><tr><td>daemon</td><td>系统守护进程</td></tr><tr><td>syslog</td><td>由rsyslog生成的信息，服务内部的信息，时间标识</td></tr><tr><td>local0~local7</td><td>自定义本地策略</td></tr><tr><td>lpr</td><td>打印</td></tr><tr><td>news</td><td>新闻组</td></tr><tr><td>user</td><td>用户程序产生相关信息</td></tr><tr><td>uucp</td><td>unix to unix copy</td></tr></tbody></table><h2 id="日志级别"><a href="#日志级别" class="headerlink" title="日志级别"></a>日志级别</h2><p>数字越大，级别越低，内容越多，紧急性越低，低级别会包含高于等于自己级别的所有日志。</p><p>数字越小越危险，出现频率也越低。</p><table><thead><tr><th>编号</th><th>级别</th><th>意义</th></tr></thead><tbody><tr><td>0</td><td>EMERG（紧急）</td><td>会导致主机系统不可用的情况</td></tr><tr><td>1</td><td>ALERT（警告）</td><td>必须马上采取措施解决的问题</td></tr><tr><td>2</td><td>CRIT（严重）</td><td>比较严重的情况</td></tr><tr><td>3</td><td>ERR（错误）</td><td>运行出现错误</td></tr><tr><td>4</td><td>WARNING（提醒）</td><td>可能会影响系统功能的事件</td></tr><tr><td>5</td><td>NOTICE（注意）</td><td>不会影响系统但值得注意</td></tr><tr><td>6</td><td>INFO（信息）</td><td>一般信息</td></tr><tr><td>7</td><td>DEBUG（调试）</td><td>程序或系统调试信息等</td></tr></tbody></table><h2 id="rsyslog日志格式"><a href="#rsyslog日志格式" class="headerlink" title="rsyslog日志格式"></a>rsyslog日志格式</h2><p>时间戳，主机名，程序或进程，内容</p><h2 id="手动发送日志"><a href="#手动发送日志" class="headerlink" title="手动发送日志"></a>手动发送日志</h2><p><code>logger</code>默认写到message</p><p>通过man手册查询<code>logger</code>，&#x2F;EXAMPLE 查看示例，&#x2F;FACILITIES AND LEVELS查看编辑类别和级别的选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改配置文件/var/log/debuguser.debug的日志保存到/var/log/debug中</span></span><br><span class="line"><span class="comment"># vim /etc/rsyslog.conf </span></span><br><span class="line">  user.debug                                              /var/log/debug</span><br><span class="line">systemctl restart rsyslog.service </span><br><span class="line">su -</span><br><span class="line"><span class="comment">#向user类型的debug级别的日志</span></span><br><span class="line">logger -p user.debug Hi easthome </span><br></pre></td></tr></table></figure><p><code>另外发现：logger可以实现补全类型和级别</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@workstation ~]# logger -p </span><br><span class="line">auth.alert      authpriv.emerg  daemon.alert    ftp.emerg       mail.alert      news.emerg</span><br><span class="line">auth.crit       authpriv.err    daemon.crit     ftp.err         mail.crit       news.err</span><br><span class="line">auth.debug      authpriv.error  daemon.debug    ftp.error       mail.debug      news.error</span><br><span class="line">auth.emerg      cron.alert      daemon.emerg    lpr.alert       mail.emerg      security.alert</span><br><span class="line">auth.err        cron.crit       daemon.err      lpr.crit        mail.err        security.crit</span><br><span class="line">auth.error      cron.debug      daemon.error    lpr.debug       mail.error      security.debug</span><br><span class="line">authpriv.alert  cron.emerg      ftp.alert       lpr.emerg       news.alert      security.emerg</span><br><span class="line">authpriv.crit   cron.err        ftp.crit        lpr.err         news.crit       security.err</span><br><span class="line">authpriv.debug  cron.error      ftp.debug       lpr.error       news.debug      security.error</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@workstation ~]<span class="comment"># vim /etc/rsyslog.conf </span></span><br><span class="line"><span class="comment">#zidingyi</span></span><br><span class="line">user.debug                                              /var/log/debug</span><br><span class="line">[root@workstation ~]<span class="comment"># systemctl restart rsyslog.service </span></span><br><span class="line">[root@workstation ~]<span class="comment"># logger -p user.debug Hi easthome</span></span><br><span class="line">[root@workstation ~]<span class="comment"># tail /var/log/debug </span></span><br><span class="line">Jul 22 11:23:23 workstation root[4870]: Hi easthome</span><br><span class="line">[root@workstation ~]<span class="comment"># tail /var/log/messages | grep &quot;Hi easthome&quot;</span></span><br><span class="line">[root@workstation ~]<span class="comment"># </span></span><br><span class="line"><span class="comment">#说明user类型的error命令不会记录到message中，符合message的设定：</span></span><br><span class="line"><span class="comment"># Log anything (except mail) of level info or higher.</span></span><br><span class="line"><span class="comment"># Don&#x27;t log private authentication messages!</span></span><br><span class="line">*.info;mail.none;authpriv.none;cron.none                /var/log/messages</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">尝试写一个user类型的error日志(同时实验err和error的区别)</span><br><span class="line">[root@workstation ~]<span class="comment"># logger -p user.err i am an err.</span></span><br><span class="line">[root@workstation ~]<span class="comment"># logger -p user.error i am an error.</span></span><br><span class="line"><span class="comment">#/var/log/messages无误</span></span><br><span class="line">[root@workstation ~]<span class="comment"># tail /var/log/messages | grep &quot;i am an&quot;</span></span><br><span class="line">Jul 22 11:39:49 workstation root[5033]: i am an err.</span><br><span class="line">Jul 22 11:39:56 workstation root[5034]: i am an error.</span><br><span class="line"><span class="comment">#/var/log/debug无误，debug作为最低级别可以看到所有日志</span></span><br><span class="line">[root@workstation ~]<span class="comment"># tail /var/log/debug | grep &quot;i am an&quot;</span></span><br><span class="line">Jul 22 11:39:49 workstation root[5033]: i am an err.</span><br><span class="line">Jul 22 11:39:56 workstation root[5034]: i am an error.</span><br></pre></td></tr></table></figure><ul><li><input checked="" disabled="" type="checkbox"> 与设想不符，设想应该不会出现在&#x2F;var&#x2F;log&#x2F;debug中</li></ul><blockquote><p>已解决，实验成功</p></blockquote><h2 id="systemd日志"><a href="#systemd日志" class="headerlink" title="systemd日志"></a>systemd日志</h2><p>可以通过man手册查询journalctl工具可以加哪些参数来详细查询</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">36  journalctl </span><br><span class="line"> <span class="comment">#  默认查看最后十行</span></span><br><span class="line"> 37  journalctl -n </span><br><span class="line"> <span class="comment">#  指定查看20行</span></span><br><span class="line"> 38  journalctl -n 20</span><br><span class="line"> <span class="comment">#  实时显示尾10行</span></span><br><span class="line"> 39  journalctl -f</span><br><span class="line"> <span class="comment"># 按级别查</span></span><br><span class="line"> 40  journalctl -p debug</span><br><span class="line"> 41  journalctl -p info</span><br><span class="line"> 42  journalctl -p notice</span><br><span class="line"> 43  journalctl -p warninf</span><br><span class="line"> 44  journalctl -p warning</span><br><span class="line"> 45  journalctl -p crit</span><br><span class="line"> 46  journalctl -p alert</span><br><span class="line"> 47  journalctl -p emerg</span><br><span class="line"> 48  journalctl --since today</span><br><span class="line"> 49  journalctl </span><br><span class="line"> <span class="comment"># 按时间段查</span></span><br><span class="line"> 50  journalctl --since <span class="string">&quot;2021-05-22 16:43:10&quot;</span> --until <span class="string">&quot;2021-05-22 17:43:10&quot;</span></span><br><span class="line"> 51  journalctl --since <span class="string">&quot;-1 hour&quot;</span></span><br><span class="line"> 52  <span class="built_in">date</span> </span><br><span class="line"> 53  journalctl _PID=1</span><br><span class="line"> 54  journalctl -b -1   记录更多次的启动日志记录-&gt;日志的持久存储？</span><br><span class="line"> 55  reboot </span><br></pre></td></tr></table></figure><h2 id="日志切割-（比如自定义实现nginx的日志切割）"><a href="#日志切割-（比如自定义实现nginx的日志切割）" class="headerlink" title="日志切割^（比如自定义实现nginx的日志切割）^"></a>日志切割^（比如自定义实现nginx的日志切割）^</h2><p>why？</p><p>删除旧 创建新 节省磁盘空间</p><p>常用工具</p><p>logrotate -&gt; 配置文件 (日志文件 那些格式 大小 副本 周期 权限……) –&gt; 计划任务 cron</p><p>周期性 切割指定文件 轮转 切割 手动</p><p>&#x2F;etc&#x2F;logrotate.d下放置着各种类型的配置文件，按照配置文件切割指定的日志文件</p><h2 id="持久化存储systemd日志-转储-考点-一定要结合容器做"><a href="#持久化存储systemd日志-转储-考点-一定要结合容器做" class="headerlink" title="持久化存储systemd日志(转储)^考点,一定要结合容器做^"></a>持久化存储systemd日志(转储)^考点,一定要结合容器做^</h2><p>提供systemd-journald日志的服务为systemd-journald</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">systemctl status systemd-journald <span class="comment">#确保服务状态</span></span><br><span class="line">vim /etc/systemd/journald.conf </span><br><span class="line"><span class="comment">#Storage=auto 默认是自动</span></span><br><span class="line">1. Storage=persisten <span class="comment">#改成持久化</span></span><br><span class="line">2. <span class="built_in">mkdir</span> /var/log/journal<span class="comment">#创建一个保存的位置</span></span><br><span class="line">ll -d /run/log/journal/</span><br><span class="line">3. <span class="built_in">chown</span> root:systemd-journal /var/log/journal/</span><br><span class="line"><span class="comment">#chgrp systemd-journal /var/log/journal</span></span><br><span class="line">4. <span class="built_in">chmod</span> 2755 /var/log/journal/</span><br><span class="line"><span class="comment">#chmod g+s /var/log/journal/ 赋予用户组s权限，以后产生的所有日志文件都属于该组</span></span><br><span class="line">5. systemctl restart systemd-journald</span><br><span class="line"></span><br><span class="line">验证：</span><br><span class="line">reboot</span><br><span class="line"><span class="comment">#journal -b 加 数字（小于0） ，作用是查看前n次登录时d</span></span><br><span class="line">journal -b -1 ，-2</span><br></pre></td></tr></table></figure><p>思考题：对于systemd日志能不能切割？</p><h2 id="集中收集日志-（一收多，同时管理）"><a href="#集中收集日志-（一收多，同时管理）" class="headerlink" title="集中收集日志^（一收多，同时管理）^"></a>集中收集日志^（一收多，同时管理）^</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ELK日志系统</span><br><span class="line">多台机器日志集中-&gt;一台机器 日志服务器 </span><br></pre></td></tr></table></figure><p><code>vim /etc/rsyslog.conf</code>修改发送端与接收端的配置文件</p><p>默认配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Provides UDP syslog reception</span></span><br><span class="line"><span class="comment"># for parameters see http://www.rsyslog.com/doc/imudp.html</span></span><br><span class="line"><span class="comment">#module(load=&quot;imudp&quot;) # needs to be done just once</span></span><br><span class="line"><span class="comment">#input(type=&quot;imudp&quot; port=&quot;514&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Provides TCP syslog reception</span></span><br><span class="line"><span class="comment"># for parameters see http://www.rsyslog.com/doc/imtcp.html</span></span><br><span class="line"><span class="comment">#module(load=&quot;imtcp&quot;) # needs to be done just once</span></span><br><span class="line"><span class="comment">#input(type=&quot;imtcp&quot; port=&quot;514&quot;)</span></span><br></pre></td></tr></table></figure><p>UDP（发出去就不管了，效率高但是可能丢失数据）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">`接收端</span><br><span class="line"><span class="comment"># vim /etc/rsyslog.conf</span></span><br><span class="line"><span class="comment"># Provides UDP syslog reception</span></span><br><span class="line"><span class="comment">#注意下面两行注释都要取消，打开一个失败。</span></span><br><span class="line">module(load=<span class="string">&quot;imudp&quot;</span>) <span class="comment"># needs to be done just once</span></span><br><span class="line">input(<span class="built_in">type</span>=<span class="string">&quot;imudp&quot;</span> port=<span class="string">&quot;514&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl restart rsyslog.service </span></span><br><span class="line"><span class="comment"># firewall-cmd --permanent --add-port=514/udp</span></span><br><span class="line"><span class="comment"># firewall-cmd --reload </span></span><br><span class="line"></span><br><span class="line">ss -antup|grep 514 查看监听端口</span><br><span class="line"><span class="built_in">tail</span> -f /var/log/messages</span><br><span class="line">`发送端</span><br><span class="line"><span class="comment"># vim /etc/rsyslog.conf</span></span><br><span class="line">*.*                                                     @172.25.250.10</span><br><span class="line"><span class="comment">#配置本地</span></span><br><span class="line">重启服务 去接收端验证</span><br></pre></td></tr></table></figure><p>TCP（三次握手保证完整，效率低，但可靠）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">` 接收端</span><br><span class="line"><span class="comment"># vim /etc/rsyslog.conf</span></span><br><span class="line"><span class="comment"># Provides UDP syslog reception</span></span><br><span class="line"><span class="comment">#注意下面两行注释都要取消，打开一个失败。</span></span><br><span class="line">module(load=<span class="string">&quot;imtcp&quot;</span>) <span class="comment"># needs to be done just once</span></span><br><span class="line">input(<span class="built_in">type</span>=<span class="string">&quot;imtcp&quot;</span> port=<span class="string">&quot;514&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl restart rsyslog.service </span></span><br><span class="line"><span class="comment"># firewall-cmd --permanent --add-port=514/tcp</span></span><br><span class="line"><span class="comment"># firewall-cmd --reload </span></span><br><span class="line"></span><br><span class="line">ss -antup|grep 514 查看监听端口</span><br><span class="line"><span class="built_in">tail</span> -f /var/log/messages</span><br><span class="line"></span><br><span class="line">`发送端</span><br><span class="line"><span class="comment"># vim /etc/rsyslog.conf</span></span><br><span class="line">*.*                                                     @@172.25.250.10</span><br><span class="line"></span><br><span class="line">重启服务 去接收端验证</span><br></pre></td></tr></table></figure><p><code>TCP和UDP发送端配置文件不同之处，@和@@＋主机.端口</code></p><p><code>客户端不会受到防火墙和seLinux的影响</code></p><p><code>firewall-cmd --permanent --add-port=514/tcp或udp（看需求）</code></p><h2 id="系统时间管理"><a href="#系统时间管理" class="headerlink" title="系统时间管理"></a>系统时间管理</h2><p>local time 操作系统时间</p><p>RTC time硬件时间</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">date</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看时间</span></span><br><span class="line">[student@servera ~]$ timedatectl </span><br><span class="line">               Local time: 四 2021-07-22 04:25:14 GMT</span><br><span class="line">           Universal time: 四 2021-07-22 04:25:14 UTC</span><br><span class="line">                 RTC time: 四 2021-07-22 05:54:50</span><br><span class="line">                Time zone: Atlantic/Reykjavik (GMT, +0000)</span><br><span class="line">System clock synchronized: yes</span><br><span class="line">              NTP service: active</span><br><span class="line">          RTC in local TZ: no</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置时区</span></span><br><span class="line">timedatectl set-timezone Asia/Shanghai</span><br><span class="line"></span><br><span class="line">  122  timedatectl set-time 10:10:10</span><br><span class="line">  123  timedatectl set-time false</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">是否使用时间服务器</span>  </span><br><span class="line">timedatectl set-ntp false</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看当前使用的时间服务器</span></span><br><span class="line">[student@servera ~]$ chronyc sources -v</span><br><span class="line">210 Number of sources = 1</span><br><span class="line"></span><br><span class="line">  .-- Source mode  &#x27;^&#x27; = server, &#x27;=&#x27; = peer, &#x27;#&#x27; = local clock.</span><br><span class="line"> / .- Source state &#x27;*&#x27; = current synced, &#x27;+&#x27; = combined , &#x27;-&#x27; = not combined,</span><br><span class="line">| /   &#x27;?&#x27; = unreachable, &#x27;x&#x27; = time may be in error, &#x27;~&#x27; = time too variable.</span><br><span class="line">||                                                 .- xxxx [ yyyy ] +/- zzzz</span><br><span class="line">||      Reachability register (octal) -.           |  xxxx = adjusted offset,</span><br><span class="line">||      Log2(Polling interval) --.      |          |  yyyy = measured offset,</span><br><span class="line">||                                \     |          |  zzzz = estimated error.</span><br><span class="line">||                                 |    |           \</span><br><span class="line">MS Name/IP address         Stratum Poll Reach LastRx Last sample               </span><br><span class="line">===============================================================================</span><br><span class="line">^* classroom.example.com         8  10   377   638    +29us[  +29us] +/- 1977us</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改网络时间服务器</span></span><br><span class="line">vim /etc/chrony.conf</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Please consider joining the pool (http://www.pool.ntp.org/join.html).</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">server 0.rhel.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">server 1.rhel.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">server 2.rhel.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">server 3.rhel.pool.ntp.org iburst</span></span><br><span class="line">server 172.25.254.254 iburst</span><br><span class="line">修改上面的ip为</span><br><span class="line"></span><br><span class="line">  125  timedatectl set-time 10:10:10</span><br><span class="line">  126  timedatectl </span><br><span class="line">  127  timedatectl list-timezones </span><br></pre></td></tr></table></figure><h3 id="设置时钟服务器-配置NTP客户端）-考"><a href="#设置时钟服务器-配置NTP客户端）-考" class="headerlink" title="设置时钟服务器(配置NTP客户端）^考^"></a>设置时钟服务器(配置NTP客户端）^考^</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">自己加网卡之后，域名不能解析问题。</span><br><span class="line">17  route -n</span><br><span class="line">18  route add default gw 172.25.254.254</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">129  timedatectl </span><br><span class="line">130  timedatectl set-ntp true</span><br><span class="line">131  vim /etc/chrony.conf</span><br><span class="line"></span><br><span class="line">#server 0.rhel.pool.ntp.org iburst</span><br><span class="line">#server 1.rhel.pool.ntp.org iburst</span><br><span class="line">#server 2.rhel.pool.ntp.org iburst</span><br><span class="line">server classroom.example.com iburst</span><br><span class="line"></span><br><span class="line">132  systemctl restart chronyd.service </span><br><span class="line">133  date</span><br><span class="line">134  timedatectl </span><br><span class="line">135  chronyc sources -v</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="第十二章-网络管理"><a href="#第十二章-网络管理" class="headerlink" title="第十二章 网络管理"></a>第十二章 网络管理</h1><p><a href="https://segmentfault.com/a/1190000020031911">ip跟主机，网卡的关系</a></p><p>本章需要了解的内容：</p><ul><li>网卡的命名规则（从名字上获取网卡信息）</li><li>查看网卡的配置</li><li>服务对应的标准端口<code>vim /etc/services</code></li></ul><p>什么是网络?</p><p><code>ip addr show</code> </p><p><code>ifconfig</code></p><p><code>ss -antup</code></p><h2 id="网络接口名称规范-网卡"><a href="#网络接口名称规范-网卡" class="headerlink" title="网络接口名称规范(网卡)"></a>网络接口名称规范(网卡)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">传统上，Linux的网络接口列举为 eth0、eth1、eth2 …</span><br><span class="line">RHEL8的默认命名是基于固件基础上分配的固定名称，如ens33</span><br><span class="line">接口类型</span><br><span class="line">以太网有线接口为 en</span><br><span class="line">无线局域网接口为 wl</span><br><span class="line">无线广域网接口为 ww</span><br><span class="line">适配器类型</span><br><span class="line">s为热插拔插槽</span><br><span class="line">o为板载</span><br><span class="line">p代表对 PCI 类型的支持</span><br><span class="line">数字N代表索引、ID或端口</span><br><span class="line">如果固定名称不能确定，传统的名称如 ethN 将被使用</span><br></pre></td></tr></table></figure><h2 id="验证网络配置"><a href="#验证网络配置" class="headerlink" title="验证网络配置"></a>验证网络配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">138  ifconfig </span><br><span class="line">139  ifconfig enp1s0</span><br><span class="line">140  ip addr show </span><br><span class="line">141  ip addr show </span><br><span class="line">144  ip addr show enp1s0</span><br><span class="line">145  ip a s</span><br><span class="line">146  ping serverb</span><br><span class="line">147  netstat -antup</span><br><span class="line">148  route -n</span><br><span class="line">149  ethtool </span><br><span class="line">150  ethtool enp1s0</span><br><span class="line">151  history </span><br><span class="line">152  nmcli connection show</span><br><span class="line">ss -antup</span><br></pre></td></tr></table></figure><h2 id="标准服务端口"><a href="#标准服务端口" class="headerlink" title="标准服务端口"></a>标准服务端口</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># vim /etc/services</span><br><span class="line">/22 n n</span><br><span class="line">/443</span><br><span class="line">/80 n n</span><br></pre></td></tr></table></figure><h2 id="nmcli-重点（服务是Network-manager）"><a href="#nmcli-重点（服务是Network-manager）" class="headerlink" title="nmcli^重点（服务是Network^ ^manager）^"></a>nmcli^重点（服务是Network^ ^manager）^</h2><p>一个设备可以有多个配置文件，但是同一时间 只能一个生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">[root@serverb network-scripts]<span class="comment"># nmcli connection add ifname enp1s0 type ethernet connection.id zidingyi_enp1s0 ipv4.method </span></span><br><span class="line">添加一个连接 </span><br><span class="line">[root@serverb network-scripts]<span class="comment"># nmcli connection add ifname enp1s0 type ethernet connection.id zidingyi_enp1s0 ipv4.method manual ipv4.addresses 172.25.250.51/24 ipv4.gateway 172.25.250.254 ipv4.dns 8.8.8.8 connection.autoconnect yes</span></span><br><span class="line">Connection <span class="string">&#x27;zidingyi_enp1s0&#x27;</span> (70ee5ed6-6e14-4e84-93bc-639d34acce7f) successfully added.</span><br><span class="line">[root@serverb network-scripts]<span class="comment"># IPADDR NETMASK|PREFIX DNS1 DNS2 GATEWAY ONBOOT=yes</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># nmcli dev status </span></span><br><span class="line"><span class="comment"># nmcli connection show</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ls /etc/sysconfig/network-scripts/ifcfg-*</span></span><br><span class="line"></span><br><span class="line">-dhcp</span><br><span class="line"><span class="comment"># nmcli connection modify &#x27;Wired connection 1&#x27; \ connection.autoconnect yes \</span></span><br><span class="line">ipv4.method auto</span><br><span class="line"><span class="comment"># systemctl restart NetworkManager</span></span><br><span class="line"><span class="comment"># ip a s</span></span><br><span class="line">-static</span><br><span class="line"><span class="comment"># nmcli con mod &#x27;Wired connection 1&#x27; \</span></span><br><span class="line">connection.autoconnect <span class="built_in">yes</span> \</span><br><span class="line">ipv4.method manual \</span><br><span class="line">ipv4.addresses 172.25.250.11/24 \</span><br><span class="line">ipv4.gateway 172.25.250.254 \</span><br><span class="line">ipv4.dns 8.8.8.8</span><br><span class="line"><span class="comment"># nmcli connection up &#x27;Wired connection 1&#x27; </span></span><br><span class="line"><span class="comment"># ip a s</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mandb</span></span><br><span class="line"><span class="comment"># man -k nmcli</span></span><br><span class="line"><span class="comment"># man nmcli | grep -A 2 nmcli.*mod</span></span><br><span class="line"></span><br><span class="line">+ipv4.addresses,-ipv4.dns</span><br><span class="line"><span class="comment"># nmcli con mod &#x27;Wired connection 1&#x27; +ipv4.addresses 172.25.250.10/24</span></span><br><span class="line"><span class="comment"># ifdown &#x27;Wired_connection_1&#x27; &amp;&amp; ifup &#x27;Wired_connection_1&#x27;</span></span><br><span class="line"><span class="comment"># ip a s</span></span><br><span class="line"><span class="comment"># nmcli con mod &#x27;Wired connection 1&#x27; -ipv4.addresses 172.25.250.10/24</span></span><br><span class="line"><span class="comment"># ifdown &#x27;Wired_connection_1&#x27; &amp;&amp; ifup &#x27;Wired_connection_1&#x27;</span></span><br><span class="line"><span class="comment"># ip a s</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># nmtui tab键</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="主机名称设置-考点"><a href="#主机名称设置-考点" class="headerlink" title="主机名称设置^考点^"></a>主机名称设置^考点^</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hostname</span><br><span class="line">cat /etc/hostname</span><br><span class="line">hostnamectl set-hostname serverb.lab.example.com</span><br><span class="line">hostname</span><br><span class="line">hostnamectl</span><br><span class="line">hostnamectl status</span><br><span class="line">cat /etc/hostname</span><br></pre></td></tr></table></figure><p>修改主机名称，重启才能生效^重点^</p><h1 id="第十三章-归档及传输文件"><a href="#第十三章-归档及传输文件" class="headerlink" title="第十三章 归档及传输文件"></a>第十三章 归档及传输文件</h1><h2 id="打包-解包（归档）"><a href="#打包-解包（归档）" class="headerlink" title="打包 解包（归档）"></a>打包 解包（归档）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">-tar</span><br><span class="line">tar 选项  归档文件名    源文件 源文件2 源文件N</span><br><span class="line">-c  创建</span><br><span class="line">-t  查看</span><br><span class="line">-f  指定文件名</span><br><span class="line">-v  显示详细信息</span><br><span class="line">-x  解包</span><br><span class="line">-C  指定解包路径</span><br><span class="line"><span class="comment"># mkdir test</span></span><br><span class="line"><span class="comment"># cd test/</span></span><br><span class="line"><span class="comment"># cp -r /etc/ .</span></span><br><span class="line"><span class="comment"># cp /boot/initramfs-4.18.0-80.el8.x86_64kdump.img .</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># ls -lh</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># dd if=/dev/zero of=myfile bs=1M count=50</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># tar -cvf file.tar etc/ initramfs-4.18.0-80.el8.x86_64kdump.img myfile</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># file file.tar</span></span><br><span class="line"><span class="comment"># ls -lh file.tar</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># mkdir mydir</span></span><br><span class="line"><span class="comment"># tar -xvf file.tar -C mydir/</span></span><br><span class="line"><span class="comment"># ls mydir/</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># tar -tf file.tar</span></span><br></pre></td></tr></table></figure><h2 id="压缩和解压缩-考点"><a href="#压缩和解压缩-考点" class="headerlink" title="压缩和解压缩^考点^"></a>压缩和解压缩^考点^</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">man tar /-j 格式 -j -J -z</span><br><span class="line"><span class="comment"># tar -czf myfile.gzip etc/ initramfs-4.18.0-80.el8.x86_64kdump.img  myfile</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># file myfile.gzip</span></span><br><span class="line"><span class="comment"># tar -tf myfile.gzip</span></span><br><span class="line"><span class="comment"># tar -cjf myfile.bzip2 etc/ initramfs-4.18.0-80.el8.x86_64kdump.img myfile</span></span><br><span class="line"><span class="comment"># ls -lh</span></span><br><span class="line"><span class="comment"># file myfile.bzip2</span></span><br><span class="line"><span class="comment"># tar -cJf myfile.xz etc/ initramfs-4.18.0-80.el8.x86_64kdump.img myfile</span></span><br><span class="line"><span class="comment"># file myfile.xz</span></span><br><span class="line"><span class="comment"># ls -lh</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># mkdir jieyasuo</span></span><br><span class="line"><span class="comment"># ls -lh</span></span><br><span class="line"><span class="comment"># history</span></span><br><span class="line"><span class="comment"># tar -xJf myfile.xz -C jieyasuo/</span></span><br><span class="line"><span class="comment"># ls jieyasuo/</span></span><br><span class="line"><span class="comment"># tar -xjf myfile.bzip2 -C jieyasuo/</span></span><br><span class="line"><span class="comment"># ls jieyasuo/</span></span><br><span class="line"><span class="comment"># tar -xzf myfile.gzip -C jieyasuo/</span></span><br><span class="line"><span class="comment"># ls jieyasuo/</span></span><br></pre></td></tr></table></figure><h2 id="文件传输"><a href="#文件传输" class="headerlink" title="文件传输"></a>文件传输</h2><h3 id="scp"><a href="#scp" class="headerlink" title="scp"></a>scp</h3><p>基于ssh传输，可以使用密钥验证连接</p><p>把前传给后，server端需要指定user@host</p><p>client to server：<code>scp myfile* root@serverb:~</code></p><p>server to client：<code>scp root@serverb:~/myfile* .</code></p><p>client to client：<code>scp root@serverb:~/myfile* root@bastion:~</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># scp myfile* root@serverb:~</span></span><br><span class="line"><span class="comment"># ss -antup|grep ssh</span></span><br><span class="line"><span class="comment"># ifcn</span></span><br><span class="line"><span class="comment"># ifconfig</span></span><br><span class="line"><span class="comment"># scp root@serverb:~/myfile* .</span></span><br><span class="line"><span class="comment"># ss -antup|grep ssh</span></span><br><span class="line"><span class="comment"># scp root@serverb:~/myfile* root@bastion:~</span></span><br></pre></td></tr></table></figure><h3 id="sftp"><a href="#sftp" class="headerlink" title="sftp"></a>sftp</h3><p>基于ssh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sftp root@serverb</span></span><br><span class="line">get 下载</span><br><span class="line">put 上传</span><br><span class="line"><span class="built_in">command</span> 远程执行</span><br><span class="line">!<span class="built_in">command</span> 本地执行</span><br></pre></td></tr></table></figure><h3 id="rsync"><a href="#rsync" class="headerlink" title="rsync"></a>rsync</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">三种工作模式：</span><br><span class="line">1. 本地间传输</span><br><span class="line">2. 远程传输</span><br><span class="line">3. 守护进程模式，配置文件加其他工具可以实现自动化备份</span><br></pre></td></tr></table></figure><p>如果复制目录结构相同时有两个目录结构的相似的文件，则只复制有差异的部分，所以很快</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rm -rf /tmp/*</span></span><br><span class="line"><span class="comment"># ls /tmp/</span></span><br><span class="line"><span class="comment"># rsync myfile* /tmp/</span></span><br><span class="line"><span class="comment"># rsync -av myfile* /tmp/</span></span><br><span class="line"><span class="comment"># dd if=/dev/zero of=myfile1gb bs=1M count=1024</span></span><br><span class="line"><span class="comment"># rsync -av myfile* /tmp/</span></span><br><span class="line"><span class="comment"># dd if=/dev/zero of=myfile100m bs=1M count=100</span></span><br><span class="line"><span class="comment"># rsync -av myfile* /tmp/</span></span><br><span class="line"><span class="comment"># echo myfile &gt; myfileecho</span></span><br><span class="line"><span class="comment"># rsync -av myfile* /tmp/</span></span><br><span class="line"><span class="comment"># echo myfilemyfile &gt; myfileecho</span></span><br><span class="line"><span class="comment"># rsync -av myfile* /tmp/</span></span><br><span class="line"><span class="comment"># cat /tmp/myfileecho</span></span><br><span class="line"><span class="comment"># rsync myfile* root@serverb:~</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># rm -rf myfile100m</span></span><br><span class="line"><span class="comment"># rsync myfile* root@serverb:~</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># rsync  root@serverb:~/myfile* .</span></span><br></pre></td></tr></table></figure><h1 id="第四天混沌小节"><a href="#第四天混沌小节" class="headerlink" title="第四天混沌小节"></a><em>第四天混沌小节</em></h1><p>使用Networkmanager管理网络</p><p><code>/etc/sysconfig/network-scripts/</code> 网卡存放的地方</p><p>vim编辑网卡</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">IPADDR=172.25.250.10</span><br><span class="line">PREFIX=24</span><br><span class="line">GATEWAY=172.25.250.254</span><br><span class="line">DNS1=172.25.250.254</span><br><span class="line">ONBOOT=yes ##如果为no重启不生效，很重要</span><br></pre></td></tr></table></figure><p>查看连接状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[student@servera network-scripts]$ nmcli connection show</span><br><span class="line">NAME                UUID                                  TYPE      DEVICE </span><br><span class="line">Wired connection 1  81b08161-8925-3cb9-a94c-e3c827e2adc3  ethernet  eth0   </span><br></pre></td></tr></table></figure><p>查看设备状态</p><p>手动配置manual或者DHCP动态配置网卡</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>查看网关 route -n</p><p>查看dns cat &#x2F;etc&#x2F;resolv.conf</p><h1 id="第十四章-安装和升级软件包"><a href="#第十四章-安装和升级软件包" class="headerlink" title="第十四章 安装和升级软件包"></a>第十四章 安装和升级软件包</h1><h2 id="软件包分类"><a href="#软件包分类" class="headerlink" title="软件包分类"></a>软件包分类</h2><p>exe rpm 源码包 bin 二进制 rar 预编译  msi deb</p><p>红帽 rpm | yum | dnf</p><p>debian DPKG-DEB apt</p><h2 id="RPM"><a href="#RPM" class="headerlink" title="RPM"></a>RPM</h2><p>rpm</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /content/rhel8.0/x86_64/dvd/AppStream/Packages/</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># pwd</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># ls | wc -l</span></span><br><span class="line"><span class="comment"># ls | grep nmap</span></span><br><span class="line"><span class="comment"># rpm -q nmap-ncat p</span></span><br><span class="line"><span class="comment"># rpm -q nmap-ncat</span></span><br><span class="line"><span class="comment"># rpm -q nmap</span></span><br><span class="line"><span class="comment"># 查询详细信息</span></span><br><span class="line"><span class="comment"># rpm -qi nmap</span></span><br><span class="line"><span class="comment"># rpm -qi nmap-ncat</span></span><br><span class="line"><span class="comment"># cd ..</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># cd BaseOS/</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># cd Packages/</span></span><br><span class="line"><span class="comment"># ls | grep samba</span></span><br><span class="line"><span class="comment"># 查询是否安装</span></span><br><span class="line"><span class="comment"># rpm -q samba 查询</span></span><br><span class="line"><span class="comment"># rpm -ivh samba-4.9.1-8.el8.x86_64.rpm</span></span><br><span class="line"><span class="comment"># rpm -ivh lrzsz-0.12.20-43.el8.x86_64.rpm  安装</span></span><br><span class="line"><span class="comment"># rpm -q lrzsz</span></span><br><span class="line"><span class="comment"># 查询信息,与yum info类似</span></span><br><span class="line"><span class="comment"># rpm -qi lrzsz </span></span><br><span class="line"><span class="comment"># rpm -e lrzsz  卸载</span></span><br><span class="line"><span class="comment"># rpm -q lrzsz</span></span><br><span class="line"><span class="comment"># rpm -ivh lrzsz</span></span><br><span class="line"><span class="comment"># rpm -ivh lrzsz-0.12.20-43.el8.x86_64.rpm</span></span><br><span class="line"><span class="comment"># 卸载不能加版本号</span></span><br><span class="line"><span class="comment"># rpm -e lrzsz</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># rpm -q lrzsz</span></span><br><span class="line"><span class="comment"># rpm -ql lrzsz 生成了那些文件</span></span><br><span class="line"><span class="comment"># rpm -qc lrzsz 配置文件在哪</span></span><br><span class="line"><span class="comment"># rpm -qf /usr/bin/sb  这个文件是通过安装那个软件包出来的</span></span><br><span class="line"><span class="comment"># rpm -qa|grep lrzsz 列出所有已经安装的软件包  并过滤</span></span><br><span class="line"><span class="comment"># rpm -qa|grep nmap</span></span><br><span class="line"><span class="comment"># rpm -qa|grep autofs</span></span><br><span class="line"><span class="comment"># rpm -ivh samba-common-4.9.1-8.el8.noarch.rpm</span></span><br><span class="line"><span class="comment"># 查看配置文件</span></span><br><span class="line"><span class="comment"># rpm -qc samba-common-4.9.1-8.el8.noarch.rpm</span></span><br><span class="line"><span class="comment"># 查看安装软件包释放了哪些文件</span></span><br><span class="line"><span class="comment"># rpm -ql samba-common-4.9.1-8.el8.noarch.rpm</span></span><br><span class="line"><span class="comment"># 查看释放的文件是哪个软件包释放的,反向查询</span></span><br><span class="line"><span class="comment"># rpm -qf /var/lib/samba</span></span><br><span class="line"><span class="comment"># rpm -q --scripts samba-common  执行了shell脚本</span></span><br><span class="line"><span class="comment"># 查询安装软件包时帮助文档的位置,也就是新安装时的man手册未同步进去的东西,mandb同步</span></span><br><span class="line"><span class="comment"># rpm -qd samba-common   文档在哪</span></span><br><span class="line">依赖关系？                                     </span><br></pre></td></tr></table></figure><h2 id="yum-dnf"><a href="#yum-dnf" class="headerlink" title="yum | dnf"></a>yum | dnf</h2><p>dnf3</p><table><thead><tr><th align="center">编号</th><th align="center">DNF（Dandified YUM）</th><th align="center">YUM（Yellowdog Updater, Modified）</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">DNF 使用 libsolv 来解析依赖关系，由 SUSE 开发和维护</td><td align="center">YUM 使用公开的 API 来解析依赖关系</td></tr><tr><td align="center">2</td><td align="center">API 有完整的文档</td><td align="center">API 没有完整的文档</td></tr><tr><td align="center">3</td><td align="center">由 C、C++、Python 编写的</td><td align="center">只用 Python 编写</td></tr><tr><td align="center">4</td><td align="center">DNF 目前在 Fedora、RHEL 8、CentOS 8、OEL 8 和 Mageia 6&#x2F;7 中使用</td><td align="center">YUM 目前在 RHEL 6&#x2F;7、CentOS 6&#x2F;7、OEL 6&#x2F;7 中使用</td></tr><tr><td align="center">5</td><td align="center">DNF 支持各种扩展</td><td align="center">Yum 只支持基于 Python 的扩展</td></tr><tr><td align="center">6</td><td align="center">API 有良好的文档，因此很容易创建新的功能</td><td align="center">因为 API 没有正确的文档化，所以创建新功能非常困难</td></tr><tr><td align="center">7</td><td align="center">DNF 在同步存储库的元数据时，使用的内存较少</td><td align="center">在同步存储库的元数据时，YUM 使用了过多的内存</td></tr><tr><td align="center">8</td><td align="center">DNF 使用满足性算法来解决依赖关系解析（它是用字典的方法来存储和检索包和依赖信息）</td><td align="center">由于使用公开 API 的原因，Yum 依赖性解析变得迟钝</td></tr><tr><td align="center">9</td><td align="center">从内存使用量和版本库元数据的依赖性解析来看，性能都不错</td><td align="center">总的来说，在很多因素的影响下，表现不佳</td></tr><tr><td align="center">10</td><td align="center">DNF 更新：在 DNF 更新过程中，如果包中包含不相关的依赖，则不会更新</td><td align="center">YUM 将在没有验证的情况下更新软件包</td></tr><tr><td align="center">11</td><td align="center">如果启用的存储库没有响应，DNF 将跳过它，并继续使用可用的存储库处理事务</td><td align="center">如果有存储库不可用，YUM 会立即停止</td></tr><tr><td align="center">12</td><td align="center"><code>dnf update</code> 和 <code>dnf upgrade</code> 是等价的</td><td align="center">在 Yum 中则不同</td></tr><tr><td align="center">13</td><td align="center">安装包的依赖关系不更新</td><td align="center">Yum 为这种行为提供了一个选项</td></tr><tr><td align="center">14</td><td align="center">清理删除的包：当删除一个包时，DNF 会自动删除任何没有被用户明确安装的依赖包</td><td align="center">Yum 不会这样做</td></tr><tr><td align="center">15</td><td align="center">存储库缓存更新计划：默认情况下，系统启动后 10 分钟后，DNF 每小时会对配置的存储库检查一次更新。这个动作由系统定时器单元 <code>dnf-makecache.timer</code> 控制</td><td align="center">Yum 也会这样做</td></tr><tr><td align="center">16</td><td align="center">内核包不受 DNF 保护。不像 Yum，你可以删除所有的内核包，包括运行中的内核包</td><td align="center">Yum 不允许你删除运行中的内核</td></tr><tr><td align="center">17</td><td align="center">libsolv：用于解包和读取资源库。hawkey: 为 libsolv 提供简化的 C 和 Python API 库。librepo: 提供 C 和 Python（类似 libcURL）API 的库，用于下载 Linux 存储库元数据和软件包。libcomps: 是 yum.comps 库的替代品。它是用纯 C 语言编写的库，有 Python 2 和 Python 3 的绑定。</td><td align="center">Yum 不使用单独的库来执行这些功能</td></tr><tr><td align="center">18</td><td align="center">DNF 包含 29000 行代码</td><td align="center">Yum 包含 56000 行代码</td></tr><tr><td align="center">19</td><td align="center">DNF 由 Ales Kozumplik 开发</td><td align="center">YUM 由 Zdenek Pavlas、Jan Silhan 和团队成员开发</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># whcih yum</span></span><br><span class="line"><span class="comment"># which yum</span></span><br><span class="line"><span class="comment"># ls -l $(which yum)</span></span><br><span class="line"><span class="comment"># ls -l $(which dnf)</span></span><br><span class="line"><span class="comment"># man dnf</span></span><br><span class="line"><span class="comment"># dnf repolist</span></span><br><span class="line"><span class="comment"># dnf list</span></span><br><span class="line"><span class="comment"># dnf list | wc -l</span></span><br><span class="line"><span class="comment"># dnf  search http</span></span><br><span class="line"><span class="comment"># qq</span></span><br><span class="line"><span class="comment"># dnf list|grep autofs</span></span><br><span class="line"><span class="comment"># dnf info autofs</span></span><br><span class="line"><span class="comment"># dnf grouplist</span></span><br><span class="line"><span class="comment"># yum groupinfo &#x27;Graphical Administration Tools&#x27;</span></span><br><span class="line"><span class="comment"># dnf install autofs</span></span><br><span class="line"><span class="comment"># dnf install nmap</span></span><br><span class="line"><span class="comment"># dnf install samba</span></span><br><span class="line"><span class="comment"># dnf -y install samba</span></span><br><span class="line"><span class="comment"># dnf grouplist</span></span><br><span class="line"><span class="comment"># dnf groupinstall &#x27;System Tools&#x27;</span></span><br><span class="line"><span class="comment"># yum -y install samba</span></span><br><span class="line"><span class="comment"># yum -y remove samba</span></span><br><span class="line"><span class="comment"># yum -y install samba</span></span><br><span class="line"><span class="comment"># yum -y erase samba</span></span><br><span class="line"><span class="comment"># dnf repolist</span></span><br><span class="line"><span class="comment"># dnf makecache</span></span><br><span class="line"><span class="comment"># yum clean all</span></span><br><span class="line"><span class="comment"># dnf makecache</span></span><br><span class="line"><span class="comment"># ifconfig</span></span><br><span class="line"><span class="comment"># yum search ifconfig</span></span><br><span class="line"><span class="comment"># yum provides ifconfig</span></span><br></pre></td></tr></table></figure><h2 id="模块流"><a href="#模块流" class="headerlink" title="模块流"></a>模块流</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">8版本：</span><br><span class="line">仓库：</span><br><span class="line">1 baseos </span><br><span class="line">2 appstream</span><br><span class="line">ruanjian:</span><br><span class="line">单个存储库-&gt;应用软件包以及有依赖关系的多个版本。</span><br><span class="line">[F0]</span><br><span class="line"><span class="comment"># dnf module list</span></span><br><span class="line"><span class="comment"># dnf -y module install perl</span></span><br><span class="line"><span class="comment"># dnf module install</span></span><br><span class="line"><span class="comment"># dnf module install python36:3.6/common</span></span><br><span class="line"><span class="comment"># dnf module list python36</span></span><br><span class="line"><span class="comment"># dnf module list postgresql</span></span><br><span class="line"><span class="comment"># dnf module disable postgresql</span></span><br><span class="line"><span class="comment"># dnf module list postgresql</span></span><br><span class="line"><span class="comment"># dnf module install postgresql:9.6</span></span><br><span class="line"><span class="comment"># dnf module list postgresql</span></span><br><span class="line"><span class="comment"># dnf module disable postgresql:9.6</span></span><br><span class="line"><span class="comment"># dnf module list postgresql</span></span><br><span class="line"><span class="comment"># dnf module enable postgresql:10</span></span><br><span class="line"><span class="comment"># dnf module list postgresql</span></span><br></pre></td></tr></table></figure><h2 id="软件仓库"><a href="#软件仓库" class="headerlink" title="软件仓库"></a>软件仓库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[student@servera yum.repos.d]$ vim rhel_dvd.repo </span><br><span class="line"># 仓库ID(就是名字)</span><br><span class="line">[rhel-8.2-for-x86_64-baseos-rpms]</span><br><span class="line"># 仓库地址</span><br><span class="line">baseurl = http://content.example.com/rhel8.2/x86_64/dvd/BaseOS</span><br><span class="line"># 是否开启仓库,0,false|1,true</span><br><span class="line">enabled = true</span><br><span class="line"># 是否需要公钥验证,也可以用0|1表示</span><br><span class="line">gpgcheck = false</span><br><span class="line"># 描述信息</span><br><span class="line">name = Red Hat Enterprise Linux 8.2 BaseOS (dvd)</span><br><span class="line"># 两个</span><br><span class="line">[rhel-8.2-for-x86_64-appstream-rpms]</span><br><span class="line">baseurl = http://content.example.com/rhel8.2/x86_64/dvd/AppStream</span><br><span class="line">enabled = true</span><br><span class="line">gpgcheck = false</span><br><span class="line">name = Red Hat Enterprise Linux 8.2 AppStream (dvd)</span><br></pre></td></tr></table></figure><p><code>yum repolist</code>查看仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">【servera】</span><br><span class="line"> <span class="built_in">cd</span> /etc/yum.repos.d/</span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># rm -rf ./*</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># yum repolist</span></span><br><span class="line"><span class="comment"># yum -y install lrzsz</span></span><br><span class="line"><span class="comment"># yum provides yum-config-manager</span></span><br><span class="line"><span class="comment"># yum-config-manager --add-repo http://content.example.com/rhel8.0/x86_64/dvd/BaseOS</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># vim content.example.com_rhel8.0_x86_64_dvd_BaseOS.repo</span></span><br><span class="line"><span class="comment"># yum-config-manager --add-repo=http://content.example.com/rhel8.0/x86_64/dvd/AppStream</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># cat content.example.com_rhel8.0_x86_64_dvd_AppStream.repo</span></span><br><span class="line"><span class="comment"># dnf repolist</span></span><br><span class="line"><span class="comment"># yum -y install autofs</span></span><br><span class="line"><span class="comment"># vim /etc/yum.conf          方法1 修改yum配置文件</span></span><br><span class="line"><span class="comment"># yum -y install autofs</span></span><br><span class="line"><span class="comment"># vim /etc/yum.conf</span></span><br><span class="line"><span class="comment"># yum -y install autofs</span></span><br><span class="line"><span class="comment"># vim content.example.com_rhel8.0_x86_64_dvd_BaseOS.repo   方法2 </span></span><br><span class="line"><span class="comment"># vim content.example.com_rhel8.0_x86_64_dvd_AppStream.repo</span></span><br><span class="line"><span class="comment"># dnf repolist</span></span><br><span class="line"><span class="comment"># yum -y install autofs</span></span><br><span class="line"><span class="comment"># vim content.example.com_rhel8.0_x86_64_dvd_AppStream.repo</span></span><br><span class="line"><span class="comment"># vim content.example.com_rhel8.0_x86_64_dvd_BaseOS.repo  方法3</span></span><br><span class="line"></span><br><span class="line">[root@servera yum.repos.d]<span class="comment"># cat content.example.com_rhel8.0_x86_64_dvd_BaseOS.repo content.example.com_rhel8.0_x86_64_dvd_AppStream.repo </span></span><br><span class="line">[content.example.com_rhel8.0_x86_64_dvd_BaseOS]</span><br><span class="line">name=created by dnf config-manager from http://content.example.com/rhel8.0/x86_64/dvd/BaseOS</span><br><span class="line">baseurl=http://content.example.com/rhel8.0/x86_64/dvd/BaseOS</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1 <span class="comment">#如果0就是不检查</span></span><br><span class="line">gpgkey=http://content.example.com/rhel8.0/x86_64/dvd/RPM-GPG-KEY-redhat-release</span><br><span class="line"></span><br><span class="line">[content.example.com_rhel8.0_x86_64_dvd_AppStream]</span><br><span class="line">name=created by dnf config-manager from http://content.example.com/rhel8.0/x86_64/dvd/AppStream</span><br><span class="line">baseurl=http://content.example.com/rhel8.0/x86_64/dvd/AppStream</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://content.example.com/rhel8.0/x86_64/dvd/RPM-GPG-KEY-redhat-release</span><br><span class="line"><span class="comment"># rpm --import http://content.example.com/rhel8.0/x86_64/dvd/RPM-GPG-KEY-redhat-release方法4</span></span><br><span class="line"><span class="comment"># yum -y install autofs</span></span><br><span class="line">remove 和 erase可以卸载</span><br><span class="line"></span><br><span class="line"><span class="comment"># 装包组</span></span><br><span class="line">yum groupinstall <span class="string">&#x27;包组名&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="光盘镜像制作yum源"><a href="#光盘镜像制作yum源" class="headerlink" title="光盘镜像制作yum源"></a>光盘镜像制作yum源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">  254  <span class="built_in">mkdir</span> /content</span><br><span class="line">  255  mount foundation0.ilt.example.com</span><br><span class="line">  256  mount foundation0.ilt.example.com:/content /content/</span><br><span class="line">  </span><br><span class="line"><span class="comment"># vim cd.repo</span></span><br><span class="line">[cd_base]</span><br><span class="line">name=mycdbase</span><br><span class="line">baseurl=file:///content/rhel8.0/x86_64/dvd/BaseOS/</span><br><span class="line">enbaled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">[cd_app]</span><br><span class="line">name=mycdapp</span><br><span class="line">baseurl=file:///content/rhel8.0/x86_64/dvd/AppStream</span><br><span class="line">enbaled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># yum clean all</span></span><br><span class="line"><span class="comment"># yum makecache</span></span><br><span class="line"><span class="comment"># yum repolist</span></span><br><span class="line"><span class="comment"># yum -y install httpd</span></span><br></pre></td></tr></table></figure><h2 id="自制yum存储仓库"><a href="#自制yum存储仓库" class="headerlink" title="自制yum存储仓库"></a>自制yum存储仓库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">【F0】</span><br><span class="line"><span class="comment"># mkdir /content/myrepo</span></span><br><span class="line"><span class="comment"># cp /content/rhel8.0/x86_64/dvd/AppStream/Packages/http* /content/myrepo/</span></span><br><span class="line"><span class="comment"># cd /content/myrepo/</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># createrepo .</span></span><br><span class="line">【servera】</span><br><span class="line"></span><br><span class="line"><span class="comment"># vim /etc/yum.repos.d/f0.repo</span></span><br><span class="line">[f0]</span><br><span class="line">name=</span><br><span class="line">baseurl=http:///content/myrepo</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line"><span class="comment"># dnf makecache</span></span><br><span class="line"><span class="comment"># dnf repolist</span></span><br></pre></td></tr></table></figure><h2 id="配置server端的仓库"><a href="#配置server端的仓库" class="headerlink" title="配置server端的仓库"></a>配置server端的仓库</h2><p>用查找发现apache共享的目录是:&#x2F;content</p><p>在&#x2F;content中自定义一个作为仓库的位置</p><p>在其中加入仓库目录格式下的一些rpm包</p><p>用给该目录建立索引^目的是识别^</p><p>在client端配置仓库的配置文件&#x2F;etc&#x2F;repos.d&#x2F;中加入baseurl</p><p><code>yum repolist</code>可以看到status</p><p>如果想配置公钥，需要放置公钥到跟appstream和baseos的同级目录下，并且在客户端中配置gpgkey</p><h2 id="光盘制作仓库"><a href="#光盘制作仓库" class="headerlink" title="光盘制作仓库"></a>光盘制作仓库</h2><p>与之前的区别就是，先挂载</p><p>然后配置baseurl</p><p>&#x2F;root&#x2F;test&#x2F;rhel8.0&#x2F;x86_64&#x2F;dvd&#x2F;AppStream</p><p>&#x2F;root&#x2F;test&#x2F;rhel8.0&#x2F;x86_64&#x2F;dvd&#x2F;BaseOS</p><h1 id="第十五章-访问linux文件系统"><a href="#第十五章-访问linux文件系统" class="headerlink" title="第十五章 访问linux文件系统"></a>第十五章 访问linux文件系统</h1><h2 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h2><p>组织存储文件的方法</p><h2 id="磁盘命名规则"><a href="#磁盘命名规则" class="headerlink" title="磁盘命名规则"></a>磁盘命名规则</h2><table><thead><tr><th align="left">设备命名模式</th><th>设备类型</th><th></th></tr></thead><tbody><tr><td align="left">&#x2F;dev&#x2F;sd{a..zz}</td><td>SATA, SAS, SCSI, USB</td><td>热插拔</td></tr><tr><td align="left">&#x2F;dev&#x2F;hd[a..z]</td><td>IDE</td><td>IDE接口（Integrated Drive Electronics）是电子集成驱2113动器，是把“硬盘5261控制器”4102与“盘体”集成在一起的硬盘驱动器。</td></tr><tr><td align="left">&#x2F;dev&#x2F;vd{a..zz}</td><td>VirtIO</td><td>虚拟化</td></tr><tr><td align="left">&#x2F;dev&#x2F;nvme0n1</td><td>nvme</td><td>硬盘新的传输标准|固态硬盘</td></tr><tr><td align="left">&#x2F;dev&#x2F;mmcblk0，&#x2F;dev&#x2F;mmcblk1</td><td>SD&#x2F;eMMC存储（SD卡）</td><td></td></tr></tbody></table><h2 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h2><p>针对MBR分区表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4主 primary</span><br><span class="line">3主+1扩展 extend</span><br><span class="line">再想细分的话：</span><br><span class="line">3主+1扩展（逻辑分区，最多分15个）</span><br><span class="line">fdisk</span><br></pre></td></tr></table></figure><h2 id="常见存储管理工具"><a href="#常见存储管理工具" class="headerlink" title="常见存储管理工具"></a>常见存储管理工具</h2><p>挂载与卸载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># lsblk</span></span><br><span class="line"><span class="comment"># ls /dev/vda</span></span><br><span class="line"><span class="comment"># lsblk</span></span><br><span class="line"><span class="comment"># df -TH</span></span><br><span class="line"><span class="comment"># fdisk -l</span></span><br><span class="line"><span class="comment"># blkid</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -s 统计当前目录的大小</span></span><br><span class="line"><span class="comment"># du -sh /etc</span></span><br><span class="line"><span class="comment"># du -sh /boot/</span></span><br><span class="line"><span class="comment"># cat /proc/partitions</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># dd if=/dev/zerp of=myfile bs=1M count=100</span></span><br><span class="line"><span class="comment"># dd if=/dev/zero of=myfile bs=1M count=100</span></span><br><span class="line"><span class="comment"># du -sh .</span></span><br><span class="line"><span class="comment"># ls -lh</span></span><br><span class="line"><span class="comment"># lsblk</span></span><br><span class="line"><span class="comment"># fdisk /dev/vdb</span></span><br><span class="line"><span class="comment"># lsblk</span></span><br><span class="line"><span class="comment"># cd</span></span><br><span class="line"><span class="comment"># mkdir /myvdb</span></span><br><span class="line"><span class="comment"># mount /dev/vdb1 /myvdb/</span></span><br><span class="line"><span class="comment"># mkfs.xfs /dev/vdb1</span></span><br><span class="line"><span class="comment"># mount /dev/vdb1 /myvdb/</span></span><br><span class="line"><span class="comment"># df -TH</span></span><br><span class="line"><span class="comment"># cd /myvdb/</span></span><br><span class="line"><span class="comment"># dd if=/dev/zero of=myfile bs=1M count=90</span></span><br><span class="line"><span class="comment"># ls -lh</span></span><br><span class="line"><span class="comment"># df -TH</span></span><br><span class="line"><span class="comment"># dd if=/dev/zero of=myfile1 bs=1M count=90</span></span><br><span class="line"><span class="comment"># df -TH</span></span><br><span class="line"><span class="comment"># rm -rf ./*</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># df -TH</span></span><br><span class="line"><span class="comment"># cd</span></span><br><span class="line"><span class="comment"># umount /myvdb</span></span><br><span class="line"><span class="comment"># df -TH</span></span><br><span class="line"><span class="comment"># blkid /dev/vdb1</span></span><br><span class="line"><span class="comment"># 通过UUID挂载</span></span><br><span class="line"><span class="comment"># mount UUID=&quot;f18ccbbc-8efb-4561-9ae7-12c12099e55c&quot; /myvdb</span></span><br><span class="line"><span class="comment"># df -TH</span></span><br><span class="line"><span class="comment"># umount /myvdb</span></span><br><span class="line">强制卸载</span><br><span class="line"><span class="comment"># umount /myvdb -l</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># df -TH</span></span><br><span class="line"><span class="comment"># blkid /dev/vdb</span></span><br><span class="line"><span class="comment"># blkid /dev/vdb1</span></span><br></pre></td></tr></table></figure><h2 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title="磁盘分区"></a>磁盘分区</h2><p><code>fdisk /dev/vdb</code></p><p>n 新建</p><p>w 保存</p><p>制作文件系统</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkfs.xfs /dev/vdb1</span><br><span class="line">mkfs -t ext4 /dev/vdb2</span><br></pre></td></tr></table></figure><p>扇区的使用，如果一个扇区没存满但是又没法写进去了，会当作被整个占用，导致显示的存储比实际存储要大</p><h2 id="查找文件-考点"><a href="#查找文件-考点" class="headerlink" title="查找文件^考点^"></a>查找文件^考点^</h2><h3 id="locate，whereis，which"><a href="#locate，whereis，which" class="headerlink" title="locate，whereis，which"></a>locate，whereis，which</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#手动更新数据库</span></span><br><span class="line">updatedb</span><br><span class="line"><span class="comment"># 查找包含该字段的文件</span></span><br><span class="line"><span class="comment"># locate passwd</span></span><br><span class="line"><span class="comment"># touch passwd</span></span><br><span class="line"><span class="comment"># locate passwd</span></span><br><span class="line"><span class="comment"># updatedb</span></span><br><span class="line"><span class="comment"># locate passwd</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># touch mypassword</span></span><br><span class="line"><span class="comment"># locate mypassword</span></span><br><span class="line"><span class="comment"># touch MYPASSWORD</span></span><br><span class="line"><span class="comment"># locate -i mypassword</span></span><br><span class="line"><span class="comment"># updatedb</span></span><br><span class="line"><span class="comment"># 忽略大小写</span></span><br><span class="line"><span class="comment"># locate -i mypassword</span></span><br><span class="line"><span class="comment"># 从环境变量查找二进制文件</span></span><br><span class="line"><span class="comment"># which cat</span></span><br><span class="line"><span class="comment"># which ls</span></span><br><span class="line"><span class="comment"># which pwd</span></span><br><span class="line"><span class="comment"># echo $PATH</span></span><br><span class="line"><span class="comment"># 查命令，配置文件，man手册等等</span></span><br><span class="line"><span class="comment"># whereis passwd</span></span><br></pre></td></tr></table></figure><h3 id="find-考点"><a href="#find-考点" class="headerlink" title="find^考点^"></a>find^考点^</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按名称查，只能精确匹配，加通配符要用“**”</span></span><br><span class="line"><span class="comment"># find . -name pass</span></span><br><span class="line"><span class="comment"># find . -name mypassword</span></span><br><span class="line"><span class="comment"># find . -iname mypassword</span></span><br><span class="line"><span class="comment"># find . -iname &#x27;*pass*&#x27;</span></span><br><span class="line"><span class="comment"># find / -name passwd</span></span><br><span class="line"><span class="comment"># find /home/ -user student</span></span><br><span class="line"><span class="comment"># 忽略大小写</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># man find</span></span><br><span class="line"><span class="comment"># find /home/ -user student -exec ls -l &#123;&#125; \;</span></span><br><span class="line"><span class="comment"># find /home/ -group student -exec ls -l &#123;&#125; \;</span></span><br><span class="line"><span class="comment"># id student</span></span><br><span class="line"><span class="comment"># find /home/ -uid 1000 -exec ls -l &#123;&#125; \;</span></span><br><span class="line"><span class="comment"># find /home/ -gid 1000 -exec ls -l &#123;&#125; \;</span></span><br><span class="line"><span class="comment"># find /home/ -uid 1000 -gid 1000 -exec ls -l &#123;&#125; \;</span></span><br><span class="line"><span class="comment"># find / -user student</span></span><br><span class="line"><span class="comment"># find / -user student &gt; find.true 2&gt; find.error</span></span><br><span class="line"><span class="comment"># cat find.true</span></span><br><span class="line"><span class="comment"># cat find.error</span></span><br><span class="line"><span class="comment"># find /home -type f</span></span><br><span class="line"><span class="comment"># find /home -type l</span></span><br><span class="line"><span class="comment"># find /home -type s</span></span><br><span class="line"><span class="comment"># find /home -type p</span></span><br><span class="line"><span class="comment"># find /dev -type b</span></span><br><span class="line"><span class="comment"># find /dev -type c</span></span><br><span class="line"><span class="comment"># find /dev -type c -exec file &#123;&#125; \;</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># history</span></span><br><span class="line"><span class="comment"># history -w</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line"><span class="comment"># for i in &#123;1..10&#125;;do dd if=/dev/zero of=myfile$i bs=1M count=$i;done</span></span><br><span class="line"><span class="comment"># ls -lh</span></span><br><span class="line"><span class="comment"># find . -type f -size 5M</span></span><br><span class="line"><span class="comment"># find . -type f -size 5M -exec ls -lh &#123;&#125; \;</span></span><br><span class="line"><span class="comment"># find . -type f -size +5M -exec ls -lh &#123;&#125; \;</span></span><br><span class="line"><span class="comment"># find . -type f -size -5M -exec ls -lh &#123;&#125; \;</span></span><br><span class="line"><span class="comment"># ls -l</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># for i in &#123;111,222,333,444,555,666,777&#125;;do chmod =$i myfile$&#123;i:2&#125;;done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ls -lh</span></span><br><span class="line"><span class="comment"># 按权限查</span></span><br><span class="line"><span class="comment"># find . -perm 111</span></span><br><span class="line"><span class="comment"># find . -perm 111 -exec ls -l &#123;&#125; \;</span></span><br><span class="line"><span class="comment"># find . -perm 222 -exec ls -l &#123;&#125; \;</span></span><br><span class="line"><span class="comment"># find . -perm 777 -exec ls -l &#123;&#125; \;</span></span><br><span class="line"><span class="comment"># -，最少要都有权限</span></span><br><span class="line"><span class="comment"># find . -perm -444  -exec ls -l &#123;&#125; \;</span></span><br><span class="line"><span class="comment"># find . -perm /444  -exec ls -l &#123;&#125; \;</span></span><br><span class="line"><span class="comment"># /，任意满足最少一个就可以</span></span><br><span class="line"><span class="comment"># find . -perm /u+r,g+r,o+r  -exec ls -l &#123;&#125; \;</span></span><br><span class="line"><span class="comment"># find . -perm -u+r,g+r,o+r  -exec ls -l &#123;&#125; \;</span></span><br><span class="line"><span class="comment"># history -w</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># find . -type f -a time +1</span></span><br><span class="line"><span class="comment"># 附和条件判断,10&lt;该文件&lt;20，-a-a表并且</span></span><br><span class="line"><span class="comment"># find . -a -size +10M -a -size -20M  </span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="第十六章-服务器管理"><a href="#第十六章-服务器管理" class="headerlink" title="第十六章 服务器管理"></a>第十六章 服务器管理</h1><p>飞机驾驶舱：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dnf search cock</span></span><br><span class="line"><span class="comment"># dnf -y install cockpit</span></span><br><span class="line"><span class="comment"># systemctl list-unit-files | grep cock</span></span><br><span class="line"><span class="comment"># systemctl enable cockpit.socket</span></span><br><span class="line"><span class="comment"># ss -antup|grep cock</span></span><br><span class="line"><span class="comment"># systemctl enable cockpit</span></span><br><span class="line"><span class="comment"># systemctl start  cockpit.service</span></span><br><span class="line"><span class="comment"># ss -antup|grep cock</span></span><br><span class="line">firefox localhost:9090</span><br></pre></td></tr></table></figure><h2 id="模拟环境"><a href="#模拟环境" class="headerlink" title="模拟环境"></a>模拟环境</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 还原 INIT 快照</span></span><br><span class="line"><span class="comment"># 挂载光盘 iso文件</span></span><br><span class="line"><span class="comment"># kiosk身份登陆系统</span></span><br><span class="line">$ <span class="built_in">df</span> -Th|grep media</span><br><span class="line">$ ssh root@localhost <span class="string">&#x27;yum -y install  /run/media/kiosk/CDROM/ex200v82-3.8-210324.x86_64.rpm&#x27;</span></span><br><span class="line">直到出现以下信息，完成。</span><br><span class="line">GRADE</span><br><span class="line">    [kiosk@foundation0 ~]$ exam-grade</span><br><span class="line"></span><br><span class="line">================================================================================</span><br><span class="line"></span><br><span class="line">  Verifying        : ex200v82-3.8-210324.x86_64                             1/1 </span><br><span class="line">Installed products updated.</span><br><span class="line"></span><br><span class="line">Installed:</span><br><span class="line">  ex200v82-3.8-210324.x86_64                                                    </span><br><span class="line"></span><br><span class="line">Complete!</span><br><span class="line">浏览器能看到模拟题OK。</span><br><span class="line">$ init 0</span><br><span class="line"><span class="comment"># 做快照 RHCSA快照环境</span></span><br></pre></td></tr></table></figure><h1 id="第五天大大的总结"><a href="#第五天大大的总结" class="headerlink" title="第五天大大的总结"></a>第五天大大的总结</h1><ul><li>在<code>/etc/profile;/etc/bashrc;~/.bash_profile;~/.bashrc</code>四个配置文件中打印一行信息，四个配置文件都是历史遗留问题，而且是机器启动时就会加载的文件，查看打印的信息可知加载顺序</li><li>对于alias中有很多但是四个配置文件中没有写入这些内容的,是因为不止有这四个配置文件,还有<code>profile.d/</code>目录下的配置文件也生效.</li><li>这脚本没搞明白</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># for i in &#123;111,222,333,444,555,666,777&#125;;do chmod =$i myfile$&#123;i:2&#125;;done</span><br></pre></td></tr></table></figure><blockquote><p>${i:2}截取字符串，截取i的前两个字符留剩下的内容^搞明白了^</p></blockquote><ul><li><p>find搜索东西时，有一部分是&#x2F;proc目录下的文件查不到，是因为process（进程）执行时生成的文件执行完成后就没了</p></li><li><p>dd：生成一个文件，使用&#x2F;dev&#x2F;zero设备用0填充，一块是1m，填充15块</p><p><code>dd if=/dev/zero of=file bs=1M count=15</code></p></li></ul><h2 id="link"><a href="#link" class="headerlink" title="link"></a>link</h2><ul><li><p>软连接</p><p>节点与原文件不同</p><p>可以对目录生效</p><p>快捷方式</p></li><li><p>硬链接</p><p>节点与原文件一样</p><p>不能创建目录的硬链接</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> RHCE,linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友情链接</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[<h1 id="歌单介绍"><a href="#歌单介绍" class="headerlink" title="歌单介绍"></a>歌单介绍</h1><p><font color=#0c74d6 size=4 face="黑体">刘大壮</font> </p><h1 id="歌单格式"><a href="#歌单格式" class="headerlink" title="歌单格式"></a>歌单格式</h1>    <div id="aplayer-fTfzDAQh" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="810482" data-server="kugou" data-type="artist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#3F51B5"    ></div><br># 换行<br><font color=#0c74d6 size=4 face="黑体">南方凯</font>    <div id="aplayer-mmGDDHrf" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="985181" data-server="kugou" data-type="artist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#3F51B5"    ></div><br><br><br>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>comments</title>
      <link href="/comments/index.html"/>
      <url>/comments/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>bangumis</title>
      <link href="/bangumis/index.html"/>
      <url>/bangumis/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>message</title>
      <link href="/message/index.html"/>
      <url>/message/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" href="https://npm.elemecdn.com/nanshen/css/blog/messagebar.css"/><div id="computer">    <div id="maincontent"><br>        <div id="form-wrap"><img src="https://npm.elemecdn.com/cover_img/msg/before.webp"id="beforeimg">            <div id="envelope">                <form>                    <div class="formmain"><img class="headerimg"src="https://npm.elemecdn.com/cover_img/msg/U5bb04af32be544c4b41206d9a42fcacfd.webp"/>                        <div style="padding: 5px 20px;"><center><h3 calss="title3">来自小嘉的留言:</h3></center><center class="comments">有什么想问的？<br>有什么想说的？<br>有什么想吐槽的？<br></center>                            <div class="bottomcontent"><img class="bottomimg"src="https://npm.elemecdn.com/cover_img/msg/U0968ee80fd5c4f05a02bdda9709b041eE.webp"/>                            </div>                        <p class="bottomhr">自动书记人偶竭诚为您服务！</p>                        </div>                    </div>                </form>            </div><img id="afterimg"src="https://npm.elemecdn.com/cover_img/msg/after.webp">        </div>    </div></div><div id="mobile">    <form>        <div class="formmain"><img class="headerimg"src="https://npm.elemecdn.com/cover_img/msg/U5bb04af32be544c4b41206d9a42fcacfd.webp"/>            <div style="padding: 5px 20px;"><center><h3 class="title3">来自小嘉的留言:</h3></center><center class="comments">有什么想问的？<br>有什么想说的？<br>有什么想吐槽的？<br></center>                <div class="bottomcontent"><img src="https://npm.elemecdn.com/cover_img/msg/U0968ee80fd5c4f05a02bdda9709b041eE.webp"class="bottomhr">                </div>            <p class="bottomhr"">自动书记人偶竭诚为您服务！</p>            </div>        </div>    </form></div>]]></content>
      
    </entry>
    
    
  
</search>
